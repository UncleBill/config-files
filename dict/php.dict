abs ; 绝对值
acos ; 反余弦
acosh ; 反双曲余弦
addcslashes ; 以 C 语言风格使用反斜线转义字符串中的字符
addslashes ; 使用反斜线引用字符串
aggregate ; Dynamic class and object aggregation of methods and properties
aggregate_info ; Gets aggregation information for a given object
aggregate_methods ; Dynamic class and object aggregation of methods
aggregate_methods_by_list ; Selective dynamic class methods aggregation to an object
aggregate_properties ; Dynamic aggregation of  class properties to an object
aggregate_properties_by_list ; Selective dynamic class properties aggregation to an object
aggregation_info ; 别名 aggregate_info
AMQPChannel::commitTransaction ; Commit a pending transaction
AMQPChannel::isConnected ; Check the channel connection
AMQPChannel::qos ; Set the Quality Of Service settings for the given channel
AMQPChannel::rollbackTransaction ; Rollback a transaction
AMQPChannel::setPrefetchCount ; Set the number of messages to prefetch from the broker
AMQPChannel::setPrefetchSize ; Set the window size to prefetch from the broker
AMQPChannel::startTransaction ; Start a transaction
AMQPChannel::__construct ; Create an instance of an AMQPChannel object
AMQPConnection::connect ; Establish a connection with the AMQP broker.
AMQPConnection::disconnect ; Closes the connection with the AMQP broker.
AMQPConnection::getHost ; Get the configured host
AMQPConnection::getLogin ; Get the configured login
AMQPConnection::getPassword ; Get the configured password
AMQPConnection::getPort ; Get the configured port
AMQPConnection::getTimeout ; Get the configured timeout
AMQPConnection::getVhost ; Get the configured vhost
AMQPConnection::isConnected ; Determine if the AMQPConnection object is connected to the broker.
AMQPConnection::reconnect ; Closes any open connection and creates a new connection with the AMQP broker.
AMQPConnection::setHost ; Set the amqp host.
AMQPConnection::setLogin ; Set the login.
AMQPConnection::setPassword ; Set the password.
AMQPConnection::setPort ; Set the port.
AMQPConnection::setTimeout ; Set the timeout.
AMQPConnection::setVhost ; Set the amqp virtual host
AMQPConnection::__construct ; Create an instance of AMQPConnection
AMQPEnvelope::getAppId ; Get the message appid
AMQPEnvelope::getBody ; Get the message body
AMQPEnvelope::getContentEncoding ; Get the message contentencoding
AMQPEnvelope::getContentType ; Get the message contenttype
AMQPEnvelope::getCorrelationId ; Get the message correlation id
AMQPEnvelope::getDeliveryTag ; Get the message delivery tag
AMQPEnvelope::getExchange ; Get the message exchange
AMQPEnvelope::getExpiration ; Get the message expiration
AMQPEnvelope::getHeader ; Get a specific message header
AMQPEnvelope::getHeaders ; Get the message headers
AMQPEnvelope::getMessageId ; Get the message id
AMQPEnvelope::getPriority ; Get the message priority
AMQPEnvelope::getReplyTo ; Get the message replyto
AMQPEnvelope::getRoutingKey ; Get the message routing key
AMQPEnvelope::getTimeStamp ; Get the message timestamp
AMQPEnvelope::getType ; Get the message type
AMQPEnvelope::getUserId ; Get the message user id
AMQPEnvelope::isRedelivery ; Whether this is a redelivery of the message
AMQPExchange::bind ; Bind to another exchange
AMQPExchange::declare ; Declare a new exchange on the broker.
AMQPExchange::delete ; Delete the exchange from the broker.
AMQPExchange::getArgument ; Get the argument associated with the given key
AMQPExchange::getArguments ; Get all arguments set on the given exchange
AMQPExchange::getFlags ; Get the flag bitmask
AMQPExchange::getName ; Get the configured name
AMQPExchange::getType ; Get the configured type
AMQPExchange::publish ; Publish a message to an exchange.
AMQPExchange::setArgument ; Set the value for the given key
AMQPExchange::setArguments ; Set all arguments on the exchange
AMQPExchange::setFlags ; Set the flags on an exchange
AMQPExchange::setName ; Set the name of the exchange
AMQPExchange::setType ; Set the type of the exchange
AMQPExchange::__construct ; Create an instance of AMQPExchange
AMQPQueue::ack ; Acknowledge the receipt of a message
AMQPQueue::bind ; Bind the given queue to a routing key on an exchange.
AMQPQueue::cancel ; Cancel a queue binding.
AMQPQueue::consume ; Consume messages from a queue
AMQPQueue::declare ; Declare a new queue
AMQPQueue::delete ; Delete a queue and its contents.
AMQPQueue::get ; Retrieve the next message from the queue.
AMQPQueue::getArgument ; Get the argument associated with the given key
AMQPQueue::getArguments ; Get all arguments set on the given queue
AMQPQueue::getFlags ; Get the flag bitmask
AMQPQueue::getName ; Get the configured name
AMQPQueue::nack ; Mark a message as explicitly not acknowledged.
AMQPQueue::purge ; Purge the contents of a queue
AMQPQueue::setArgument ; Set the value for the given key
AMQPQueue::setArguments ; Set all arguments on the queue
AMQPQueue::setFlags ; Set the queue flags
AMQPQueue::setName ; Set the queue name
AMQPQueue::unbind ; Unbind the queue from a routing key.
AMQPQueue::__construct ; Create an instance of an AMQPQueue object
apache_child_terminate ; 在本次请求结束后终止 apache 子进程
apache_getenv ; Get an Apache subprocess_env variable
apache_get_modules ; Get a list of loaded Apache modules
apache_get_version ; Fetch Apache version
apache_lookup_uri ; 对指定的 URI 执行部分请求并返回所有有关信息
apache_note ; 取得或设置 apache 请求记录
apache_request_headers ; Fetch all HTTP request headers
apache_reset_timeout ; Reset the Apache write timer
apache_response_headers ; Fetch all HTTP response headers
apache_setenv ; Set an Apache subprocess_env variable
APCIterator::current ; 获取当前项
APCIterator::getTotalCount ; 获取总数
APCIterator::getTotalHits ; 获取缓存命中数
APCIterator::getTotalSize ; 获取所有缓存的尺寸大小
APCIterator::key ; Get iterator key获取迭代器的键
APCIterator::next ; 移到下一项
APCIterator::rewind ; 倒退迭代器
APCIterator::valid ; 检查当前位置是否有效
APCIterator::__construct ; 构造一个 APCIterator 迭代器对象
apc_add ; 缓存一个变量到数据存储
apc_bin_dump ; Get a binary dump of the given files and user variables
apc_bin_dumpfile ; Output a binary dump of cached files and user variables to a file
apc_bin_load ; Load a binary dump into the APC file/user cache
apc_bin_loadfile ; Load a binary dump from a file into the APC file/user cache
apc_cache_info ; Retrieves cached information from APC's data store
apc_cas ; Updates an old value with a new value
apc_clear_cache ; 清除APC缓存
apc_compile_file ; Stores a file in the bytecode cache, bypassing all filters.
apc_dec ; Decrease a stored number
apc_define_constants ; Defines a set of constants for retrieval and mass-definition
apc_delete ; 从用户缓存中删除某个变量
apc_delete_file ; Deletes files from the opcode cache
apc_exists ; 检查APC中是否存在某个或者某些key
apc_fetch ; 从缓存中取出存储的变量
apc_inc ; 递增一个储存的数字
apc_load_constants ; Loads a set of constants from the cache
apc_sma_info ; Retrieves APC's Shared Memory Allocation information
apc_store ; Cache a variable in the data store
apd_breakpoint ; Stops the interpreter and waits on a CR from the socket
apd_callstack ; Returns the current call stack as an array
apd_clunk ; Throw a warning and a callstack
apd_continue ; Restarts the interpreter
apd_croak ; Throw an error, a callstack and then exit
apd_dump_function_table ; Outputs the current function table
apd_dump_persistent_resources ; Return all persistent resources as an array
apd_dump_regular_resources ; Return all current regular resources as an array
apd_echo ; Echo to the debugging socket
apd_get_active_symbols ; Get an array of the current variables names in the local scope
apd_set_pprof_trace ; Starts the session debugging
apd_set_session ; Changes or sets the current debugging level
apd_set_session_trace ; Starts the session debugging
apd_set_session_trace_socket ; Starts the remote session debugging
AppendIterator::append ; Appends an iterator
AppendIterator::current ; Gets the current value
AppendIterator::getArrayIterator ; Gets the ArrayIterator
AppendIterator::getInnerIterator ; Gets the inner iterator
AppendIterator::getIteratorIndex ; Gets an index of iterators
AppendIterator::key ; Gets the current key
AppendIterator::next ; Moves to the next element
AppendIterator::rewind ; Rewinds the Iterator
AppendIterator::valid ; Checks validity of the current element
AppendIterator::__construct ; Constructs an AppendIterator
array ; 新建一个数组
ArrayAccess::offsetExists ; 检查一个偏移位置是否存在
ArrayAccess::offsetGet ; 获取一个偏移位置的值
ArrayAccess::offsetSet ; 设置一个偏移位置的值
ArrayAccess::offsetUnset ; 复位一个偏移位置的值
ArrayIterator::append ; Append an element
ArrayIterator::asort ; Sort array by values
ArrayIterator::count ; Count elements
ArrayIterator::current ; Return current array entry
ArrayIterator::getArrayCopy ; Get array copy
ArrayIterator::getFlags ; Get flags
ArrayIterator::key ; Return current array key
ArrayIterator::ksort ; Sort array by keys
ArrayIterator::natcasesort ; Sort an array naturally, case insensitive
ArrayIterator::natsort ; Sort an array naturally
ArrayIterator::next ; Move to next entry
ArrayIterator::offsetExists ; Check if offset exists
ArrayIterator::offsetGet ; Get value for an offset
ArrayIterator::offsetSet ; Set value for an offset
ArrayIterator::offsetUnset ; Unset value for an offset
ArrayIterator::rewind ; Rewind array back to the start
ArrayIterator::seek ; Seek to position
ArrayIterator::serialize ; Serialize
ArrayIterator::setFlags ; Set behaviour flags
ArrayIterator::uasort ; User defined sort
ArrayIterator::uksort ; User defined sort
ArrayIterator::unserialize ; Unserialize
ArrayIterator::valid ; Check whether array contains more entries
ArrayIterator::__construct ; Construct an ArrayIterator
ArrayObject::append ; Appends the value
ArrayObject::asort ; Sort the entries by value
ArrayObject::count ; Get the number of public properties in the ArrayObject
ArrayObject::exchangeArray ; Exchange the array for another one.
ArrayObject::getArrayCopy ; Creates a copy of the ArrayObject.
ArrayObject::getFlags ; Gets the behavior flags.
ArrayObject::getIterator ; Create a new iterator from an ArrayObject instance
ArrayObject::getIteratorClass ; Gets the iterator classname for the ArrayObject.
ArrayObject::ksort ; Sort the entries by key
ArrayObject::natcasesort ; Sort an array using a case insensitive &quot;natural order&quot; algorithm
ArrayObject::natsort ; Sort entries using a &quot;natural order&quot; algorithm
ArrayObject::offsetExists ; Returns whether the requested index exists
ArrayObject::offsetGet ; Returns the value at the specified index
ArrayObject::offsetSet ; Sets the value at the specified index to newval
ArrayObject::offsetUnset ; Unsets the value at the specified index
ArrayObject::serialize ; Serialize an ArrayObject
ArrayObject::setFlags ; Sets the behavior flags.
ArrayObject::setIteratorClass ; Sets the iterator classname for the ArrayObject.
ArrayObject::uasort ; Sort the entries with a user-defined comparison function and maintain key association
ArrayObject::uksort ; Sort the entries by keys using a user-defined comparison function
ArrayObject::unserialize ; Unserialize an ArrayObject
ArrayObject::__construct ; Construct a new array object
array_change_key_case ; 返回字符串键名全为小写或大写的数组
array_chunk ; 将一个数组分割成多个
array_combine ; 创建一个数组，用一个数组的值作为其键名，另一个数组的值作为其值
array_count_values ; 统计数组中所有的值出现的次数
array_diff ; 计算数组的差集
array_diff_assoc ; 带索引检查计算数组的差集
array_diff_key ; 使用键名比较计算数组的差集
array_diff_uassoc ; 用用户提供的回调函数做索引检查来计算数组的差集
array_diff_ukey ; 用回调函数对键名比较计算数组的差集
array_fill ; 用给定的值填充数组
array_fill_keys ; 使用指定的键和值填充数组
array_filter ; 用回调函数过滤数组中的单元
array_flip ; 交换数组中的键和值
array_intersect ; 计算数组的交集
array_intersect_assoc ; 带索引检查计算数组的交集
array_intersect_key ; 使用键名比较计算数组的交集
array_intersect_uassoc ; 带索引检查计算数组的交集，用回调函数比较索引
array_intersect_ukey ; 用回调函数比较键名来计算数组的交集
array_keys ; 返回数组中所有的键名
array_key_exists ; 检查给定的键名或索引是否存在于数组中
array_map ; 将回调函数作用到给定数组的单元上
array_merge ; 合并一个或多个数组
array_merge_recursive ; 递归地合并一个或多个数组
array_multisort ; 对多个数组或多维数组进行排序
array_pad ; 用值将数组填补到指定长度
array_pop ; 将数组最后一个单元弹出（出栈）
array_product ; 计算数组中所有值的乘积
array_push ; 将一个或多个单元压入数组的末尾（入栈）
array_rand ; 从数组中随机取出一个或多个单元
array_reduce ; 用回调函数迭代地将数组简化为单一的值
array_replace ; 使用传递的数组替换第一个数组的元素
array_replace_recursive ; 使用传递的数组递归替换第一个数组的元素
array_reverse ; 返回一个单元顺序相反的数组
array_search ; 在数组中搜索给定的值，如果成功则返回相应的键名
array_shift ; 将数组开头的单元移出数组
array_slice ; 从数组中取出一段
array_splice ; 把数组中的一部分去掉并用其它值取代
array_sum ; 计算数组中所有值的和
array_udiff ; 用回调函数比较数据来计算数组的差集
array_udiff_assoc ; 带索引检查计算数组的差集，用回调函数比较数据
array_udiff_uassoc ; 带索引检查计算数组的差集，用回调函数比较数据和索引
array_uintersect ; 计算数组的交集，用回调函数比较数据
array_uintersect_assoc ; 带索引检查计算数组的交集，用回调函数比较数据
array_uintersect_uassoc ; 带索引检查计算数组的交集，用回调函数比较数据和索引
array_unique ; 移除数组中重复的值
array_unshift ; 在数组开头插入一个或多个单元
array_values ; 返回数组中所有的值
array_walk ; 对数组中的每个成员应用用户函数
array_walk_recursive ; 对数组中的每个成员递归地应用用户函数
arsort ; 对数组进行逆向排序并保持索引关系
asin ; 反正弦
asinh ; 反双曲正弦
asort ; 对数组进行排序并保持索引关系
assert ; 检查一个断言是否为 FALSE
assert_options ; 设置/获取断言的各种标志
atan ; 反正切
atan2 ; 两个参数的反正切
atanh ; 反双曲正切
base64_decode ; 对使用 MIME base64 编码的数据进行解码
base64_encode ; 使用 MIME base64 对数据进行编码
basename ; 返回路径中的文件名部分
base_convert ; 在任意进制之间转换数字
bbcode_add_element ; Adds a bbcode element
bbcode_add_smiley ; Adds a smiley to the parser
bbcode_create ; Create a BBCode Resource
bbcode_destroy ; Close BBCode_container resource
bbcode_parse ; Parse a string following a given rule set
bbcode_set_arg_parser ; Attach another parser in order to use another rule set for argument parsing
bbcode_set_flags ; Set or alter parser options
bcadd ; Add two arbitrary precision numbers
bccomp ; Compare two arbitrary precision numbers
bcdiv ; Divide two arbitrary precision numbers
bcmod ; Get modulus of an arbitrary precision number
bcmul ; Multiply two arbitrary precision number
bcompiler_load ; 从一个 bz 压缩过的文件中读取并创建类
bcompiler_load_exe ; 从一个 bcompiler exe 文件中读取并创建类
bcompiler_parse_class ; 读取一个类的字节码并回调一个用户的函数
bcompiler_read ; 从一个文件句柄中读取并创建类
bcompiler_write_class ; 写入定义过的类的字节码
bcompiler_write_constant ; 写入定义过的常量的字节码
bcompiler_write_exe_footer ; 写入开始位置以及 exe 类型文件的结尾信号
bcompiler_write_file ; 写入 PHP 源码文件的字节码
bcompiler_write_footer ; 写入单个字符 \x00 用于标识编译数据的结尾
bcompiler_write_function ; 以字节码写入定义过的函数
bcompiler_write_functions_from_file ; 以字节码写入一个文件中定义过的所以函数
bcompiler_write_header ; 写入 bcompiler 头
bcompiler_write_included_filename ; 写入一个包含的文件的字节码
bcpow ; Raise an arbitrary precision number to another
bcpowmod ; Raise an arbitrary precision number to another, reduced by a specified modulus
bcscale ; Set default scale parameter for all bc math functions
bcsqrt ; Get the square root of an arbitrary precision number
bcsub ; Subtract one arbitrary precision number from another
bin2hex ; 将二进制数据转换成十六进制表示
bindec ; 二进制转换为十进制
bindtextdomain ; Sets the path for a domain
bind_textdomain_codeset ; Specify the character encoding in which the messages from the DOMAIN message catalog will be returned
boolval ; Get the boolean value of a variable
bson_decode ; 反序列化一个 BSON 对象为 PHP 数组
bson_encode ; 序列化一个 PHP 变量为 BSON 字符串
bzclose ; 关闭一个 bzip2 文件
bzcompress ; 把一个字符串压缩成 bzip2 编码数据
bzdecompress ; 解压经 bzip2 编码过的数据
bzerrno ; 返回一个 bzip2 错误码
bzerror ; 返回包含 bzip2 错误号和错误字符串的一个 array
bzerrstr ; 返回一个 bzip2 的错误字符串
bzflush ; 强制写入所有写缓冲区的数据
bzopen ; 打开一个经 bzip2 压缩过的文件
bzread ; bzip2 文件二进制安全地读取
bzwrite ; 二进制安全地写入 bzip2 文件
CachingIterator::count ; The number of elements in the iterator
CachingIterator::current ; Return the current element
CachingIterator::getCache ; The getCache purpose
CachingIterator::getFlags ; Get flags used
CachingIterator::getInnerIterator ; Returns the inner iterator
CachingIterator::hasNext ; Check whether the inner iterator has a valid next element
CachingIterator::key ; Return the key for the current element
CachingIterator::next ; Move the iterator forward
CachingIterator::offsetExists ; The offsetExists purpose
CachingIterator::offsetGet ; The offsetGet purpose
CachingIterator::offsetSet ; The offsetSet purpose
CachingIterator::offsetUnset ; The offsetUnset purpose
CachingIterator::rewind ; Rewind the iterator
CachingIterator::setFlags ; The setFlags purpose
CachingIterator::valid ; Check whether the current element is valid
CachingIterator::__construct ; Construct a new CachingIterator object for the iterator.
CachingIterator::__toString ; Return the string representation of the current element
Cairo::availableFonts ; Retrieves the availables font types
Cairo::availableSurfaces ; Retrieves all available surfaces
Cairo::statusToString ; Retrieves the current status as string
Cairo::version ; Retrives cairo's library version
Cairo::versionString ; Retrieves cairo version as string
CairoContext::appendPath ; Appends a path to current path
CairoContext::arc ; Adds a circular arc
CairoContext::arcNegative ; Adds a negative arc
CairoContext::clip ; Establishes a new clip region
CairoContext::clipExtents ; Computes the area inside the current clip
CairoContext::clipPreserve ; Establishes a new clip region from the current clip
CairoContext::clipRectangleList ; Retrieves the current clip as a list of rectangles
CairoContext::closePath ; Closes the current path
CairoContext::copyPage ; Emits the current page
CairoContext::copyPath ; Creates a copy of the current path
CairoContext::copyPathFlat ; Gets a flattened copy of the current path
CairoContext::curveTo ; Adds a curve
CairoContext::deviceToUser ; Transform a coordinate
CairoContext::deviceToUserDistance ; Transform a distance
CairoContext::fill ; Fills the current path
CairoContext::fillExtents ; Computes the filled area
CairoContext::fillPreserve ; Fills and preserve the current path
CairoContext::fontExtents ; Get the font extents
CairoContext::getAntialias ; Retrives the current antialias mode
CairoContext::getCurrentPoint ; The getCurrentPoint purpose
CairoContext::getDash ; The getDash purpose
CairoContext::getDashCount ; The getDashCount purpose
CairoContext::getFillRule ; The getFillRule purpose
CairoContext::getFontFace ; The getFontFace purpose
CairoContext::getFontMatrix ; The getFontMatrix purpose
CairoContext::getFontOptions ; The getFontOptions purpose
CairoContext::getGroupTarget ; The getGroupTarget purpose
CairoContext::getLineCap ; The getLineCap purpose
CairoContext::getLineJoin ; The getLineJoin purpose
CairoContext::getLineWidth ; The getLineWidth purpose
CairoContext::getMatrix ; The getMatrix purpose
CairoContext::getMiterLimit ; The getMiterLimit purpose
CairoContext::getOperator ; The getOperator purpose
CairoContext::getScaledFont ; The getScaledFont purpose
CairoContext::getSource ; The getSource purpose
CairoContext::getTarget ; The getTarget purpose
CairoContext::getTolerance ; The getTolerance purpose
CairoContext::glyphPath ; The glyphPath purpose
CairoContext::hasCurrentPoint ; The hasCurrentPoint purpose
CairoContext::identityMatrix ; The identityMatrix purpose
CairoContext::inFill ; The inFill purpose
CairoContext::inStroke ; The inStroke purpose
CairoContext::lineTo ; The lineTo purpose
CairoContext::mask ; The mask purpose
CairoContext::maskSurface ; The maskSurface purpose
CairoContext::moveTo ; The moveTo purpose
CairoContext::newPath ; The newPath purpose
CairoContext::newSubPath ; The newSubPath purpose
CairoContext::paint ; The paint purpose
CairoContext::paintWithAlpha ; The paintWithAlpha purpose
CairoContext::pathExtents ; The pathExtents purpose
CairoContext::popGroup ; The popGroup purpose
CairoContext::popGroupToSource ; The popGroupToSource purpose
CairoContext::pushGroup ; The pushGroup purpose
CairoContext::pushGroupWithContent ; The pushGroupWithContent purpose
CairoContext::rectangle ; The rectangle purpose
CairoContext::relCurveTo ; The relCurveTo purpose
CairoContext::relLineTo ; The relLineTo purpose
CairoContext::relMoveTo ; The relMoveTo purpose
CairoContext::resetClip ; The resetClip purpose
CairoContext::restore ; The restore purpose
CairoContext::rotate ; The rotate purpose
CairoContext::save ; The save purpose
CairoContext::scale ; The scale purpose
CairoContext::selectFontFace ; The selectFontFace purpose
CairoContext::setAntialias ; The setAntialias purpose
CairoContext::setDash ; The setDash purpose
CairoContext::setFillRule ; The setFillRule purpose
CairoContext::setFontFace ; The setFontFace purpose
CairoContext::setFontMatrix ; The setFontMatrix purpose
CairoContext::setFontOptions ; The setFontOptions purpose
CairoContext::setFontSize ; The setFontSize purpose
CairoContext::setLineCap ; The setLineCap purpose
CairoContext::setLineJoin ; The setLineJoin purpose
CairoContext::setLineWidth ; The setLineWidth purpose
CairoContext::setMatrix ; The setMatrix purpose
CairoContext::setMiterLimit ; The setMiterLimit purpose
CairoContext::setOperator ; The setOperator purpose
CairoContext::setScaledFont ; The setScaledFont purpose
CairoContext::setSource ; The setSource purpose
CairoContext::setSourceRGB ; The setSourceRGB purpose
CairoContext::setSourceRGBA ; The setSourceRGBA purpose
CairoContext::setSourceSurface ; The setSourceSurface purpose
CairoContext::setTolerance ; The setTolerance purpose
CairoContext::showPage ; The showPage purpose
CairoContext::showText ; The showText purpose
CairoContext::status ; The status purpose
CairoContext::stroke ; The stroke purpose
CairoContext::strokeExtents ; The strokeExtents purpose
CairoContext::strokePreserve ; The strokePreserve purpose
CairoContext::textExtents ; The textExtents purpose
CairoContext::textPath ; The textPath purpose
CairoContext::transform ; The transform purpose
CairoContext::translate ; The translate purpose
CairoContext::userToDevice ; The userToDevice purpose
CairoContext::userToDeviceDistance ; The userToDeviceDistance purpose
CairoContext::__construct ; Creates a new CairoContext
CairoFontFace::getType ; Retrieves the font face type
CairoFontFace::status ; Check for CairoFontFace errors
CairoFontFace::__construct ; Creates a new CairoFontFace object
CairoFontOptions::equal ; The equal purpose
CairoFontOptions::getAntialias ; The getAntialias purpose
CairoFontOptions::getHintMetrics ; The getHintMetrics purpose
CairoFontOptions::getHintStyle ; The getHintStyle purpose
CairoFontOptions::getSubpixelOrder ; The getSubpixelOrder purpose
CairoFontOptions::hash ; The hash purpose
CairoFontOptions::merge ; The merge purpose
CairoFontOptions::setAntialias ; The setAntialias purpose
CairoFontOptions::setHintMetrics ; The setHintMetrics purpose
CairoFontOptions::setHintStyle ; The setHintStyle purpose
CairoFontOptions::setSubpixelOrder ; The setSubpixelOrder purpose
CairoFontOptions::status ; The status purpose
CairoFontOptions::__construct ; The __construct purpose
CairoFormat::strideForWidth ; Provides an appropiate stride to use
CairoGradientPattern::addColorStopRgb ; The addColorStopRgb purpose
CairoGradientPattern::addColorStopRgba ; The addColorStopRgba purpose
CairoGradientPattern::getColorStopCount ; The getColorStopCount purpose
CairoGradientPattern::getColorStopRgba ; The getColorStopRgba purpose
CairoGradientPattern::getExtend ; The getExtend purpose
CairoGradientPattern::setExtend ; The setExtend purpose
CairoImageSurface::createForData ; The createForData purpose
CairoImageSurface::createFromPng ; Creates a new CairoImageSurface form a png image file
CairoImageSurface::getData ; Gets the image data as string
CairoImageSurface::getFormat ; Get the image format
CairoImageSurface::getHeight ; Retrieves the height of the CairoImageSurface
CairoImageSurface::getStride ; The getStride purpose
CairoImageSurface::getWidth ; Retrieves the width of the CairoImageSurface
CairoImageSurface::__construct ; Creates a new CairoImageSurface
CairoLinearGradient::getPoints ; The getPoints purpose
CairoLinearGradient::__construct ; The __construct purpose
CairoMatrix::initIdentity ; Creates a new identity matrix
CairoMatrix::initRotate ; Creates a new rotated matrix
CairoMatrix::initScale ; Creates a new scaling matrix
CairoMatrix::initTranslate ; Creates a new translation matrix
CairoMatrix::invert ; The invert purpose
CairoMatrix::multiply ; The multiply purpose
CairoMatrix::rotate ; The rotate purpose
CairoMatrix::scale ; Applies scaling to a matrix
CairoMatrix::transformDistance ; The transformDistance purpose
CairoMatrix::transformPoint ; The transformPoint purpose
CairoMatrix::translate ; The translate purpose
CairoMatrix::__construct ; Creates a new CairoMatrix object
CairoPattern::getMatrix ; The getMatrix purpose
CairoPattern::getType ; The getType purpose
CairoPattern::setMatrix ; The setMatrix purpose
CairoPattern::status ; The status purpose
CairoPattern::__construct ; The __construct purpose
CairoPdfSurface::setSize ; The setSize purpose
CairoPdfSurface::__construct ; The __construct purpose
CairoPsSurface::dscBeginPageSetup ; The dscBeginPageSetup purpose
CairoPsSurface::dscBeginSetup ; The dscBeginSetup purpose
CairoPsSurface::dscComment ; The dscComment purpose
CairoPsSurface::getEps ; The getEps purpose
CairoPsSurface::getLevels ; The getLevels purpose
CairoPsSurface::levelToString ; The levelToString purpose
CairoPsSurface::restrictToLevel ; The restrictToLevel purpose
CairoPsSurface::setEps ; The setEps purpose
CairoPsSurface::setSize ; The setSize purpose
CairoPsSurface::__construct ; The __construct purpose
CairoRadialGradient::getCircles ; The getCircles purpose
CairoRadialGradient::__construct ; The __construct purpose
CairoScaledFont::extents ; The extents purpose
CairoScaledFont::getCtm ; The getCtm purpose
CairoScaledFont::getFontFace ; The getFontFace purpose
CairoScaledFont::getFontMatrix ; The getFontMatrix purpose
CairoScaledFont::getFontOptions ; The getFontOptions purpose
CairoScaledFont::getScaleMatrix ; The getScaleMatrix purpose
CairoScaledFont::getType ; The getType purpose
CairoScaledFont::glyphExtents ; The glyphExtents purpose
CairoScaledFont::status ; The status purpose
CairoScaledFont::textExtents ; The textExtents purpose
CairoScaledFont::__construct ; The __construct purpose
CairoSolidPattern::getRgba ; The getRgba purpose
CairoSolidPattern::__construct ; The __construct purpose
CairoSurface::copyPage ; The copyPage purpose
CairoSurface::createSimilar ; The createSimilar purpose
CairoSurface::finish ; The finish purpose
CairoSurface::flush ; The flush purpose
CairoSurface::getContent ; The getContent purpose
CairoSurface::getDeviceOffset ; The getDeviceOffset purpose
CairoSurface::getFontOptions ; The getFontOptions purpose
CairoSurface::getType ; The getType purpose
CairoSurface::markDirty ; The markDirty purpose
CairoSurface::markDirtyRectangle ; The markDirtyRectangle purpose
CairoSurface::setDeviceOffset ; The setDeviceOffset purpose
CairoSurface::setFallbackResolution ; The setFallbackResolution purpose
CairoSurface::showPage ; The showPage purpose
CairoSurface::status ; The status purpose
CairoSurface::writeToPng ; The writeToPng purpose
CairoSurface::__construct ; The __construct purpose
CairoSurfacePattern::getExtend ; The getExtend purpose
CairoSurfacePattern::getFilter ; The getFilter purpose
CairoSurfacePattern::getSurface ; The getSurface purpose
CairoSurfacePattern::setExtend ; The setExtend purpose
CairoSurfacePattern::setFilter ; The setFilter purpose
CairoSurfacePattern::__construct ; The __construct purpose
CairoSvgSurface::getVersions ; Used to retrieve a list of supported SVG versions
CairoSvgSurface::restrictToVersion ; The restrictToVersion purpose
CairoSvgSurface::versionToString ; The versionToString purpose
CairoSvgSurface::__construct ; The __construct purpose
cairo_create ; Returns a new CairoContext object on the requested surface.
cairo_font_face_get_type ; Description
cairo_font_options_create ; Description
cairo_font_options_equal ; Description
cairo_font_options_get_antialias ; Description
cairo_font_options_get_hint_metrics ; Description
cairo_font_options_get_hint_style ; Description
cairo_font_options_get_subpixel_order ; Description
cairo_font_options_hash ; Description
cairo_font_options_merge ; Description
cairo_font_options_set_antialias ; Description
cairo_font_options_set_hint_metrics ; Description
cairo_font_options_set_hint_style ; Description
cairo_font_options_set_subpixel_order ; Description
cairo_font_options_status ; Description
cairo_format_stride_for_width ; Description
cairo_image_surface_create ; Description
cairo_image_surface_create_for_data ; Description
cairo_image_surface_create_from_png ; Description
cairo_image_surface_get_data ; Description
cairo_image_surface_get_format ; Description
cairo_image_surface_get_height ; Description
cairo_image_surface_get_stride ; Description
cairo_image_surface_get_width ; Description
cairo_matrix_create_translate ; 别名 CairoMatrix::initTranslate
cairo_matrix_invert ; Description
cairo_matrix_multiply ; Description
cairo_matrix_rotate ; Description
cairo_matrix_transform_distance ; Description
cairo_matrix_transform_point ; Description
cairo_matrix_translate ; Description
cairo_pattern_add_color_stop_rgb ; Description
cairo_pattern_add_color_stop_rgba ; Description
cairo_pattern_create_for_surface ; Description
cairo_pattern_create_linear ; Description
cairo_pattern_create_radial ; Description
cairo_pattern_create_rgb ; Description
cairo_pattern_create_rgba ; Description
cairo_pattern_get_color_stop_count ; Description
cairo_pattern_get_color_stop_rgba ; Description
cairo_pattern_get_extend ; Description
cairo_pattern_get_filter ; Description
cairo_pattern_get_linear_points ; Description
cairo_pattern_get_matrix ; Description
cairo_pattern_get_radial_circles ; Description
cairo_pattern_get_rgba ; Description
cairo_pattern_get_surface ; Description
cairo_pattern_get_type ; Description
cairo_pattern_set_extend ; Description
cairo_pattern_set_filter ; Description
cairo_pattern_set_matrix ; Description
cairo_pattern_status ; Description
cairo_pdf_surface_create ; Description
cairo_pdf_surface_set_size ; Description
cairo_ps_get_levels ; Description
cairo_ps_level_to_string ; Description
cairo_ps_surface_create ; Description
cairo_ps_surface_dsc_begin_page_setup ; Description
cairo_ps_surface_dsc_begin_setup ; Description
cairo_ps_surface_dsc_comment ; Description
cairo_ps_surface_get_eps ; Description
cairo_ps_surface_restrict_to_level ; Description
cairo_ps_surface_set_eps ; Description
cairo_ps_surface_set_size ; Description
cairo_scaled_font_create ; Description
cairo_scaled_font_extents ; Description
cairo_scaled_font_get_ctm ; Description
cairo_scaled_font_get_font_face ; Description
cairo_scaled_font_get_font_matrix ; Description
cairo_scaled_font_get_font_options ; Description
cairo_scaled_font_get_scale_matrix ; Description
cairo_scaled_font_get_type ; Description
cairo_scaled_font_glyph_extents ; Description
cairo_scaled_font_status ; Description
cairo_scaled_font_text_extents ; Description
cairo_surface_copy_page ; Description
cairo_surface_create_similar ; Description
cairo_surface_finish ; Description
cairo_surface_flush ; Description
cairo_surface_get_content ; Description
cairo_surface_get_device_offset ; Description
cairo_surface_get_font_options ; Description
cairo_surface_get_type ; Description
cairo_surface_mark_dirty ; Description
cairo_surface_mark_dirty_rectangle ; Description
cairo_surface_set_device_offset ; Description
cairo_surface_set_fallback_resolution ; Description
cairo_surface_show_page ; Description
cairo_surface_status ; Description
cairo_surface_write_to_png ; Description
cairo_svg_surface_create ; Description
cairo_svg_surface_restrict_to_version ; Description
cairo_svg_version_to_string ; Description
calculhmac ; Obtain a hmac key (needs 2 arguments)
calcul_hmac ; Obtain a hmac key (needs 8 arguments)
CallbackFilterIterator::accept ; Calls the callback with the current value, the current key and the inner iterator as arguments
CallbackFilterIterator::__construct ; Create a filtered iterator from another iterator
call_user_func ; Call the callback given by the first parameter
call_user_func_array ; Call a callback with an array of parameters
call_user_method ; 对特定对象调用用户方法（已废弃）
call_user_method_array ; 调用一个用户方法，同时传递参数数组（已废弃）
cal_days_in_month ; 返回某个历法中某年中某月的天数
cal_from_jd ; 转换Julian Day计数到一个支持的历法。
cal_info ; 返回选定历法的信息
cal_to_jd ; 从一个支持的历法转变为Julian Day计数。
ceil ; 进一法取整
chdb::get ; Gets the value associated with a key
chdb::__construct ; Creates a chdb instance
chdb_create ; Creates a chdb file
chdir ; 改变目录
checkdate ; 验证一个格里高里日期
checkdnsrr ; Check DNS records corresponding to a given Internet host name or IP address
chgrp ; 改变文件所属的组
chmod ; 改变文件模式
chop ; rtrim 的别名
chown ; 改变文件的所有者
chr ; 返回指定的字符
chroot ; 改变根目录
chunk_split ; 将字符串分割成小块
classkit_import ; Import new class method definitions from a file
classkit_method_add ; Dynamically adds a new method to a given class
classkit_method_copy ; Copies a method from class to another
classkit_method_redefine ; Dynamically changes the code of the given method
classkit_method_remove ; Dynamically removes the given method
classkit_method_rename ; Dynamically changes the name of the given method
class_alias ; 为一个类创建别名
class_exists ; 检查类是否已定义
class_implements ; 返回指定的类实现的所有接口。
class_parents ; 返回指定类的父类。
class_uses ; Return the traits used by the given class
clearstatcache ; 清除文件状态缓存
closedir ; 关闭目录句柄
closelog ; Close connection to system logger
Closure::bind ; Duplicates a closure with a specific bound object and class scope
Closure::bindTo ; Duplicates the closure with a new bound object and class scope
Closure::__construct ; Constructor that disallows instantiation
Collator::asort ; Sort array maintaining index association
Collator::compare ; Compare two Unicode strings
Collator::create ; Create a collator
Collator::getAttribute ; Get collation attribute value
Collator::getErrorCode ; Get collator's last error code
Collator::getErrorMessage ; Get text for collator's last error code
Collator::getLocale ; Get the locale name of the collator
Collator::getSortKey ; Get sorting key for a string
Collator::getStrength ; Get current collation strength
Collator::setAttribute ; Set collation attribute
Collator::setStrength ; Set collation strength
Collator::sort ; Sort array using specified collator
Collator::sortWithSortKeys ; Sort array using specified collator and sort keys
Collator::__construct ; Create a collator
compact ; 建立一个数组，包括变量名和它们的值
com_addref ; 增加组件引用计数。[被废弃]
com_create_guid ; Generate a globally unique identifier (GUID)
com_event_sink ; Connect events from a COM object to a PHP object
com_get ; 获取 COM 组件的属性值 [被废弃]
com_get_active_object ; Returns a handle to an already running instance of a COM object
com_invoke ; 调用 COM 组件的方法。
com_isenum ; 获取一个 IEnumVariant
com_load ; 创建新的 COM 组件的引用
com_load_typelib ; 装载一个 Typelib
com_message_pump ; Process COM messages, sleeping for up to timeoutms milliseconds
com_print_typeinfo ; Print out a PHP class definition for a dispatchable interface
com_propget ; com_get 的别名
com_propput ; com_set 的别名
com_propset ; com_set 的别名
com_release ; 减少组件引用计数。[被废弃]
com_set ; 给 COM 组件的属性赋值
Cond::broadcast ; Broadcast a Condition
Cond::create ; Create a Condition
Cond::destroy ; Destroy a Condition
Cond::signal ; Signal a Condition
Cond::wait ; Wait for Condition
connection_aborted ; 检查客户端是否已经断开
connection_status ; 返回连接的状态位
connection_timeout ; 检查脚本是否已超时
constant ; 返回一个常量的值
Constants for PDO_4D ; Constants for PDO_4D
Context parameters ; Context parameter listing
convert_cyr_string ; 将字符由一种 Cyrillic 字符转换成另一种
convert_uudecode ; 解码一个 uuencode 编码的字符串
convert_uuencode ; 使用 uuencode 编码一个字符串
copy ; 拷贝文件
cos ; 余弦
cosh ; 双曲余弦
count ; 计算数组中的单元数目或对象中的属性个数
Countable::count ; Count elements of an object
Counter::bumpValue ; 修改计数器的当前值。
Counter::getMeta ; 返回计数器的部分元信息。
Counter::getNamed ; 取回一个名称已存在的计数器。
Counter::getValue ; 获取计数器的当前值。
Counter::resetValue ; 重置计数器的当前值。
Counter::setCounterClass ; 设置由 Counter::getNamed 返回的计数器类。
Counter::__construct ; 创建一个包含单一数值的计数器实例。
counter_bump ; 修改简单计数器的当前值。
counter_bump_value ; 更新计数器资源的当前值。
counter_create ; 创建一个包含单个数值的计数器。
counter_get ; 获取简单计数器的当前值。
counter_get_meta ; 返回计数器资源的部分元信息。
counter_get_named ; 按名称查询一个已存在的计数器，并作为资源返回。
counter_get_value ; 获取计数器资源的当前值。
counter_reset ; 重置简单计数器的当前值。
counter_reset_value ; 重置计数器资源的当前值。
count_chars ; 返回字符串所用字符的信息
crack_check ; Performs an obscure check with the given password
crack_closedict ; Closes an open CrackLib dictionary
crack_getlastmessage ; Returns the message from the last obscure check
crack_opendict ; Opens a new CrackLib dictionary
crc32 ; 计算一个字符串的 crc32 多项式
create_function ; Create an anonymous (lambda-style) function
crypt ; 单向字符串散列
ctype_alnum ; Check for alphanumeric character(s)
ctype_alpha ; Check for alphabetic character(s)
ctype_cntrl ; Check for control character(s)
ctype_digit ; Check for numeric character(s)
ctype_graph ; Check for any printable character(s) except space
ctype_lower ; Check for lowercase character(s)
ctype_print ; Check for printable character(s)
ctype_space ; Check for whitespace character(s)
ctype_upper ; Check for uppercase character(s)
ctype_xdigit ; Check for character(s) representing a hexadecimal digit
cubrid_affected_rows ; Return the number of rows affected by the last SQL statement
cubrid_bind ; Bind variables to a prepared statement as parameters
cubrid_client_encoding ; Return the current CUBRID connection charset
cubrid_close ; Close CUBRID connection
cubrid_close_prepare ; Close the request handle
cubrid_close_request ; Close the request handle
cubrid_column_names ; Get the column names in result
cubrid_column_types ; Get column types in result
cubrid_col_get ; Get contents of collection type column using OID
cubrid_col_size ; Get the number of elements in collection type column using OID
cubrid_commit ; Commit a transaction
cubrid_connect ; Open a connection to a CUBRID Server
cubrid_connect_with_url ; Establish the environment for connecting to CUBRID server
cubrid_current_oid ; Get OID of the current cursor location
cubrid_data_seek ; Move the internal row pointer of the CUBRID result
cubrid_db_name ; Get db name from results of cubrid_list_dbs
cubrid_disconnect ; Close a database connection
cubrid_drop ; Delete an instance using OID
cubrid_errno ; Return the numerical value of the error message from previous CUBRID operation
cubrid_error ; Get the error message
cubrid_error_code ; Get error code for the most recent function call
cubrid_error_code_facility ; Get the facility code of error
cubrid_error_msg ; Get last error message for the most recent function call
cubrid_execute ; Execute a prepared SQL statement
cubrid_fetch ; Fetch the next row from a result set
cubrid_fetch_array ; Fetch a result row as an associative array, a numeric array, or both
cubrid_fetch_assoc ; Return the associative array that corresponds to the fetched row
cubrid_fetch_field ; Get column information from a result and return as an object
cubrid_fetch_lengths ; Return an array with the lengths of the values of each field from the current row
cubrid_fetch_object ; Fetche the next row and returns it as an object
cubrid_fetch_row ; Return a numerical array with the values of the current row
cubrid_field_flags ; Return a string with the flags of the given field offset
cubrid_field_len ; Get the maximum length of the specified field
cubrid_field_name ; Return the name of the specified field index
cubrid_field_seek ; Move the result set cursor to the specified field offset
cubrid_field_table ; Return the name of the table of the specified field
cubrid_field_type ; Return the type of the column corresponding to the given field offset
cubrid_free_result ; Free the memory occupied by the result data
cubrid_get ; Get a column using OID
cubrid_get_autocommit ; Get auto-commit mode of the connection
cubrid_get_charset ; Return the current CUBRID connection charset
cubrid_get_class_name ; Get the class name using OID
cubrid_get_client_info ; Return the client library version
cubrid_get_db_parameter ; Returns the CUBRID database parameters
cubrid_get_query_timeout ; Get the query timeout value of the request
cubrid_get_server_info ; Return the CUBRID server version
cubrid_insert_id ; Return the ID generated for the last updated AUTO_INCREMENT column
cubrid_is_instance ; Check whether the instance pointed by OID exists
cubrid_list_dbs ; Return an array with the list of all existing CUBRID databases
cubrid_load_from_glo ; Read data from a GLO instance and save it in a file
cubrid_lob2_bind ; Bind a lob object or a string as a lob object to a prepared statement as parameters.
cubrid_lob2_close ; Close LOB object.
cubrid_lob2_export ; Export the lob object to a file.
cubrid_lob2_import ; Import BLOB/CLOB data from a file.
cubrid_lob2_new ; Create a lob object.
cubrid_lob2_read ; Read from BLOB/CLOB data.
cubrid_lob2_seek ; Move the cursor of a lob object.
cubrid_lob2_seek64 ; Move the cursor of a lob object.
cubrid_lob2_size ; Get a lob object's size.
cubrid_lob2_size64 ; Get a lob object's size.
cubrid_lob2_tell ; Tell the cursor position of the LOB object.
cubrid_lob2_tell64 ; Tell the cursor position of the LOB object.
cubrid_lob2_write ; Write to a lob object.
cubrid_lob_close ; Close BLOB/CLOB data
cubrid_lob_export ; Export BLOB/CLOB data to file
cubrid_lob_get ; Get BLOB/CLOB data
cubrid_lob_send ; Read BLOB/CLOB data and send straight to browser
cubrid_lob_size ; Get BLOB/CLOB data size
cubrid_lock_read ; Set a read lock on the given OID
cubrid_lock_write ; Set a write lock on the given OID
cubrid_move_cursor ; Move the cursor in the result
cubrid_new_glo ; Create a glo instance
cubrid_next_result ; Get result of next query when executing multiple SQL statements
cubrid_num_cols ; Return the number of columns in the result set
cubrid_num_fields ; Return the number of columns in the result set
cubrid_num_rows ; Get the number of rows in the result set
cubrid_pconnect ; Open a persistent connection to a CUBRID server
cubrid_pconnect_with_url ; Open a persistent connection to CUBRID server
cubrid_ping ; Ping a server connection or reconnect if there is no connection
cubrid_prepare ; Prepare an SQL statement for execution
cubrid_put ; Update a column using OID
cubrid_query ; Send a CUBRID query
cubrid_real_escape_string ; Escape special characters in a string for use in an SQL statement
cubrid_result ; Return the value of a specific field in a specific row
cubrid_rollback ; Roll back a transaction
cubrid_save_to_glo ; Save requested file in a GLO instance
cubrid_schema ; Get the requested schema information
cubrid_send_glo ; Read data from glo and send it to std output
cubrid_seq_drop ; Delete an element from sequence type column using OID
cubrid_seq_insert ; Insert an element to a sequence type column using OID
cubrid_seq_put ; Update the element value of sequence type column using OID
cubrid_set_add ; Insert a single element to set type column using OID
cubrid_set_autocommit ; Set autocommit mode of the connection
cubrid_set_db_parameter ; Sets the CUBRID database parameters
cubrid_set_drop ; Delete an element from set type column using OID
cubrid_set_query_timeout ; Set the timeout time of query execution
cubrid_unbuffered_query ; Perform a query without fetching the results into memory
cubrid_version ; Get the CUBRID PHP module's version
CURL context options ; CURL context option listing
curl_close ; 关闭一个cURL会话
curl_copy_handle ; 复制一个cURL句柄和它的所有选项
curl_errno ; 返回最后一次的错误号
curl_error ; 返回一个保护当前会话最近一次错误的字符串
curl_exec ; 执行一个cURL会话
curl_getinfo ; 获取一个cURL连接资源句柄的信息
curl_init ; 初始化一个cURL会话
curl_multi_add_handle ; 向curl批处理会话中添加单独的curl句柄
curl_multi_close ; 关闭一组cURL句柄
curl_multi_exec ; 运行当前 cURL 句柄的子连接
curl_multi_getcontent ; 如果设置了CURLOPT_RETURNTRANSFER，则返回获取的输出的文本流
curl_multi_info_read ; 获取当前解析的cURL的相关传输信息
curl_multi_init ; 返回一个新cURL批处理句柄
curl_multi_remove_handle ; 移除curl批处理句柄资源中的某个句柄资源
curl_multi_select ; 等待所有cURL批处理中的活动连接
curl_setopt ; 设置一个cURL传输选项
curl_setopt_array ; 为cURL传输会话批量设置选项
curl_version ; 获取cURL版本信息
current ; 返回数组中的当前单元
cyrus_authenticate ; Authenticate against a Cyrus IMAP server
cyrus_bind ; Bind callbacks to a Cyrus IMAP connection
cyrus_close ; Close connection to a Cyrus IMAP server
cyrus_connect ; Connect to a Cyrus IMAP server
cyrus_query ; Send a query to a Cyrus IMAP server
cyrus_unbind ; Unbind ...
data:// ; 数据（RFC 2397）
date ; 格式化一个本地时间／日期
DateInterval::createFromDateString ; Sets up a DateInterval from the relative parts of the string
DateInterval::format ; Formats the interval
DateInterval::__construct ; Creates a new DateInterval object
DatePeriod::__construct ; Creates a new DatePeriod object
DateTime::createFromFormat ; Returns new DateTime object formatted according to the specified format
DateTime::diff ; Returns the difference between two DateTime objects
DateTime::format ; Returns date formatted according to given format
DateTime::getLastErrors ; Returns the warnings and errors
DateTime::getOffset ; Returns the timezone offset
DateTime::getTimestamp ; Gets the Unix timestamp
DateTime::getTimezone ; Return time zone relative to given DateTime
DateTime::modify ; Alters the timestamp
DateTime::setDate ; Sets the date
DateTime::setISODate ; Sets the ISO date
DateTime::setTime ; Sets the time
DateTime::setTimestamp ; Sets the date and time based on an Unix timestamp
DateTime::setTimezone ; Sets the time zone for the DateTime object
DateTime::__construct ; Returns new DateTime object
DateTime::__set_state ; The __set_state handler
DateTime::__wakeup ; The __wakeup handler
DateTimeZone::getLocation ; Returns location information for a timezone
DateTimeZone::getName ; Returns the name of the timezone
DateTimeZone::getOffset ; Returns the timezone offset from GMT
DateTimeZone::getTransitions ; Returns all transitions for the timezone
DateTimeZone::listAbbreviations ; Returns associative array containing dst, offset and the timezone name
DateTimeZone::listIdentifiers ; Returns numerically index array with all timezone identifiers
DateTimeZone::__construct ; Creates new DateTimeZone object
date_add ; 别名 DateTime::add
date_create ; 别名 DateTime::__construct
date_create_from_format ; 别名 DateTime::createFromFormat
date_date_set ; 别名 DateTime::setDate
date_default_timezone_get ; 取得一个脚本中所有日期时间函数所使用的默认时区
date_default_timezone_set ; 设定用于一个脚本中所有日期时间函数的默认时区
date_diff ; 别名 DateTime::diff
date_format ; 别名 DateTime::format
date_get_last_errors ; 别名 DateTime::getLastErrors
date_interval_create_from_date_string ; 别名 DateInterval::createFromDateString
date_interval_format ; 别名 DateInterval::format
date_isodate_set ; 别名 DateTime::setISODate
date_modify ; 别名 DateTime::modify
date_offset_get ; 别名 DateTime::getOffset
date_parse ; Returns associative array with detailed info about given date
date_parse_from_format ; Get info about given date formatted according to the specified format
date_sub ; 别名 DateTime::sub
date_sunrise ; 返回给定的日期与地点的日出时间
date_sunset ; 返回给定的日期与地点的日落时间
date_sun_info ; Returns an array with information about sunset/sunrise and twilight begin/end
date_timestamp_get ; 别名 DateTime::getTimestamp
date_timestamp_set ; 别名 DateTime::setTimestamp
date_timezone_get ; 别名 DateTime::getTimezone
date_timezone_set ; 别名 DateTime::setTimezone
date_time_set ; 别名 DateTime::setTime
db2_autocommit ; Returns or sets the AUTOCOMMIT state for a database connection
db2_bind_param ; Binds a PHP variable to an SQL statement parameter
db2_client_info ; Returns an object with properties that describe the DB2 database client
db2_close ; Closes a database connection
db2_columns ; Returns a result set listing the columns and associated metadata for a table
db2_column_privileges ; Returns a result set listing the columns and associated privileges for a table
db2_commit ; Commits a transaction
db2_connect ; Returns a connection to a database
db2_conn_error ; Returns a string containing the SQLSTATE returned by the last connection attempt
db2_conn_errormsg ; Returns the last connection error message and SQLCODE value
db2_cursor_type ; Returns the cursor type used by a statement resource
db2_escape_string ; Used to escape certain characters
db2_exec ; Executes an SQL statement directly
db2_execute ; Executes a prepared SQL statement
db2_fetch_array ; Returns an array, indexed by column position, representing a row in a result set
db2_fetch_assoc ; Returns an array, indexed by column name, representing a row in a result set
db2_fetch_both ; Returns an array, indexed by both column name and position, representing a row in a result set
db2_fetch_object ; Returns an object with properties representing columns in the fetched row
db2_fetch_row ; Sets the result set pointer to the next row or requested row
db2_field_display_size ; Returns the maximum number of bytes required to display a column
db2_field_name ; Returns the name of the column in the result set
db2_field_num ; Returns the position of the named column in a result set
db2_field_precision ; Returns the precision of the indicated column in a result set
db2_field_scale ; Returns the scale of the indicated column in a result set
db2_field_type ; Returns the data type of the indicated column in a result set
db2_field_width ; Returns the width of the current value of the indicated column in a result set
db2_foreign_keys ; Returns a result set listing the foreign keys for a table
db2_free_result ; Frees resources associated with a result set
db2_free_stmt ; Frees resources associated with the indicated statement resource
db2_get_option ; Retrieves an option value for a statement resource or a connection resource
db2_lob_read ; Gets a user defined size of LOB files with each invocation
db2_next_result ; Requests the next result set from a stored procedure
db2_num_fields ; Returns the number of fields contained in a result set
db2_num_rows ; Returns the number of rows affected by an SQL statement
db2_pclose ; Closes a persistent database connection
db2_pconnect ; Returns a persistent connection to a database
db2_prepare ; Prepares an SQL statement to be executed
db2_primary_keys ; Returns a result set listing primary keys for a table
db2_procedures ; Returns a result set listing the stored procedures registered in a database
db2_procedure_columns ; Returns a result set listing stored procedure parameters
db2_result ; Returns a single column from a row in the result set
db2_rollback ; Rolls back a transaction
db2_server_info ; Returns an object with properties that describe the DB2 database server
db2_set_option ; Set options for connection or statement resources
db2_special_columns ; Returns a result set listing the unique row identifier columns for a table
db2_statistics ; Returns a result set listing the index and statistics for a table
db2_stmt_error ; Returns a string containing the SQLSTATE returned by an SQL statement
db2_stmt_errormsg ; Returns a string containing the last SQL statement error message
db2_tables ; Returns a result set listing the tables and associated metadata in a database
db2_table_privileges ; Returns a result set listing the tables and associated privileges in a database
dbase_add_record ; Adds a record to a database
dbase_close ; Closes a database
dbase_create ; Creates a database
dbase_delete_record ; Deletes a record from a database
dbase_get_header_info ; Gets the header info of a database
dbase_get_record ; Gets a record from a database as an indexed array
dbase_get_record_with_names ; Gets a record from a database as an associative array
dbase_numfields ; Gets the number of fields of a database
dbase_numrecords ; Gets the number of records in a database
dbase_open ; Opens a database
dbase_pack ; Packs a database
dbase_replace_record ; Replaces a record in a database
dba_close ; Close a DBA database
dba_delete ; Delete DBA entry specified by key
dba_exists ; Check whether key exists
dba_fetch ; Fetch data specified by key
dba_firstkey ; Fetch first key
dba_handlers ; List all the handlers available
dba_insert ; Insert entry
dba_key_split ; Splits a key in string representation into array representation
dba_list ; List all open database files
dba_nextkey ; Fetch next key
dba_open ; Open database
dba_optimize ; Optimize database
dba_popen ; Open database persistently
dba_replace ; Replace or insert entry
dba_sync ; Synchronize database
dbplus_add ; Add a tuple to a relation
dbplus_aql ; Perform AQL query
dbplus_chdir ; Get/Set database virtual current directory
dbplus_close ; Close a relation
dbplus_curr ; Get current tuple from relation
dbplus_errcode ; Get error string for given errorcode or last error
dbplus_errno ; Get error code for last operation
dbplus_find ; Set a constraint on a relation
dbplus_first ; Get first tuple from relation
dbplus_flush ; Flush all changes made on a relation
dbplus_freealllocks ; Free all locks held by this client
dbplus_freelock ; Release write lock on tuple
dbplus_freerlocks ; Free all tuple locks on given relation
dbplus_getlock ; Get a write lock on a tuple
dbplus_getunique ; Get an id number unique to a relation
dbplus_info ; Get information about a relation
dbplus_last ; Get last tuple from relation
dbplus_lockrel ; Request write lock on relation
dbplus_next ; Get next tuple from relation
dbplus_open ; Open relation file
dbplus_prev ; Get previous tuple from relation
dbplus_rchperm ; Change relation permissions
dbplus_rcreate ; Creates a new DB++ relation
dbplus_rcrtexact ; Creates an exact but empty copy of a relation including indices
dbplus_rcrtlike ; Creates an empty copy of a relation with default indices
dbplus_resolve ; Resolve host information for relation
dbplus_restorepos ; Restore position
dbplus_rkeys ; Specify new primary key for a relation
dbplus_ropen ; Open relation file local
dbplus_rquery ; Perform local (raw) AQL query
dbplus_rrename ; Rename a relation
dbplus_rsecindex ; Create a new secondary index for a relation
dbplus_runlink ; Remove relation from filesystem
dbplus_rzap ; Remove all tuples from relation
dbplus_savepos ; Save position
dbplus_setindex ; Set index
dbplus_setindexbynumber ; Set index by number
dbplus_sql ; Perform SQL query
dbplus_tcl ; Execute TCL code on server side
dbplus_tremove ; Remove tuple and return new current tuple
dbplus_undo ; Undo
dbplus_undoprepare ; Prepare undo
dbplus_unlockrel ; Give up write lock on relation
dbplus_unselect ; Remove a constraint from relation
dbplus_update ; Update specified tuple in relation
dbplus_xlockrel ; Request exclusive lock on relation
dbplus_xunlockrel ; Free exclusive lock on relation
dbx_close ; Close an open connection/database
dbx_compare ; Compare two rows for sorting purposes
dbx_connect ; Open a connection/database
dbx_error ; Report the error message of the latest function call in the module
dbx_escape_string ; Escape a string so it can safely be used in an sql-statement
dbx_query ; Send a query and fetch all results (if any)
dbx_sort ; Sort a result from a dbx_query by a custom sort function
dcgettext ; Overrides the domain for a single lookup
dcngettext ; Plural version of dcgettext
deaggregate ; Removes the aggregated methods and properties from an object
debug_backtrace ; 产生一条回溯跟踪(backtrace)
debug_print_backtrace ; 打印一条回溯。
debug_zval_dump ; Dumps a string representation of an internal zend value to output
decbin ; 十进制转换为二进制
dechex ; 十进制转换为十六进制
decoct ; 十进制转换为八进制
define ; 定义一个常量
defined ; 检查某个名称的常量是否存在
define_syslog_variables ; Initializes all syslog related variables
deg2rad ; 将角度转换为弧度
delete ; 参见 unlink 或 unset
dgettext ; Override the current domain
die ; 等同于 exit
dio_close ; Closes the file descriptor given by fd
dio_fcntl ; Performs a c library fcntl on fd
dio_read ; Reads bytes from a file descriptor
dio_seek ; Seeks to pos on fd from whence
dio_stat ; Gets stat information about the file descriptor fd
dio_tcsetattr ; Sets terminal attributes and baud rate for a serial port
dio_truncate ; Truncates file descriptor fd to offset bytes
dio_write ; Writes data to fd with optional truncation at length
dir ; Return an instance of the Directory class
Directory::close ; Close directory handle
Directory::read ; Read entry from directory handle
Directory::rewind ; Rewind directory handle
DirectoryIterator::current ; Return the current DirectoryIterator item.
DirectoryIterator::getATime ; Get last access time of the current DirectoryIterator item
DirectoryIterator::getBasename ; Get base name of current DirectoryIterator item.
DirectoryIterator::getCTime ; Get inode change time of the current DirectoryIterator item
DirectoryIterator::getExtension ; Gets the file extension
DirectoryIterator::getFilename ; Return file name of current DirectoryIterator item.
DirectoryIterator::getGroup ; Get group for the current DirectoryIterator item
DirectoryIterator::getInode ; Get inode for the current DirectoryIterator item
DirectoryIterator::getMTime ; Get last modification time of current DirectoryIterator item
DirectoryIterator::getOwner ; Get owner of current DirectoryIterator item
DirectoryIterator::getPath ; Get path of current Iterator item without filename
DirectoryIterator::getPathname ; Return path and file name of current DirectoryIterator item
DirectoryIterator::getPerms ; Get the permissions of current DirectoryIterator item
DirectoryIterator::getSize ; Get size of current DirectoryIterator item
DirectoryIterator::getType ; Determine the type of the current DirectoryIterator item
DirectoryIterator::isDir ; Determine if current DirectoryIterator item is a directory
DirectoryIterator::isDot ; Determine if current DirectoryIterator item is '.' or '..'
DirectoryIterator::isExecutable ; Determine if current DirectoryIterator item is executable
DirectoryIterator::isFile ; Determine if current DirectoryIterator item is a regular file
DirectoryIterator::isLink ; Determine if current DirectoryIterator item is a symbolic link
DirectoryIterator::isReadable ; Determine if current DirectoryIterator item can be read
DirectoryIterator::isWritable ; Determine if current DirectoryIterator item can be written to
DirectoryIterator::key ; Return the key for the current DirectoryIterator item
DirectoryIterator::next ; Move forward to next DirectoryIterator item
DirectoryIterator::rewind ; Rewind the DirectoryIterator back to the start
DirectoryIterator::seek ; Seek to a DirectoryIterator item
DirectoryIterator::valid ; Check whether current DirectoryIterator position is a valid file
DirectoryIterator::__construct ; Constructs a new directory iterator from a path
DirectoryIterator::__toString ; Get file name as a string
dirname ; 返回路径中的目录部分
diskfreespace ; disk_free_space 的别名
disk_free_space ; 返回目录中的可用空间
disk_total_space ; 返回一个目录的磁盘总大小
dl ; 运行时载入一个 PHP 扩展
dngettext ; Plural version of dgettext
dns_check_record ; 别名 checkdnsrr
dns_get_mx ; 别名 getmxrr
dns_get_record ; Fetch DNS Resource Records associated with a hostname
DOMAttr::isId ; Checks if attribute is a defined ID
DOMAttr::__construct ; Creates a new DOMAttr object
DOMCdataSection::__construct ; Constructs a new DOMCdataSection object
DOMCharacterData::appendData ; Append the string to the end of the character data of the node
DOMCharacterData::deleteData ; Remove a range of characters from the node
DOMCharacterData::insertData ; Insert a string at the specified 16-bit unit offset
DOMCharacterData::replaceData ; Replace a substring within the DOMCharacterData node
DOMCharacterData::substringData ; Extracts a range of data from the node
DOMComment::__construct ; Creates a new DOMComment object
DOMDocument::createAttribute ; Create new attribute
DOMDocument::createAttributeNS ; Create new attribute node with an associated namespace
DOMDocument::createCDATASection ; Create new cdata node
DOMDocument::createComment ; Create new comment node
DOMDocument::createDocumentFragment ; Create new document fragment
DOMDocument::createElement ; Create new element node
DOMDocument::createElementNS ; Create new element node with an associated namespace
DOMDocument::createEntityReference ; Create new entity reference node
DOMDocument::createProcessingInstruction ; Creates new PI node
DOMDocument::createTextNode ; Create new text node
DOMDocument::getElementById ; Searches for an element with a certain id
DOMDocument::getElementsByTagName ; Searches for all elements with given local tag name
DOMDocument::getElementsByTagNameNS ; Searches for all elements with given tag name in specified namespace
DOMDocument::importNode ; Import node into current document
DOMDocument::load ; Load XML from a file
DOMDocument::loadHTML ; Load HTML from a string
DOMDocument::loadHTMLFile ; Load HTML from a file
DOMDocument::loadXML ; Load XML from a string
DOMDocument::normalizeDocument ; Normalizes the document
DOMDocument::registerNodeClass ; Register extended class used to create base node type
DOMDocument::relaxNGValidate ; Performs relaxNG validation on the document
DOMDocument::relaxNGValidateSource ; Performs relaxNG validation on the document
DOMDocument::save ; Dumps the internal XML tree back into a file
DOMDocument::saveHTML ; Dumps the internal document into a string using HTML formatting
DOMDocument::saveHTMLFile ; Dumps the internal document into a file using HTML formatting
DOMDocument::saveXML ; Dumps the internal XML tree back into a string
DOMDocument::schemaValidate ; Validates a document based on a schema
DOMDocument::schemaValidateSource ; Validates a document based on a schema
DOMDocument::validate ; Validates the document based on its DTD
DOMDocument::xinclude ; Substitutes XIncludes in a DOMDocument Object
DOMDocument::__construct ; Creates a new DOMDocument object
DOMDocumentFragment::appendXML ; Append raw XML data
DOMElement::getAttribute ; Returns value of attribute
DOMElement::getAttributeNode ; Returns attribute node
DOMElement::getAttributeNodeNS ; Returns attribute node
DOMElement::getAttributeNS ; Returns value of attribute
DOMElement::getElementsByTagName ; Gets elements by tagname
DOMElement::getElementsByTagNameNS ; Get elements by namespaceURI and localName
DOMElement::hasAttribute ; Checks to see if attribute exists
DOMElement::hasAttributeNS ; Checks to see if attribute exists
DOMElement::removeAttribute ; Removes attribute
DOMElement::removeAttributeNode ; Removes attribute
DOMElement::removeAttributeNS ; Removes attribute
DOMElement::setAttribute ; Adds new attribute
DOMElement::setAttributeNode ; Adds new attribute node to element
DOMElement::setAttributeNodeNS ; Adds new attribute node to element
DOMElement::setAttributeNS ; Adds new attribute
DOMElement::setIdAttribute ; Declares the attribute specified by name to be of type ID
DOMElement::setIdAttributeNode ; Declares the attribute specified by node to be of type ID
DOMElement::setIdAttributeNS ; Declares the attribute specified by local name and namespace URI to be of type ID
DOMElement::__construct ; Creates a new DOMElement object
DOMEntityReference::__construct ; Creates a new DOMEntityReference object
DOMImplementation::createDocument ; Creates a DOMDocument object of the specified type with its document element
DOMImplementation::createDocumentType ; Creates an empty DOMDocumentType object
DOMImplementation::hasFeature ; Test if the DOM implementation implements a specific feature
DOMImplementation::__construct ; Creates a new DOMImplementation object
DOMNamedNodeMap::getNamedItem ; Retrieves a node specified by name
DOMNamedNodeMap::getNamedItemNS ; Retrieves a node specified by local name and namespace URI
DOMNamedNodeMap::item ; Retrieves a node specified by index
DOMNode::appendChild ; Adds new child at the end of the children
DOMNode::C14N ; Canonicalize nodes to a string
DOMNode::C14NFile ; Canonicalize nodes to a file
DOMNode::cloneNode ; Clones a node
DOMNode::getLineNo ; Get line number for a node
DOMNode::getNodePath ; Get an XPath for a node
DOMNode::hasAttributes ; Checks if node has attributes
DOMNode::hasChildNodes ; Checks if node has children
DOMNode::insertBefore ; Adds a new child before a reference node
DOMNode::isDefaultNamespace ; Checks if the specified namespaceURI is the default namespace or not
DOMNode::isSameNode ; Indicates if two nodes are the same node
DOMNode::isSupported ; Checks if feature is supported for specified version
DOMNode::lookupNamespaceURI ; Gets the namespace URI of the node based on the prefix
DOMNode::lookupPrefix ; Gets the namespace prefix of the node based on the namespace URI
DOMNode::normalize ; Normalizes the node
DOMNode::removeChild ; Removes child from list of children
DOMNode::replaceChild ; Replaces a child
DOMNodelist::item ; Retrieves a node specified by index
DOMProcessingInstruction::__construct ; Creates a new DOMProcessingInstruction object
DOMText::isWhitespaceInElementContent ; Indicates whether this text node contains whitespace
DOMText::splitText ; Breaks this node into two nodes at the specified offset
DOMText::__construct ; Creates a new DOMText object
DOMXPath::evaluate ; Evaluates the given XPath expression and returns a typed result if possible
DOMXPath::query ; Evaluates the given XPath expression
DOMXPath::registerNamespace ; Registers the namespace with the DOMXPath object
DOMXPath::registerPhpFunctions ; Register PHP functions as XPath functions
DOMXPath::__construct ; Creates a new DOMXPath object
dotnet_load ; 加载一个 DOTNET 模块
doubleval ; floatval 的别名
each ; 返回数组中当前的键／值对并将数组指针向前移动一步
easter_date ; 得到指定年份的复活节午夜时的Unix时间戳。
easter_days ; 得到指定年份的3月21日到复活节之间的天数
echo ; 输出一个或多个字符串
eio_cancel ; Cancels a request
eio_chmod ; Change file/direcrory permissions.
eio_chown ; Change file/direcrory permissions.
eio_close ; Close file
eio_custom ; Execute custom request like any other eio_* call.
eio_dup2 ; Duplicate a file descriptor
eio_event_loop ; Polls libeio until all requests proceeded
eio_fchmod ; Change file permissions.
eio_fchown ; Change file ownership
eio_fdatasync ; Synchronize a file's in-core state with storage device.
eio_fstat ; Get file status
eio_fstatvfs ; Get file system statistics
eio_fsync ; Synchronize a file's in-core state with storage device
eio_ftruncate ; Truncate a file
eio_futime ; Change file last access and modification times
eio_get_event_stream ; Get stream representing a variable used in internal communications with libeio.
eio_get_last_error ; Returns string describing the last error associated with a request resource
eio_grp ; Createsa request group.
eio_grp_add ; Adds a request to the request group.
eio_grp_cancel ; Cancels a request group
eio_grp_limit ; Set group limit
eio_init ; (Re-)initialize Eio
eio_link ; Create a hardlink for file
eio_lstat ; Get file status
eio_mkdir ; Create directory
eio_mknod ; Create a special or ordinary file.
eio_nop ; Does nothing, except go through the whole request cycle.
eio_npending ; Returns number of finished, but unhandled requests
eio_nready ; Returns number of not-yet handled requests
eio_nreqs ; Returns number of requests to be processed
eio_nthreads ; Returns number of threads currently in use
eio_open ; Opens a file
eio_poll ; Can be to be called whenever there are pending requests that need finishing.
eio_read ; Read from a file descriptor at given offset.
eio_readahead ; Perform file readahead into page cache
eio_readdir ; Reads through a whole directory
eio_readlink ; Read value of a symbolic link.
eio_realpath ; Get the canonicalized absolute pathname.
eio_rename ; Change the name or location of a file.
eio_rmdir ; Remove a directory
eio_seek ; Repositions the offset of the open file associated with the fd argument to the argument offset according to the directive whence
eio_sendfile ; Transfer data between file descriptors
eio_set_max_idle ; Set maximum number of idle threads.
eio_set_max_parallel ; Set maximum parallel threads
eio_set_max_poll_reqs ; Set maximum number of requests processed in a poll.
eio_set_max_poll_time ; Set maximum poll time
eio_set_min_parallel ; Set minimum parallel thread number
eio_stat ; Get file status
eio_statvfs ; Get file system statistics
eio_symlink ; Create a symbolic link
eio_sync ; Commit buffer cache to disk
eio_syncfs ; Calls Linux' syncfs syscall, if available
eio_sync_file_range ; Sync a file segment with disk
eio_truncate ; Truncate a file
eio_unlink ; Delete a name and possibly the file it refers to
eio_utime ; Change file last access and modification times.
eio_write ; Write to file
empty ; 检查一个变量是否为空
EmptyIterator::current ; The current() method
EmptyIterator::key ; The key() method
EmptyIterator::next ; The next() method
EmptyIterator::rewind ; The rewind() method
EmptyIterator::valid ; The valid() method
enchant_broker_describe ; Enumerates the Enchant providers
enchant_broker_dict_exists ; Whether a dictionary exists or not. Using non-empty tag
enchant_broker_free ; Free the broker resource and its dictionnaries
enchant_broker_free_dict ; Free a dictionary resource
enchant_broker_get_error ; Returns the last error of the broker
enchant_broker_init ; create a new broker object capable of requesting
enchant_broker_list_dicts ; Returns a list of available dictionaries
enchant_broker_request_dict ; create a new dictionary using a tag
enchant_broker_request_pwl_dict ; creates a dictionary using a PWL file
enchant_broker_set_ordering ; Declares a preference of dictionaries to use for the language
enchant_dict_add_to_personal ; add a word to personal word list
enchant_dict_add_to_session ; add 'word' to this spell-checking session
enchant_dict_check ; Check whether a word is correctly spelled or not
enchant_dict_describe ; Describes an individual dictionary
enchant_dict_get_error ; Returns the last error of the current spelling-session
enchant_dict_is_in_session ; whether or not 'word' exists in this spelling-session
enchant_dict_quick_check ; Check the word is correctly spelled and provide suggestions
enchant_dict_store_replacement ; Add a correction for a word
enchant_dict_suggest ; Will return a list of values if any of those pre-conditions are not met
end ; 将数组的内部指针指向最后一个单元
ereg ; 正则表达式匹配
eregi ; 不区分大小写的正则表达式匹配
eregi_replace ; 不区分大小写的正则表达式替换
ereg_replace ; 正则表达式替换
ErrorException::getSeverity ; Gets the exception severity
ErrorException::__construct ; Constructs the exception
error_get_last ; 获取最后发生的错误
error_log ; 发送错误信息到某个地方
error_reporting ; 设置应该报告何种 PHP 错误
escapeshellarg ; Escape a string to be used as a shell argument
escapeshellcmd ; Escape shell metacharacters
Ev::backend ; Returns an integer describing the backend used by libev.
Ev::depth ; Returns recursion depth
Ev::embeddableBackends ; Returns the set of backends that are embeddable in other event loops.
Ev::feedSignal ; Feed a signal event info Ev
Ev::feedSignalEvent ; Feed signal event into the default loop
Ev::resume ; Resume previously suspended default event loop
Ev::sleep ; Block the process for the given number of seconds.
Ev::stop ; Stops the default event loop
Ev::suspend ; Suspend the default event loop
Ev::time ; Returns the current time in fractional seconds since the epoch.
Ev::verify ; Performs internal consistency checks(for debugging)
eval ; 把字符串作为PHP代码执行
EvCheck::createStopped ; Create instance of a stopped EvCheck watcher
EvCheck::__construct ; Constructs the EvCheck watcher object
EvChild::createStopped ; Create instance of a stopped EvCheck watcher
EvChild::set ; Configures the watcher
EvChild::__construct ; Constructs the EvChild watcher object
EvEmbed::createStopped ; Create stopped EvEmbed watcher object
EvEmbed::set ; Configures the watcher
EvEmbed::sweep ; Make a single, non-blocking sweep over the embedded loop.
EvEmbed::__construct ; Constructs the EvEmbed object
Event::add ; Makes event pending
Event::addSignal ; Makes signal event pending
Event::addTimer ; Makes timer event pending
Event::del ; Makes event non-pending
Event::delSignal ; Makes signal event non-pending
Event::delTimer ; Makes timer event non-pending
Event::getSupportedMethods ; Returns array with of the names of the methods supported in this version of Libevent
Event::pending ; Detects whether event is pending or scheduled
Event::set ; Re-configures event
Event::setPriority ; Set event priority
Event::setTimer ; Re-configures timer event
Event::signal ; Constructs signal event object
Event::timer ; Constructs timer event object
Event::__construct ; Constructs Event object
EventBase::dispatch ; Dispatch pending events
EventBase::exit ; Stop dispatching events
EventBase::getFeatures ; Returns bitmask of features supported
EventBase::getMethod ; Returns event method in use
EventBase::getTimeOfDayCached ; Returns the current event base time
EventBase::gotExit ; Checks if the event loop was told to exit
EventBase::gotStop ; Checks if the event loop was told to exit
EventBase::loop ; Dispatch pending events
EventBase::priorityInit ; Sets number of priorities per event base
EventBase::reInit ; Re-initialize event base(after a fork).
EventBase::stop ; Tells event_base to stop dispatching events
EventBase::__construct ; Constructs EventBase object
EventBuffer::add ; Append data to the end of an event buffer
EventBuffer::addBuffer ; Move all data from a buffer provided to the current instance of EventBuffer
EventBuffer::copyout ; Copies out specified number of bytes from the front of the buffer
EventBuffer::enableLocking ; 说明
EventBuffer::expand ; Reserves space in buffer
EventBuffer::freeze ; Prevent calls that modify an event buffer from succeeding
EventBuffer::lock ; Acquires a lock on buffer
EventBuffer::prepend ; Prepend data to the front of the buffer
EventBuffer::prependBuffer ; Moves all data from source buffer to the front of current buffer
EventBuffer::read ; Read data from an evbuffer and drain the bytes read
EventBuffer::readLine ; Extracts a line from the front of the buffer
EventBuffer::search ; Scans the buffer for an occurrence of a string
EventBuffer::searchEol ; Scans the buffer for an occurrence of an end of line
EventBuffer::substr ; Substracts a portion of the buffer data
EventBuffer::unfreeze ; Re-enable calls that modify an event buffer
EventBuffer::unlock ; Releases lock acquired by EventBuffer::lock
EventBuffer::write ; Write contents of the buffer to a file or socket
EventBuffer::__construct ; Constructs EventBuffer object
EventBufferEvent::connectHost ; Connects to a hostname with optionally asyncronous DNS resolving
EventBufferEvent::createPair ; Creates two buffer events connected to each other
EventBufferEvent::disable ; Disable events read, write, or both on a buffer event.
EventBufferEvent::enable ; Enable events read, write, or both on a buffer event.
EventBufferEvent::free ; Free a buffer event
EventBufferEvent::getDnsErrorString ; Returns string describing the last failed DNS lookup attempt
EventBufferEvent::getEnabled ; Returns bitmask of events currently enabled on the buffer event
EventBufferEvent::read ; Read buffer's data
EventBufferEvent::readBuffer ; Drains the entire contents of the input buffer and places them into buf
EventBufferEvent::setCallbacks ; Assigns read, write and event(status) callbacks
EventBufferEvent::setPriority ; Assign a priority to a bufferevent
EventBufferEvent::setTimeouts ; Set the read and write timeout for a buffer event
EventBufferEvent::setWatermark ; Adjusts read and/or write watermarks
EventBufferEvent::sslError ; Returns most recent OpenSSL error reported on the buffer event
EventBufferEvent::sslFilter ; Create a new SSL buffer event to send its data over another buffer event
EventBufferEvent::sslRenegotiate ; Tells a bufferevent to begin SSL renegotiation.
EventBufferEvent::sslSocket ; Creates a new SSL buffer event to send its data over an SSL on a socket
EventBufferEvent::write ; Adds data to a buffer event's output buffer
EventBufferEvent::__construct ; Constructs EventBufferEvent object
EventConfig::avoidMethod ; Tells libevent to avoid specific event method
EventConfig::requireFeatures ; Enters a required event method feature that the application demands
EventConfig::setMaxDispatchInterval ; Prevents priority inversion
EventConfig::__construct ; Constructs EventConfig object
EventDnsBase::addNameserverIp ; Adds a nameserver to the DNS base
EventDnsBase::addSearch ; Adds a domain to the list of search domains
EventDnsBase::clearSearch ; Removes all current search suffixes
EventDnsBase::countNameservers ; Gets the number of configured nameservers
EventDnsBase::loadHosts ; Loads a hosts file (in the same format as /etc/hosts) from hosts file
EventDnsBase::parseResolvConf ; Scans the resolv.conf-formatted file
EventDnsBase::setOption ; Set the value of a configuration option
EventDnsBase::setSearchNdots ; Set the 'ndots' parameter for searches
EventDnsBase::__construct ; Constructs EventDnsBase object
EventHttp::accept ; Makes an HTTP server accept connections on the specified socket stream or resource
EventHttp::addServerAlias ; Adds a server alias to the HTTP server object
EventHttp::bind ; Binds an HTTP server on the specified address and port
EventHttp::removeServerAlias ; Removes server alias
EventHttp::setAllowedMethods ; Sets the what HTTP methods are supported in requests accepted by this server, and passed to user callbacks
EventHttp::setCallback ; Sets a callback for specified URI
EventHttp::setDefaultCallback ; Sets default callback to handle requests that are not caught by specific callbacks
EventHttp::setMaxBodySize ; Sets maximum request body size
EventHttp::setMaxHeadersSize ; Sets maximum HTTP header size
EventHttp::setTimeout ; Sets the timeout for an HTTP request
EventHttp::__construct ; Constructs EventHttp object(the HTTP server)
EventHttpConnection::getBase ; Returns event base associated with the connection
EventHttpConnection::getPeer ; Gets the remote address and port associated with the connection
EventHttpConnection::makeRequest ; Makes an HTTP request over the specified connection
EventHttpConnection::setLocalAddress ; Sets the IP address from which HTTP connections are made
EventHttpConnection::setLocalPort ; Sets the local port from which connections are made
EventHttpConnection::setMaxBodySize ; Sets maximum body size for the connection
EventHttpConnection::setMaxHeadersSize ; Sets maximum header size
EventHttpConnection::setRetries ; Sets the retry limit for the connection
EventHttpConnection::setTimeout ; Sets the timeout for the connection
EventHttpConnection::__construct ; Constructs EventHttpConnection object
EventHttpRequest::addHeader ; Adds an HTTP header to the headers of the request
EventHttpRequest::cancel ; Cancels a pending HTTP request
EventHttpRequest::clearHeaders ; Removes all output headers from the header list of the request
EventHttpRequest::findHeader ; Finds the value belonging a header
EventHttpRequest::free ; Frees the object and removes associated events
EventHttpRequest::getCommand ; Returns the request command(method)
EventHttpRequest::getHost ; Returns the request host
EventHttpRequest::getInputBuffer ; Returns the input buffer
EventHttpRequest::getInputHeaders ; Returns associative array of the input headers
EventHttpRequest::getOutputBuffer ; Returns the output buffer of the request
EventHttpRequest::getOutputHeaders ; Returns associative array of the input headers
EventHttpRequest::getResponseCode ; Returns the the response code
EventHttpRequest::getUri ; Returns the request URI
EventHttpRequest::removeHeader ; Removes an HTTP header from the headers of the request
EventHttpRequest::sendError ; Send an HTML error message to the client
EventHttpRequest::sendReply ; Send an HTML reply to the client
EventHttpRequest::sendReplyChunk ; Send another data chunk as part of an ongoing chunked reply
EventHttpRequest::sendReplyEnd ; Complete a chunked reply, freeing the request as appropriate
EventHttpRequest::sendReplyStart ; Initiate a chunked reply
EventHttpRequest::__construct ; Constructs EventHttpRequest object
EventListener::disable ; Disables an event connect listener object
EventListener::enable ; Enables an event connect listener object
EventListener::getBase ; Returns event base associated with the event listener
EventListener::setCallback ; The setCallback purpose
EventListener::setErrorCallback ; Set event listener's error callback
EventListener::__construct ; Creates new connection listener associated with an event base
EventSslContext::__construct ; Constructs an OpenSSL context for use with Event classes
EventUtil::getLastSocketErrno ; Returns the most recent socket error number
EventUtil::getLastSocketError ; Returns the most recent socket error
EventUtil::setSocketOption ; Sets socket options
EventUtil::sslRandPoll ; Generates entropy by means of OpenSSL's RAND_poll()
EventUtil::__construct ; The abstract constructor
event_base_free ; Destroy event base
event_base_loop ; Handle events
event_base_loopbreak ; Abort event loop
event_base_loopexit ; Exit loop after a time
event_base_new ; Create and initialize new event base
event_base_priority_init ; Set the number of event priority levels
event_base_set ; Associate event base with an event
event_buffer_base_set ; Associate buffered event with an event base
event_buffer_disable ; Disable a buffered event
event_buffer_enable ; Enable a buffered event
event_buffer_fd_set ; Change a buffered event file descriptor
event_buffer_free ; Destroy buffered event
event_buffer_new ; Create new buffered event
event_buffer_priority_set ; Assign a priority to a buffered event
event_buffer_read ; Read data from a buffered event
event_buffer_set_callback ; Set or reset callbacks for a buffered event
event_buffer_timeout_set ; Set read and write timeouts for a buffered event
event_buffer_watermark_set ; Set the watermarks for read and write events
event_buffer_write ; Write data to a buffered event
event_new ; Create new event
EvFork::createStopped ; Creates a stopped instance of EvFork watcher class
EvFork::__construct ; Constructs the EvFork watcher object
EvIdle::createStopped ; Creates instance of a stopped EvIdle watcher object
EvIdle::__construct ; Constructs the EvIdle watcher object
EvIo::createStopped ; Create stopped EvIo watcher object
EvIo::set ; Configures the watcher
EvIo::__construct ; Constructs EvIo watcher object
EvLoop::backend ; Returns an integer describing the backend used by libev.
EvLoop::child ; Creates EvChild object associated with the current event loop
EvLoop::defaultLoop ; Returns or creates the default event loop.
EvLoop::invokePending ; Invoke all pending watchers while resetting their pending state
EvLoop::loopFork ; Must be called after a fork
EvLoop::now ; Returns the current &quot;event loop time&quot;
EvLoop::resume ; Resume previously suspended default event loop
EvLoop::run ; Begin checking for events and calling callbacks for the loop
EvLoop::stop ; Stops the event loop
EvLoop::suspend ; Suspend the loop
EvLoop::verify ; Performs internal consistency checks(for debugging)
EvLoop::__construct ; Constructs the event loop object
EvPeriodic::again ; Simply stops and restarts the periodic watcher again.
EvPeriodic::createStopped ; Create a stopped EvPeriodic watcher
EvPeriodic::set ; Configures the watcher
EvPeriodic::__construct ; Constructs EvPeriodic watcher object
EvPrepare::createStopped ; Creates a stopped instance of EvPrepare watcher
EvPrepare::__construct ; Constructs EvPrepare watcher object
EvSignal::createStopped ; Create stopped EvSignal watcher object
EvSignal::set ; Configures the watcher
EvSignal::__construct ; Constructs EvPeriodic watcher object
EvStat::attr ; Returns the values most recently detected by Ev
EvStat::createStopped ; Create a stopped EvStat watcher object
EvStat::prev ; Returns the previous set of values returned by EvStat::attr
EvStat::set ; Configures the watcher
EvStat::stat ; Initiates the stat call
EvStat::__construct ; Constructs EvStat watcher object
EvTimer::again ; Restarts the timer watcher
EvTimer::createStopped ; Creates EvTimer stopped watcher object
EvTimer::set ; Configures the watcher
EvTimer::__construct ; Constructs an EvTimer watcher object
EvWatcher::clear ; Clear watcher pending status
EvWatcher::feed ; Feeds the given revents set into the event loop
EvWatcher::getLoop ; Returns the loop responsible for the watcher
EvWatcher::keepalive ; Configures whether to keep the loop from returning
EvWatcher::setCallback ; Sets new callback for the watcher
EvWatcher::start ; Starts the watcher
EvWatcher::stop ; Stops the watcher
EvWatcher::__construct ; Abstract constructor of a watcher object
Examples with PDO_4D ; Examples PDO_4D
Exception::getCode ; 获取异常代码
Exception::getFile ; 获取发生异常的程序文件名称
Exception::getLine ; 获取发生异常的代码在文件中的行号
Exception::getMessage ; 获取异常消息内容
Exception::getPrevious ; 返回异常链中的前一个异常
Exception::getTrace ; 获取异常追踪信息
Exception::getTraceAsString ; 获取字符串类型的异常追踪信息
Exception::__clone ; 异常克隆
Exception::__construct ; 异常构造函数
Exception::__toString ; 将异常对象转换为字符串
exec ; Execute an external program
exif_imagetype ; 判断一个图像的类型
exif_tagname ; Get the header name for an index
exif_thumbnail ; 取得嵌入在 TIFF 或 JPEG 图像中的缩略图
exit ; 输出一个消息并且退出当前脚本
exp ; 计算 e 的指数
expect:// ; 处理交互式的流
explode ; 使用一个字符串分割另一个字符串
expm1 ; 返回 exp(number) - 1，甚至当 number 的值接近零也能计算出准确结果
extension_loaded ; 检查一个扩展是否已经加载
extract ; 从数组中将变量导入到当前的符号表
ezmlm_hash ; 计算 EZMLM 所需的散列值
fam_cancel_monitor ; Terminate monitoring
fam_close ; Close FAM connection
fam_monitor_collection ; Monitor a collection of files in a directory for changes
fam_monitor_directory ; Monitor a directory for changes
fam_monitor_file ; Monitor a regular file for changes
fam_next_event ; Get next pending FAM event
fam_open ; Open connection to FAM daemon
fam_pending ; Check for pending FAM events
fam_resume_monitor ; Resume suspended monitoring
fam_suspend_monitor ; Temporarily suspend monitoring
fbsql_affected_rows ; Get number of affected rows in previous FrontBase operation
fbsql_autocommit ; Enable or disable autocommit
fbsql_blob_size ; Get the size of a BLOB
fbsql_change_user ; Change logged in user of the active connection
fbsql_clob_size ; Get the size of a CLOB
fbsql_close ; Close FrontBase connection
fbsql_commit ; Commits a transaction to the database
fbsql_connect ; Open a connection to a FrontBase Server
fbsql_create_blob ; Create a BLOB
fbsql_create_clob ; Create a CLOB
fbsql_create_db ; Create a FrontBase database
fbsql_database ; Get or set the database name used with a connection
fbsql_database_password ; Sets or retrieves the password for a FrontBase database
fbsql_data_seek ; Move internal result pointer
fbsql_db_query ; Send a FrontBase query
fbsql_db_status ; Get the status for a given database
fbsql_drop_db ; Drop (delete) a FrontBase database
fbsql_errno ; Returns the error number from previous operation
fbsql_error ; Returns the error message from previous operation
fbsql_fetch_array ; Fetch a result row as an associative array, a numeric array, or both
fbsql_fetch_assoc ; Fetch a result row as an associative array
fbsql_fetch_field ; Get column information from a result and return as an object
fbsql_fetch_lengths ; Get the length of each output in a result
fbsql_fetch_object ; Fetch a result row as an object
fbsql_fetch_row ; Get a result row as an enumerated array
fbsql_field_flags ; Get the flags associated with the specified field in a result
fbsql_field_len ; Returns the length of the specified field
fbsql_field_name ; Get the name of the specified field in a result
fbsql_field_seek ; Set result pointer to a specified field offset
fbsql_field_table ; Get name of the table the specified field is in
fbsql_field_type ; Get the type of the specified field in a result
fbsql_free_result ; Free result memory
fbsql_get_autostart_info ; 说明
fbsql_hostname ; Get or set the host name used with a connection
fbsql_insert_id ; Get the id generated from the previous INSERT operation
fbsql_list_dbs ; List databases available on a FrontBase server
fbsql_list_fields ; List FrontBase result fields
fbsql_list_tables ; List tables in a FrontBase database
fbsql_next_result ; Move the internal result pointer to the next result
fbsql_num_fields ; Get number of fields in result
fbsql_num_rows ; Get number of rows in result
fbsql_password ; Get or set the user password used with a connection
fbsql_pconnect ; Open a persistent connection to a FrontBase Server
fbsql_query ; Send a FrontBase query
fbsql_read_blob ; Read a BLOB from the database
fbsql_read_clob ; Read a CLOB from the database
fbsql_result ; Get result data
fbsql_rollback ; Rollback a transaction to the database
fbsql_rows_fetched ; Get the number of rows affected by the last statement
fbsql_select_db ; Select a FrontBase database
fbsql_set_characterset ; Change input/output character set
fbsql_set_lob_mode ; Set the LOB retrieve mode for a FrontBase result set
fbsql_set_password ; Change the password for a given user
fbsql_set_transaction ; Set the transaction locking and isolation
fbsql_start_db ; Start a database on local or remote server
fbsql_stop_db ; Stop a database on local or remote server
fbsql_tablename ; 别名 fbsql_table_name
fbsql_table_name ; Get table name of field
fbsql_username ; Get or set the username for the connection
fbsql_warnings ; Enable or disable FrontBase warnings
fclose ; 关闭一个已打开的文件指针
fdf_add_doc_javascript ; Adds javascript code to the FDF document
fdf_add_template ; Adds a template into the FDF document
fdf_close ; Close an FDF document
fdf_create ; Create a new FDF document
fdf_enum_values ; Call a user defined function for each document value
fdf_errno ; Return error code for last fdf operation
fdf_error ; Return error description for FDF error code
fdf_get_ap ; Get the appearance of a field
fdf_get_attachment ; Extracts uploaded file embedded in the FDF
fdf_get_encoding ; Get the value of the /Encoding key
fdf_get_file ; Get the value of the /F key
fdf_get_flags ; Gets the flags of a field
fdf_get_opt ; Gets a value from the opt array of a field
fdf_get_status ; Get the value of the /STATUS key
fdf_get_value ; Get the value of a field
fdf_get_version ; Gets version number for FDF API or file
fdf_header ; Sets FDF-specific output headers
fdf_next_field_name ; Get the next field name
fdf_open ; Open a FDF document
fdf_open_string ; Read a FDF document from a string
fdf_remove_item ; Sets target frame for form
fdf_save ; Save a FDF document
fdf_save_string ; Returns the FDF document as a string
fdf_set_ap ; Set the appearance of a field
fdf_set_encoding ; Sets FDF character encoding
fdf_set_file ; Set PDF document to display FDF data in
fdf_set_flags ; Sets a flag of a field
fdf_set_javascript_action ; Sets an javascript action of a field
fdf_set_on_import_javascript ; Adds javascript code to be executed when Acrobat opens the FDF
fdf_set_opt ; Sets an option of a field
fdf_set_status ; Set the value of the /STATUS key
fdf_set_submit_form_action ; Sets a submit form action of a field
fdf_set_target_frame ; Set target frame for form display
fdf_set_value ; Set the value of a field
fdf_set_version ; Sets version number for a FDF file
feof ; 测试文件指针是否到了文件结束的位置
fflush ; 将缓冲内容输出到文件
fgetc ; 从文件指针中读取字符
fgetcsv ; 从文件指针中读入一行并解析 CSV 字段
fgets ; 从文件指针中读取一行
fgetss ; 从文件指针中读取一行并过滤掉 HTML 标记
file ; 把整个文件读入一个数组中
file:// ; 访问本地文件系统
fileatime ; 取得文件的上次访问时间
filectime ; 取得文件的 inode 修改时间
filegroup ; 取得文件的组
fileinode ; 取得文件的 inode
filemtime ; 取得文件修改时间
fileowner ; 取得文件的所有者
fileperms ; 取得文件的权限
filepro ; Read and verify the map file
filepro_fieldcount ; Find out how many fields are in a filePro database
filepro_fieldname ; Gets the name of a field
filepro_fieldtype ; Gets the type of a field
filepro_fieldwidth ; Gets the width of a field
filepro_retrieve ; Retrieves data from a filePro database
filepro_rowcount ; Find out how many rows are in a filePro database
filesize ; 取得文件大小
FilesystemIterator::current ; The current file
FilesystemIterator::getFlags ; Get the handling flags
FilesystemIterator::key ; Retrieve the key for the current file
FilesystemIterator::next ; Move to the next file
FilesystemIterator::rewind ; Rewinds back to the beginning
FilesystemIterator::setFlags ; Sets handling flags
FilesystemIterator::__construct ; Constructs a new filesystem iterator
filetype ; 取得文件类型
file_exists ; 检查文件或目录是否存在
file_get_contents ; 将整个文件读入一个字符串
file_put_contents ; 将一个字符串写入文件
FilterIterator::accept ; Check whether the current element of the iterator is acceptable
FilterIterator::current ; Get the current element value
FilterIterator::getInnerIterator ; Get the inner iterator
FilterIterator::key ; Get the current key
FilterIterator::next ; Move the iterator forward
FilterIterator::rewind ; Rewind the iterator
FilterIterator::valid ; Check whether the current element is valid
FilterIterator::__construct ; Construct a filterIterator
filter_has_var ; Checks if variable of specified type exists
filter_id ; Returns the filter ID belonging to a named filter
filter_input ; Gets a specific external variable by name and optionally filters it
filter_input_array ; Gets external variables and optionally filters them
filter_list ; Returns a list of all supported filters
filter_var ; Filters a variable with a specified filter
filter_var_array ; Gets multiple variables and optionally filters them
finfo_buffer ; Return information about a string buffer
finfo_close ; Close fileinfo resource
finfo_file ; Return information about a file
finfo_open ; Create a new fileinfo resource
finfo_set_flags ; Set libmagic configuration options
floatval ; 获取变量的浮点值
flock ; 轻便的咨询文件锁定
floor ; 舍去法取整
flush ; 刷新输出缓冲
fmod ; 返回除法的浮点数余数
fnmatch ; 用模式匹配文件名
fopen ; 打开文件或者 URL
forward_static_call ; Call a static method
forward_static_call_array ; Call a static method and pass the arguments as array
fpassthru ; 输出文件指针处的所有剩余数据
fprintf ; 将格式化后的字符串写入到流
fputcsv ; 将行格式化为 CSV 并写入文件指针
fputs ; fwrite 的别名
fread ; 读取文件（可安全用于二进制文件）
FrenchToJD ; 从一个French Republican历法的日期得到Julian Day计数。
fribidi_log2vis ; Convert a logical string to a visual one
fscanf ; 从文件中格式化输入
fseek ; 在文件指针中定位
fsockopen ; Open Internet or Unix domain socket connection
fstat ; 通过已打开的文件指针取得文件信息
ftell ; 返回文件指针读/写的位置
ftok ; Convert a pathname and a project identifier to a System V IPC key
ftp:// ; 访问 FTP(s) URLs
FTP context options ; FTP context option listing
ftp_alloc ; Allocates space for a file to be uploaded
ftp_cdup ; 切换到当前目录的父目录
ftp_chdir ; 在 FTP 服务器上改变当前目录
ftp_chmod ; Set permissions on a file via FTP
ftp_close ; 关闭一个 FTP 连接
ftp_connect ; 建立一个新的 FTP 连接
ftp_delete ; 删除 FTP 服务器上的一个文件
ftp_exec ; 请求运行一条 FTP 命令
ftp_fget ; 从 FTP 服务器上下载一个文件并保存到本地一个已经打开的文件中
ftp_fput ; 上传一个已经打开的文件到 FTP 服务器
ftp_get ; 从 FTP 服务器上下载一个文件
ftp_get_option ; 返回当前 FTP 连接的各种不同的选项设置
ftp_login ; 登录 FTP 服务器
ftp_mdtm ; 返回指定文件的最后修改时间
ftp_mkdir ; 建立新目录
ftp_nb_continue ; 连续获取／发送文件（non-blocking）
ftp_nb_fget ; Retrieves a file from the FTP server and writes it to an open file (non-blocking)
ftp_nb_fput ; Stores a file from an open file to the FTP server (non-blocking)
ftp_nb_get ; 从 FTP 服务器上获取文件并写入本地文件（non-blocking）
ftp_nb_put ; 存储一个文件至 FTP 服务器（non-blocking）
ftp_nlist ; 返回给定目录的文件列表
ftp_pasv ; 返回当前 FTP 被动模式是否打开
ftp_put ; 上传文件到 FTP 服务器
ftp_pwd ; 返回当前目录名
ftp_quit ; ftp_close 的 别名
ftp_raw ; Sends an arbitrary command to an FTP server
ftp_rawlist ; 返回指定目录下文件的详细列表
ftp_rename ; 更改 FTP 服务器上的文件或目录名
ftp_rmdir ; 删除 FTP 服务器上的一个目录
ftp_set_option ; 设置各种 FTP 运行时选项
ftp_site ; 向服务器发送 SITE 命令
ftp_size ; 返回指定文件的大小
ftp_ssl_connect ; Opens an Secure SSL-FTP connection
ftp_systype ; 返回远程 FTP 服务器的操作系统类型
ftruncate ; 将文件截断到给定的长度
function_exists ; Return TRUE if the given function has been defined
func_get_arg ; Return an item from the argument list
func_get_args ; Returns an array comprising a function's argument list
func_num_args ; Returns the number of arguments passed to the function
fwrite ; 写入文件（可安全用于二进制文件）
gc_collect_cycles ; 强制收集所有现存的垃圾循环周期
gc_disable ; 停用循环引用收集器
gc_enable ; 激活循环引用收集器
gc_enabled ; 返回循环引用计数器的状态
gd_info ; 取得当前安装的 GD 库的信息
GearmanClient::addOptions ; Add client options
GearmanClient::addServer ; Add a job server to the client
GearmanClient::addServers ; Add a list of job servers to the client
GearmanClient::addTask ; Add a task to be run in parallel
GearmanClient::addTaskBackground ; Add a background task to be run in parallel
GearmanClient::addTaskHigh ; Add a high priority task to run in parallel
GearmanClient::addTaskHighBackground ; Add a high priority background task to be run in parallel
GearmanClient::addTaskLow ; Add a low priority task to run in parallel
GearmanClient::addTaskLowBackground ; Add a low priority background task to be run in parallel
GearmanClient::addTaskStatus ; Add a task to get status
GearmanClient::clearCallbacks ; Clear all task callback functions
GearmanClient::clone ; Create a copy of a GearmanClient object
GearmanClient::context ; Get the application context
GearmanClient::data ; Get the application data (deprecated)
GearmanClient::do ; Run a single task and return a result [deprecated]
GearmanClient::doBackground ; Run a task in the background
GearmanClient::doHigh ; Run a single high priority task
GearmanClient::doHighBackground ; Run a high priority task in the background
GearmanClient::doJobHandle ; Get the job handle for the running task
GearmanClient::doLow ; Run a single low priority task
GearmanClient::doLowBackground ; Run a low priority task in the background
GearmanClient::doNormal ; Run a single task and return a result
GearmanClient::doStatus ; Get the status for the running task
GearmanClient::echo ; Send data to all job servers to see if they echo it back [deprecated]
GearmanClient::error ; Returns an error string for the last error encountered.
GearmanClient::getErrno ; Get an errno value
GearmanClient::jobStatus ; Get the status of a background job
GearmanClient::ping ; Send data to all job servers to see if they echo it back
GearmanClient::removeOptions ; Remove client options
GearmanClient::returnCode ; Get the last Gearman return code
GearmanClient::runTasks ; Run a list of tasks in parallel
GearmanClient::setClientCallback ; Callback function when there is a data packet for a task (deprecated)
GearmanClient::setCompleteCallback ; Set a function to be called on task completion
GearmanClient::setContext ; Set application context
GearmanClient::setCreatedCallback ; Set a callback for when a task is queued
GearmanClient::setData ; Set application data (deprecated)
GearmanClient::setDataCallback ; Callback function when there is a data packet for a task
GearmanClient::setExceptionCallback ; Set a callback for worker exceptions
GearmanClient::setFailCallback ; Set callback for job failure
GearmanClient::setOptions ; Set client options
GearmanClient::setStatusCallback ; Set a callback for collecting task status
GearmanClient::setTimeout ; Set socket I/O activity timeout
GearmanClient::setWarningCallback ; Set a callback for worker warnings
GearmanClient::setWorkloadCallback ; Set a callback for accepting incremental data updates
GearmanClient::timeout ; Get current socket I/O activity timeout value
GearmanClient::__construct ; Create a GearmanClient instance
GearmanJob::complete ; Send the result and complete status (deprecated)
GearmanJob::data ; Send data for a running job (deprecated)
GearmanJob::exception ; Send exception for running job (deprecated)
GearmanJob::fail ; Send fail status (deprecated)
GearmanJob::functionName ; Get function name
GearmanJob::handle ; Get the job handle
GearmanJob::returnCode ; Get last return code
GearmanJob::sendComplete ; Send the result and complete status
GearmanJob::sendData ; Send data for a running job
GearmanJob::sendException ; Send exception for running job (exception)
GearmanJob::sendFail ; Send fail status
GearmanJob::sendStatus ; Send status
GearmanJob::sendWarning ; Send a warning
GearmanJob::setReturn ; Set a return value
GearmanJob::status ; Send status (deprecated)
GearmanJob::unique ; Get the unique identifier
GearmanJob::warning ; Send a warning (deprecated)
GearmanJob::workload ; Get workload
GearmanJob::workloadSize ; Get size of work load
GearmanJob::__construct ; Create a GearmanJob instance
GearmanTask::create ; Create a task (deprecated)
GearmanTask::data ; Get data returned for a task
GearmanTask::dataSize ; Get the size of returned data
GearmanTask::function ; Get associated function name (deprecated)
GearmanTask::functionName ; Get associated function name
GearmanTask::isKnown ; Determine if task is known
GearmanTask::isRunning ; Test whether the task is currently running
GearmanTask::jobHandle ; Get the job handle
GearmanTask::recvData ; Read work or result data into a buffer for a task
GearmanTask::returnCode ; Get the last return code
GearmanTask::sendData ; Send data for a task (deprecated)
GearmanTask::sendWorkload ; Send data for a task
GearmanTask::taskDenominator ; Get completion percentage denominator
GearmanTask::taskNumerator ; Get completion percentage numerator
GearmanTask::unique ; Get the unique identifier for a task
GearmanTask::uuid ; Get the unique identifier for a task (deprecated)
GearmanTask::__construct ; Create a GearmanTask instance
GearmanWorker::addFunction ; Register and add callback function
GearmanWorker::addOptions ; Add worker options
GearmanWorker::addServer ; Add a job server
GearmanWorker::addServers ; Add job servers
GearmanWorker::clone ; Create a copy of the worker
GearmanWorker::echo ; Test job server response
GearmanWorker::error ; Get the last error encountered
GearmanWorker::getErrno ; Get errno
GearmanWorker::options ; Get worker options
GearmanWorker::register ; Register a function with the job server
GearmanWorker::removeOptions ; Remove worker options
GearmanWorker::returnCode ; Get last Gearman return code
GearmanWorker::setId ; Give the worker an identifier so it can be tracked when asking gearmand for the list of available workers.
GearmanWorker::setOptions ; Set worker options
GearmanWorker::setTimeout ; Set socket I/O activity timeout
GearmanWorker::timeout ; Get socket I/O activity timeout
GearmanWorker::unregister ; Unregister a function name with the job servers
GearmanWorker::unregisterAll ; Unregister all function names with the job servers
GearmanWorker::wait ; Wait for activity from one of the job servers
GearmanWorker::work ; Wait for and perform jobs
GearmanWorker::__construct ; Create a GearmanWorker instance
Gender\Gender::connect ; Connect to an external name dictionary.
Gender\Gender::country ; Get textual country representation
Gender\Gender::get ; Get gender of a name.
Gender\Gender::isNick ; Check if the name0 is an alias of the name1.
Gender\Gender::similarNames ; Get similar names.
Gender\Gender::__construct ; Construct the Gender object.
geoip_continent_code_by_name ; Get the two letter continent code
geoip_country_code3_by_name ; Get the three letter country code
geoip_country_code_by_name ; Get the two letter country code
geoip_country_name_by_name ; Get the full country name
geoip_database_info ; Get GeoIP Database information
geoip_db_avail ; Determine if GeoIP Database is available
geoip_db_filename ; Returns the filename of the corresponding GeoIP Database
geoip_db_get_all_info ; Returns detailed information about all GeoIP database types
geoip_id_by_name ; Get the Internet connection type
geoip_isp_by_name ; Get the Internet Service Provider (ISP) name
geoip_org_by_name ; Get the organization name
geoip_record_by_name ; Returns the detailed City information found in the GeoIP Database
geoip_region_by_name ; Get the country code and region
geoip_region_name_by_code ; Returns the region name for some country and region code combo
geoip_time_zone_by_country_and_region ; Returns the time zone for some country and region code combo
getallheaders ; Fetch all HTTP request headers
getcwd ; 取得当前工作目录
getdate ; 取得日期／时间信息
getenv ; 获取一个环境变量的值
gethostbyaddr ; Get the Internet host name corresponding to a given IP address
gethostbyname ; Get the IPv4 address corresponding to a given Internet host name
gethostname ; Gets the host name
getimagesize ; 取得图像大小
getimagesizefromstring ; Get the size of an image from a string
getlastmod ; 获取页面最后修改的时间
getmxrr ; Get MX records corresponding to a given Internet host name
getmygid ; 获取当前 PHP 脚本拥有者的 GID
getmyinode ; 获取当前脚本的索引节点（inode）
getmypid ; 获取 PHP 进程的 ID
getmyuid ; 获取 PHP 脚本所有者的 UID
getopt ; 从命令行参数列表中获取选项
getprotobyname ; Get protocol number associated with protocol name
getprotobynumber ; Get protocol name associated with protocol number
getrandmax ; 显示随机数最大的可能值
getrusage ; 获取当前资源使用状况
getservbyname ; Get port number associated with an Internet service and protocol
getservbyport ; Get Internet service which corresponds to port and protocol
gettext ; Lookup a message in the current domain
gettimeofday ; 取得当前时间
gettype ; 获取变量的类型
get_browser ; 获取浏览器具有的功能
get_called_class ; 后期静态绑定（&quot;Late Static Binding&quot;）类的名称
get_cfg_var ; 获取 PHP 配置选项的值
get_class ; 返回对象的类名
get_class_methods ; 返回由类的方法名组成的数组
get_class_vars ; 返回由类的默认属性组成的数组
get_current_user ; 获取当前 PHP 脚本所有者名称
get_declared_classes ; 返回由已定义类的名字所组成的数组
get_declared_interfaces ; 返回一个数组包含所有已声明的接口
get_declared_traits ; 返回所有已定义的 traits 的数组
get_defined_constants ; 返回所有常量的关联数组，键是常量名，值是常量值
get_defined_functions ; Returns an array of all defined functions
get_defined_vars ; 返回由所有已定义变量所组成的数组
get_extension_funcs ; 返回模块函数名称的数组
get_headers ; 取得服务器响应一个 HTTP 请求所发送的所有标头
get_html_translation_table ; 返回使用 htmlspecialchars 和 htmlentities 后的转换表
get_included_files ; 返回被 include 和 require 文件名的 array
get_include_path ; 获取当前的 include_path 配置选项
get_loaded_extensions ; 返回所有编译并加载模块名的 array
get_magic_quotes_gpc ; 获取当前 magic_quotes_gpc 的配置选项设置
get_magic_quotes_runtime ; 获取当前 magic_quotes_runtime 配置选项的激活状态
get_meta_tags ; 从一个文件中提取所有的 meta 标签 content 属性，返回一个数组
get_object_vars ; 返回由对象属性组成的关联数组
get_parent_class ; 返回对象或类的父类名
get_required_files ; 别名 get_included_files
get_resource_type ; 返回资源（resource）类型
glob ; 寻找与模式匹配的文件路径
glob:// ; 查找匹配的文件路径模式
GlobIterator::count ; Get the number of directories and files
GlobIterator::__construct ; Construct a directory using glob
Gmagick::addimage ; Adds new image to Gmagick object image list
Gmagick::addnoiseimage ; Adds random noise to the image
Gmagick::annotateimage ; Annotates an image with text
Gmagick::blurimage ; Adds blur filter to image
Gmagick::borderimage ; Surrounds the image with a border
Gmagick::charcoalimage ; Simulates a charcoal drawing
Gmagick::chopimage ; Removes a region of an image and trims
Gmagick::clear ; Clears all resources associated to Gmagick object
Gmagick::commentimage ; Adds a comment to your image
Gmagick::compositeimage ; Composite one image onto another
Gmagick::cropimage ; Extracts a region of the image
Gmagick::cropthumbnailimage ; Creates a crop thumbnail
Gmagick::current ; The current purpose
Gmagick::cyclecolormapimage ; Displaces an image's colormap
Gmagick::deconstructimages ; Returns certain pixel differences between images
Gmagick::despeckleimage ; The despeckleimage purpose
Gmagick::destroy ; The destroy purpose
Gmagick::drawimage ; Renders the GmagickDraw object on the current image
Gmagick::edgeimage ; Enhance edges within the image
Gmagick::embossimage ; Returns a grayscale image with a three-dimensional effect
Gmagick::enhanceimage ; Improves the quality of a noisy image
Gmagick::equalizeimage ; Equalizes the image histogram
Gmagick::flipimage ; Creates a vertical mirror image
Gmagick::flopimage ; The flopimage purpose
Gmagick::frameimage ; Adds a simulated three-dimensional border
Gmagick::gammaimage ; Gamma-corrects an image
Gmagick::getcopyright ; Returns the GraphicsMagick API copyright as a string
Gmagick::getfilename ; The filename associated with an image sequence
Gmagick::getimagebackgroundcolor ; Returns the image background color
Gmagick::getimageblueprimary ; Returns the chromaticy blue primary point
Gmagick::getimagebordercolor ; Returns the image border color
Gmagick::getimagechanneldepth ; Gets the depth for a particular image channel
Gmagick::getimagecolors ; Returns the color of the specified colormap index
Gmagick::getimagecolorspace ; Gets the image colorspace
Gmagick::getimagecompose ; Returns the composite operator associated with the image
Gmagick::getimagedelay ; Gets the image delay
Gmagick::getimagedepth ; Gets the depth of the image
Gmagick::getimagedispose ; Gets the image disposal method
Gmagick::getimageextrema ; Gets the extrema for the image
Gmagick::getimagefilename ; Returns the filename of a particular image in a sequence
Gmagick::getimageformat ; Returns the format of a particular image in a sequence
Gmagick::getimagegamma ; Gets the image gamma
Gmagick::getimagegreenprimary ; Returns the chromaticy green primary point
Gmagick::getimageheight ; Returns the image height
Gmagick::getimagehistogram ; Gets the image histogram
Gmagick::getimageindex ; Gets the index of the current active image
Gmagick::getimageinterlacescheme ; Gets the image interlace scheme
Gmagick::getimageiterations ; Gets the image iterations
Gmagick::getimagematte ; Return if the image has a matte channel
Gmagick::getimagemattecolor ; Returns the image matte color
Gmagick::getimageprofile ; Returns the named image profile.
Gmagick::getimageredprimary ; Returns the chromaticity red primary point
Gmagick::getimagerenderingintent ; Gets the image rendering intent
Gmagick::getimageresolution ; Gets the image X and Y resolution
Gmagick::getimagescene ; Gets the image scene
Gmagick::getimagesignature ; Generates an SHA-256 message digest
Gmagick::getimagetype ; Gets the potential image type.
Gmagick::getimageunits ; Gets the image units of resolution
Gmagick::getimagewhitepoint ; Returns the chromaticity white point
Gmagick::getimagewidth ; Returns the width of the image
Gmagick::getpackagename ; Returns the GraphicsMagick package name.
Gmagick::getquantumdepth ; Returns the Gmagick quantum depth as a string.
Gmagick::getreleasedate ; Returns the GraphicsMagick release date as a string.
Gmagick::getsamplingfactors ; Gets the horizontal and vertical sampling factor.
Gmagick::getsize ; Returns the size associated with the Gmagick object
Gmagick::getversion ; Returns the GraphicsMagick API version
Gmagick::hasnextimage ; Checks if the object has more images
Gmagick::haspreviousimage ; Checks if the object has a previous image
Gmagick::implodeimage ; Creates a new image as a copy
Gmagick::labelimage ; Adds a label to an image.
Gmagick::levelimage ; Adjusts the levels of an image
Gmagick::magnifyimage ; Scales an image proportionally 2x
Gmagick::mapimage ; Replaces the colors of an image with the closest color from a reference image.
Gmagick::medianfilterimage ; Applies a digital filter
Gmagick::minifyimage ; Scales an image proportionally to half its size
Gmagick::modulateimage ; Control the brightness, saturation, and hue
Gmagick::motionblurimage ; Simulates motion blur
Gmagick::newimage ; Creates a new image
Gmagick::nextimage ; Moves to the next image
Gmagick::normalizeimage ; Enhances the contrast of a color image
Gmagick::oilpaintimage ; Simulates an oil painting
Gmagick::previousimage ; Move to the previous image in the object
Gmagick::profileimage ; Adds or removes a profile from an image
Gmagick::quantizeimage ; Analyzes the colors within a reference image
Gmagick::quantizeimages ; The quantizeimages purpose
Gmagick::queryfontmetrics ; Returns an array representing the font metrics
Gmagick::queryfonts ; Returns the configured fonts
Gmagick::queryformats ; Returns formats supported by Gmagick.
Gmagick::radialblurimage ; Radial blurs an image
Gmagick::raiseimage ; Creates a simulated 3d button-like effect
Gmagick::read ; Reads image from filename
Gmagick::readimage ; Reads image from filename
Gmagick::readimageblob ; Reads image from a binary string
Gmagick::readimagefile ; The readimagefile purpose
Gmagick::reducenoiseimage ; Smooths the contours of an image
Gmagick::removeimage ; Removes an image from the image list
Gmagick::removeimageprofile ; Removes the named image profile and returns it
Gmagick::resampleimage ; Resample image to desired resolution
Gmagick::resizeimage ; Scales an image
Gmagick::rollimage ; Offsets an image
Gmagick::rotateimage ; Rotates an image
Gmagick::scaleimage ; Scales the size of an image
Gmagick::separateimagechannel ; Separates a channel from the image
Gmagick::setfilename ; Sets the filename before you read or write the image
Gmagick::setimagebackgroundcolor ; Sets the image background color.
Gmagick::setimageblueprimary ; Sets the image chromaticity blue primary point.
Gmagick::setimagebordercolor ; Sets the image border color.
Gmagick::setimagechanneldepth ; Sets the depth of a particular image channel
Gmagick::setimagecolorspace ; Sets the image colorspace
Gmagick::setimagecompose ; Sets the image composite operator
Gmagick::setimagedelay ; Sets the image delay
Gmagick::setimagedepth ; Sets the image depth
Gmagick::setimagedispose ; Sets the image disposal method
Gmagick::setimagefilename ; Sets the filename of a particular image in a sequence
Gmagick::setimageformat ; Sets the format of a particular image
Gmagick::setimagegamma ; Sets the image gamma
Gmagick::setimagegreenprimary ; TSets the image chromaticity green primary point.
Gmagick::setimageindex ; Set the iterator to the position in the image list specified with the index parameter
Gmagick::setimageinterlacescheme ; Sets the interlace scheme of the image.
Gmagick::setimageiterations ; Sets the image iterations.
Gmagick::setimageprofile ; Adds a named profile to the Gmagick object
Gmagick::setimageredprimary ; Sets the image chromaticity red primary point.
Gmagick::setimagerenderingintent ; Sets the image rendering intent
Gmagick::setimageresolution ; Sets the image resolution
Gmagick::setimagescene ; Sets the image scene
Gmagick::setimagetype ; Sets the image type
Gmagick::setimageunits ; Sets the image units of resolution.
Gmagick::setimagewhitepoint ; Sets the image chromaticity white point.
Gmagick::setsamplingfactors ; Sets the image sampling factors.
Gmagick::setsize ; Sets the size of the Gmagick object
Gmagick::shearimage ; Creating a parallelogram
Gmagick::solarizeimage ; Applies a solarizing effect to the image
Gmagick::spreadimage ; Randomly displaces each pixel in a block
Gmagick::stripimage ; Strips an image of all profiles and comments
Gmagick::swirlimage ; Swirls the pixels about the center of the image
Gmagick::thumbnailimage ; Changes the size of an image
Gmagick::trimimage ; Remove edges from the image
Gmagick::write ; Writes an image to the specified filename
Gmagick::writeimage ; Writes an image to the specified filename
Gmagick::__construct ; The Gmagick constructor
GmagickDraw::annotate ; Draws text on the image
GmagickDraw::arc ; Draws an arc
GmagickDraw::bezier ; Draws a bezier curve
GmagickDraw::ellipse ; Draws an ellipse on the image
GmagickDraw::getfillcolor ; Returns the fill color
GmagickDraw::getfillopacity ; Returns the opacity used when drawing
GmagickDraw::getfont ; Returns the font
GmagickDraw::getfontsize ; Returns the font pointsize
GmagickDraw::getfontstyle ; Returns the font style
GmagickDraw::getfontweight ; Returns the font weight
GmagickDraw::getstrokecolor ; Returns the color used for stroking object outlines
GmagickDraw::getstrokeopacity ; Returns the opacity of stroked object outlines
GmagickDraw::getstrokewidth ; Returns the width of the stroke used to draw object outlines
GmagickDraw::gettextdecoration ; Returns the text decoration
GmagickDraw::gettextencoding ; Returns the code set used for text annotations
GmagickDraw::line ; The line purpose
GmagickDraw::point ; Draws a point
GmagickDraw::polygon ; Draws a polygon
GmagickDraw::polyline ; Draws a polyline
GmagickDraw::rectangle ; Draws a rectangle
GmagickDraw::rotate ; Applies the specified rotation to the current coordinate space
GmagickDraw::roundrectangle ; Draws a rounded rectangle
GmagickDraw::scale ; Adjusts the scaling factor
GmagickDraw::setfillcolor ; Sets the fill color to be used for drawing filled objects.
GmagickDraw::setfillopacity ; The setfillopacity purpose
GmagickDraw::setfont ; Sets the fully-specified font to use when annotating with text.
GmagickDraw::setfontsize ; Sets the font pointsize to use when annotating with text.
GmagickDraw::setfontstyle ; Sets the font style to use when annotating with text
GmagickDraw::setfontweight ; Sets the font weight
GmagickDraw::setstrokecolor ; Sets the color used for stroking object outlines.
GmagickDraw::setstrokeopacity ; Specifies the opacity of stroked object outlines.
GmagickDraw::setstrokewidth ; Sets the width of the stroke used to draw object outlines.
GmagickDraw::settextdecoration ; Specifies a decoration
GmagickDraw::settextencoding ; Specifies specifies the text code set
GmagickPixel::getcolor ; Returns the color
GmagickPixel::getcolorcount ; Returns the color count associated with this color
GmagickPixel::getcolorvalue ; Gets the normalized value of the provided color channel
GmagickPixel::setcolor ; Sets the color
GmagickPixel::setcolorvalue ; Sets the normalized value of one of the channels
GmagickPixel::__construct ; The GmagickPixel constructor
gmdate ; 格式化一个 GMT/UTC 日期／时间
gmmktime ; 取得 GMT 日期的 UNIX 时间戳
gmp_abs ; Absolute value
gmp_add ; Add numbers
gmp_and ; Bitwise AND
gmp_clrbit ; Clear bit
gmp_cmp ; Compare numbers
gmp_com ; Calculates one's complement
gmp_div ; 别名 gmp_div_q
gmp_divexact ; Exact division of numbers
gmp_div_q ; Divide numbers
gmp_div_qr ; Divide numbers and get quotient and remainder
gmp_div_r ; Remainder of the division of numbers
gmp_fact ; Factorial
gmp_gcd ; Calculate GCD
gmp_gcdext ; Calculate GCD and multipliers
gmp_hamdist ; Hamming distance
gmp_init ; Create GMP number
gmp_intval ; Convert GMP number to integer
gmp_invert ; Inverse by modulo
gmp_jacobi ; Jacobi symbol
gmp_legendre ; Legendre symbol
gmp_mod ; Modulo operation
gmp_mul ; Multiply numbers
gmp_neg ; Negate number
gmp_nextprime ; Find next prime number
gmp_or ; Bitwise OR
gmp_perfect_square ; Perfect square check
gmp_popcount ; Population count
gmp_pow ; Raise number into power
gmp_powm ; Raise number into power with modulo
gmp_prob_prime ; Check if number is &quot;probably prime&quot;
gmp_random ; Random number
gmp_scan0 ; Scan for 0
gmp_scan1 ; Scan for 1
gmp_setbit ; Set bit
gmp_sign ; Sign of number
gmp_sqrt ; Calculate square root
gmp_sqrtrem ; Square root with remainder
gmp_strval ; Convert GMP number to string
gmp_sub ; Subtract numbers
gmp_testbit ; Tests if a bit is set
gmp_xor ; Bitwise XOR
gmstrftime ; 根据区域设置格式化 GMT/UTC 时间／日期
gnupg_adddecryptkey ; Add a key for decryption
gnupg_addencryptkey ; Add a key for encryption
gnupg_addsignkey ; Add a key for signing
gnupg_cleardecryptkeys ; Removes all keys which were set for decryption before
gnupg_clearencryptkeys ; Removes all keys which were set for encryption before
gnupg_clearsignkeys ; Removes all keys which were set for signing before
gnupg_decrypt ; Decrypts a given text
gnupg_decryptverify ; Decrypts and verifies a given text
gnupg_encrypt ; Encrypts a given text
gnupg_encryptsign ; Encrypts and signs a given text
gnupg_export ; Exports a key
gnupg_geterror ; Returns the errortext, if a function fails
gnupg_getprotocol ; Returns the currently active protocol for all operations
gnupg_import ; Imports a key
gnupg_init ; Initialize a connection
gnupg_keyinfo ; Returns an array with information about all keys that matches the given pattern
gnupg_setarmor ; Toggle armored output
gnupg_seterrormode ; Sets the mode for error_reporting
gnupg_setsignmode ; Sets the mode for signing
gnupg_sign ; Signs a given text
gnupg_verify ; Verifies a signed text
gopher_parsedir ; Translate a gopher formatted directory entry into an associative array.
grapheme_extract ; Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.
grapheme_stripos ; Find position (in grapheme units) of first occurrence of a case-insensitive string
grapheme_stristr ; Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.
grapheme_strlen ; Get string length in grapheme units
grapheme_strpos ; Find position (in grapheme units) of first occurrence of a string
grapheme_strripos ; Find position (in grapheme units) of last occurrence of a case-insensitive string
grapheme_strrpos ; Find position (in grapheme units) of last occurrence of a string
grapheme_strstr ; Returns part of haystack string from the first occurrence of needle to the end of haystack.
grapheme_substr ; Return part of a string
GregorianToJD ; 转变一个Gregorian历法日期到Julian Day计数
gupnp_context_get_host_ip ; Get the IP address
gupnp_context_get_port ; Get the port
gupnp_context_get_subscription_timeout ; Get the event subscription timeout
gupnp_context_host_path ; Start hosting
gupnp_context_new ; Create a new context
gupnp_context_set_subscription_timeout ; Sets the event subscription timeout
gupnp_context_timeout_add ; Sets a function to be called at regular intervals
gupnp_context_unhost_path ; Stop hosting
gupnp_control_point_browse_start ; Start browsing
gupnp_control_point_browse_stop ; Stop browsing
gupnp_control_point_callback_set ; Set control point callback
gupnp_control_point_new ; Create a new control point
gupnp_device_action_callback_set ; Set device callback function
gupnp_device_info_get ; Get info of root device
gupnp_device_info_get_service ; Get the service with type
gupnp_root_device_get_available ; Check whether root device is available
gupnp_root_device_get_relative_location ; Get the relative location of root device.
gupnp_root_device_new ; Create a new root device
gupnp_root_device_set_available ; Set whether or not root_device is available
gupnp_root_device_start ; Start main loop
gupnp_root_device_stop ; Stop main loop
gupnp_service_action_get ; Retrieves the specified action arguments
gupnp_service_action_return ; Return successfully
gupnp_service_action_return_error ; Return error code
gupnp_service_action_set ; Sets the specified action return values
gupnp_service_freeze_notify ; Freeze new notifications
gupnp_service_info_get ; Get full info of service
gupnp_service_info_get_introspection ; Get resource introspection of service
gupnp_service_introspection_get_state_variable ; Returns the state variable data
gupnp_service_notify ; Notifies listening clients
gupnp_service_proxy_action_get ; Send action to the service and get value
gupnp_service_proxy_action_set ; Send action to the service and set value
gupnp_service_proxy_add_notify ; Sets up callback for variable change notification
gupnp_service_proxy_callback_set ; Set service proxy callback for signal
gupnp_service_proxy_get_subscribed ; Check whether subscription is valid to the service
gupnp_service_proxy_remove_notify ; Cancels the variable change notification
gupnp_service_proxy_send_action ; Send action with multiple parameters synchronously
gupnp_service_proxy_set_subscribed ; (Un)subscribes to the service.
gupnp_service_thaw_notify ; Sends out any pending notifications and stops queuing of new ones.
gzclose ; Close an open gz-file pointer
gzcompress ; Compress a string
gzdecode ; Decodes a gzip compressed string
gzdeflate ; Deflate a string
gzencode ; Create a gzip compressed string
gzeof ; Test for EOF on a gz-file pointer
gzfile ; Read entire gz-file into an array
gzgetc ; Get character from gz-file pointer
gzgets ; Get line from file pointer
gzgetss ; Get line from gz-file pointer and strip HTML tags
gzinflate ; Inflate a deflated string
gzopen ; Open gz-file
gzpassthru ; Output all remaining data on a gz-file pointer
gzputs ; 别名 gzwrite
gzread ; Binary-safe gz-file read
gzrewind ; Rewind the position of a gz-file pointer
gzseek ; Seek on a gz-file pointer
gztell ; Tell gz-file pointer read/write position
gzuncompress ; Uncompress a compressed string
gzwrite ; Binary-safe gz-file write
HaruAnnotation::setBorderStyle ; Set the border style of the annotation
HaruAnnotation::setHighlightMode ; Set the highlighting mode of the annotation
HaruAnnotation::setIcon ; Set the icon style of the annotation
HaruAnnotation::setOpened ; Set the initial state of the annotation
HaruDestination::setFit ; Set the appearance of the page to fit the window
HaruDestination::setFitB ; Set the appearance of the page to fit the bounding box of the page within the window
HaruDestination::setFitBH ; Set the appearance of the page to fit the width of the bounding box
HaruDestination::setFitBV ; Set the appearance of the page to fit the height of the boudning box
HaruDestination::setFitH ; Set the appearance of the page to fit the window width
HaruDestination::setFitR ; Set the appearance of the page to fit the specified rectangle
HaruDestination::setFitV ; Set the appearance of the page to fit the window height
HaruDestination::setXYZ ; Set the appearance of the page
HaruDoc::addPage ; Add new page to the document
HaruDoc::addPageLabel ; Set the numbering style for the specified range of pages
HaruDoc::createOutline ; Create a HaruOutline instance
HaruDoc::getCurrentEncoder ; Get HaruEncoder currently used in the document
HaruDoc::getCurrentPage ; Return current page of the document
HaruDoc::getEncoder ; Get HaruEncoder instance for the specified encoding
HaruDoc::getFont ; Get HaruFont instance
HaruDoc::getInfoAttr ; Get current value of the specified document attribute
HaruDoc::getPageLayout ; Get current page layout
HaruDoc::getPageMode ; Get current page mode
HaruDoc::getStreamSize ; Get the size of the temporary stream
HaruDoc::insertPage ; Insert new page just before the specified page
HaruDoc::loadJPEG ; Load a JPEG image
HaruDoc::loadPNG ; Load PNG image and return HaruImage instance
HaruDoc::loadRaw ; Load a RAW image
HaruDoc::loadTTC ; Load the font with the specified index from TTC file
HaruDoc::loadTTF ; Load TTF font file
HaruDoc::loadType1 ; Load Type1 font
HaruDoc::output ; Write the document data to the output buffer
HaruDoc::readFromStream ; Read data from the temporary stream
HaruDoc::resetError ; Reset error state of the document handle
HaruDoc::resetStream ; Rewind the temporary stream
HaruDoc::save ; Save the document into the specified file
HaruDoc::saveToStream ; Save the document into a temporary stream
HaruDoc::setCompressionMode ; Set compression mode for the document
HaruDoc::setCurrentEncoder ; Set the current encoder for the document
HaruDoc::setEncryptionMode ; Set encryption mode for the document
HaruDoc::setInfoAttr ; Set the info attribute of the document
HaruDoc::setInfoDateAttr ; Set the datetime info attributes of the document
HaruDoc::setOpenAction ; Define which page is shown when the document is opened
HaruDoc::setPageLayout ; Set how pages should be displayed
HaruDoc::setPageMode ; Set how the document should be displayed
HaruDoc::setPagesConfiguration ; Set the number of pages per set of pages
HaruDoc::setPassword ; Set owner and user passwords for the document
HaruDoc::setPermission ; Set permissions for the document
HaruDoc::useCNSEncodings ; Enable Chinese simplified encodings
HaruDoc::useCNSFonts ; Enable builtin Chinese simplified fonts
HaruDoc::useCNTEncodings ; Enable Chinese traditional encodings
HaruDoc::useCNTFonts ; Enable builtin Chinese traditional fonts
HaruDoc::useJPEncodings ; Enable Japanese encodings
HaruDoc::useJPFonts ; Enable builtin Japanese fonts
HaruDoc::useKREncodings ; Enable Korean encodings
HaruDoc::useKRFonts ; Enable builtin Korean fonts
HaruDoc::__construct ; Construct new HaruDoc instance
HaruEncoder::getByteType ; Get the type of the byte in the text
HaruEncoder::getType ; Get the type of the encoder
HaruEncoder::getUnicode ; Convert the specified character to unicode
HaruEncoder::getWritingMode ; Get the writing mode of the encoder
HaruFont::getAscent ; Get the vertical ascent of the font
HaruFont::getCapHeight ; Get the distance from the baseline of uppercase letters
HaruFont::getDescent ; Get the vertical descent of the font
HaruFont::getEncodingName ; Get the name of the encoding
HaruFont::getFontName ; Get the name of the font
HaruFont::getTextWidth ; Get the total width of the text, number of characters, number of words and number of spaces
HaruFont::getUnicodeWidth ; Get the width of the character in the font
HaruFont::getXHeight ; Get the distance from the baseline of lowercase letters
HaruFont::measureText ; Calculate the number of characters which can be included within the specified width
HaruImage::getBitsPerComponent ; Get the number of bits used to describe each color component of the image
HaruImage::getColorSpace ; Get the name of the color space
HaruImage::getHeight ; Get the height of the image
HaruImage::getSize ; Get size of the image
HaruImage::getWidth ; Get the width of the image
HaruImage::setColorMask ; Set the color mask of the image
HaruImage::setMaskImage ; Set the image mask
HaruOutline::setDestination ; Set the destination for the outline
HaruOutline::setOpened ; Set the initial state of the outline
HaruPage::arc ; Append an arc to the current path
HaruPage::beginText ; Begin a text object and set the current text position to (0,0)
HaruPage::circle ; Append a circle to the current path
HaruPage::closePath ; Append a straight line from the current point to the start point of the path
HaruPage::concat ; Concatenate current transformation matrix of the page and the specified matrix
HaruPage::createDestination ; Create new HaruDestination instance
HaruPage::createLinkAnnotation ; Create new HaruAnnotation instance
HaruPage::createTextAnnotation ; Create new HaruAnnotation instance
HaruPage::createURLAnnotation ; Create and return new HaruAnnotation instance
HaruPage::curveTo ; Append a Bezier curve to the current path
HaruPage::curveTo2 ; Append a Bezier curve to the current path
HaruPage::curveTo3 ; Append a Bezier curve to the current path
HaruPage::drawImage ; Show image at the page
HaruPage::ellipse ; Append an ellipse to the current path
HaruPage::endPath ; End current path object without filling and painting operations
HaruPage::endText ; End current text object
HaruPage::eofill ; Fill current path using even-odd rule
HaruPage::eoFillStroke ; Fill current path using even-odd rule, then paint the path
HaruPage::fill ; Fill current path using nonzero winding number rule
HaruPage::fillStroke ; Fill current path using nonzero winding number rule, then paint the path
HaruPage::getCharSpace ; Get the current value of character spacing
HaruPage::getCMYKFill ; Get the current filling color
HaruPage::getCMYKStroke ; Get the current stroking color
HaruPage::getCurrentFont ; Get the currently used font
HaruPage::getCurrentFontSize ; Get the current font size
HaruPage::getCurrentPos ; Get the current position for path painting
HaruPage::getCurrentTextPos ; Get the current position for text printing
HaruPage::getDash ; Get the current dash pattern
HaruPage::getFillingColorSpace ; Get the current filling color space
HaruPage::getFlatness ; Get the flatness of the page
HaruPage::getGMode ; Get the current graphics mode
HaruPage::getGrayFill ; Get the current filling color
HaruPage::getGrayStroke ; Get the current stroking color
HaruPage::getHeight ; Get the height of the page
HaruPage::getHorizontalScaling ; Get the current value of horizontal scaling
HaruPage::getLineCap ; Get the current line cap style
HaruPage::getLineJoin ; Get the current line join style
HaruPage::getLineWidth ; Get the current line width
HaruPage::getMiterLimit ; Get the value of miter limit
HaruPage::getRGBFill ; Get the current filling color
HaruPage::getRGBStroke ; Get the current stroking color
HaruPage::getStrokingColorSpace ; Get the current stroking color space
HaruPage::getTextLeading ; Get the current value of line spacing
HaruPage::getTextMatrix ; Get the current text transformation matrix of the page
HaruPage::getTextRenderingMode ; Get the current text rendering mode
HaruPage::getTextRise ; Get the current value of text rising
HaruPage::getTextWidth ; Get the width of the text using current fontsize, character spacing and word spacing
HaruPage::getTransMatrix ; Get the current transformation matrix of the page
HaruPage::getWidth ; Get the width of the page
HaruPage::getWordSpace ; Get the current value of word spacing
HaruPage::lineTo ; Draw a line from the current point to the specified point
HaruPage::measureText ; Calculate the number of characters which can be included within the specified width
HaruPage::moveTextPos ; Move text position to the specified offset
HaruPage::moveTo ; Set starting point for new drawing path
HaruPage::moveToNextLine ; Move text position to the start of the next line
HaruPage::rectangle ; Append a rectangle to the current path
HaruPage::setCharSpace ; Set character spacing for the page
HaruPage::setCMYKFill ; Set filling color for the page
HaruPage::setCMYKStroke ; Set stroking color for the page
HaruPage::setDash ; Set the dash pattern for the page
HaruPage::setFlatness ; Set flatness for the page
HaruPage::setFontAndSize ; Set font and fontsize for the page
HaruPage::setGrayFill ; Set filling color for the page
HaruPage::setGrayStroke ; Sets stroking color for the page
HaruPage::setHeight ; Set height of the page
HaruPage::setHorizontalScaling ; Set horizontal scaling for the page
HaruPage::setLineCap ; Set the shape to be used at the ends of lines
HaruPage::setLineJoin ; Set line join style for the page
HaruPage::setLineWidth ; Set line width for the page
HaruPage::setMiterLimit ; Set the current value of the miter limit of the page
HaruPage::setRGBFill ; Set filling color for the page
HaruPage::setRGBStroke ; Set stroking color for the page
HaruPage::setRotate ; Set rotation angle of the page
HaruPage::setSize ; Set size and direction of the page
HaruPage::setSlideShow ; Set transition style for the page
HaruPage::setTextLeading ; Set text leading (line spacing) for the page
HaruPage::setTextMatrix ; Set the current text transformation matrix of the page
HaruPage::setTextRenderingMode ; Set text rendering mode for the page
HaruPage::setTextRise ; Set the current value of text rising
HaruPage::setWidth ; Set width of the page
HaruPage::setWordSpace ; Set word spacing for the page
HaruPage::showText ; Print text at the current position of the page
HaruPage::showTextNextLine ; Move the current position to the start of the next line and print the text
HaruPage::stroke ; Paint current path
HaruPage::textOut ; Print the text on the specified position
HaruPage::textRect ; Print the text inside the specified region
hash ; Generate a hash value (message digest)
hash_algos ; Return a list of registered hashing algorithms
hash_copy ; Copy hashing context
hash_file ; Generate a hash value using the contents of a given file
hash_final ; Finalize an incremental hash and return resulting digest
hash_hmac ; Generate a keyed hash value using the HMAC method
hash_hmac_file ; Generate a keyed hash value using the HMAC method and the contents of a given file
hash_init ; Initialize an incremental hashing context
hash_pbkdf2 ; Generate a PBKDF2 key derivation of a supplied password
hash_update ; Pump data into an active hashing context
hash_update_file ; Pump data into an active hashing context from a file
hash_update_stream ; Pump data into an active hashing context from an open stream
header ; Send a raw HTTP header
headers_list ; Returns a list of response headers sent (or ready to send)
headers_sent ; Checks if or where headers have been sent
header_register_callback ; Call a header function
header_remove ; Remove previously set headers
hebrev ; 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew）
hebrevc ; 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew），并且转换换行符
hex2bin ; Decodes a hexadecimally encoded binary string
hexdec ; 十六进制转换为十进制
highlight_file ; 语法高亮一个文件
highlight_string ; 字符串的语法高亮
htmlentities ; Convert all applicable characters to HTML entities
htmlspecialchars ; Convert special characters to HTML entities
htmlspecialchars_decode ; 将特殊的 HTML 实体转换回普通字符
html_entity_decode ; Convert all HTML entities to their applicable characters
http:// ; 访问 HTTP(s) 网址
HTTP context options ; HTTP context option listing
HttpDeflateStream::factory ; HttpDeflateStream class factory
HttpDeflateStream::finish ; Finalize deflate stream
HttpDeflateStream::flush ; Flush deflate stream
HttpDeflateStream::update ; Update deflate stream
HttpDeflateStream::__construct ; HttpDeflateStream class constructor
HttpInflateStream::factory ; HttpInflateStream class factory
HttpInflateStream::finish ; Finalize inflate stream
HttpInflateStream::flush ; Flush inflate stream
HttpInflateStream::update ; Update inflate stream
HttpInflateStream::__construct ; HttpInflateStream class constructor
HttpMessage::addHeaders ; Add headers
HttpMessage::detach ; Detach HttpMessage
HttpMessage::factory ; Create HttpMessage from string
HttpMessage::fromEnv ; Create HttpMessage from environment
HttpMessage::fromString ; Create HttpMessage from string
HttpMessage::getBody ; Get message body
HttpMessage::getHeader ; Get header
HttpMessage::getHeaders ; Get message headers
HttpMessage::getHttpVersion ; Get HTTP version
HttpMessage::getParentMessage ; Get parent message
HttpMessage::getRequestMethod ; Get request method
HttpMessage::getRequestUrl ; Get request URL
HttpMessage::getResponseCode ; Get response code
HttpMessage::getResponseStatus ; Get response status
HttpMessage::getType ; Get message type
HttpMessage::guessContentType ; Guess content type
HttpMessage::prepend ; Prepend message(s)
HttpMessage::reverse ; Reverse message chain
HttpMessage::send ; Send message
HttpMessage::setBody ; Set message body
HttpMessage::setHeaders ; Set headers
HttpMessage::setHttpVersion ; Set HTTP version
HttpMessage::setRequestMethod ; Set request method
HttpMessage::setRequestUrl ; Set request URL
HttpMessage::setResponseCode ; Set response code
HttpMessage::setResponseStatus ; Set response status
HttpMessage::setType ; Set message type
HttpMessage::toMessageTypeObject ; Create HTTP object regarding message type
HttpMessage::toString ; Get string representation
HttpMessage::__construct ; HttpMessage constructor
HttpQueryString::get ; Get (part of) query string
HttpQueryString::mod ; Modifiy query string copy
HttpQueryString::set ; Set query string params
HttpQueryString::singleton ; HttpQueryString singleton
HttpQueryString::toArray ; Get query string as array
HttpQueryString::toString ; Get query string
HttpQueryString::xlate ; Change query strings charset
HttpQueryString::__construct ; HttpQueryString constructor
HttpRequest::addCookies ; Add cookies
HttpRequest::addHeaders ; Add headers
HttpRequest::addPostFields ; Add post fields
HttpRequest::addPostFile ; Add post file
HttpRequest::addPutData ; Add put data
HttpRequest::addQueryData ; Add query data
HttpRequest::addRawPostData ; Add raw post data
HttpRequest::addSslOptions ; Add ssl options
HttpRequest::clearHistory ; Clear history
HttpRequest::enableCookies ; Enable cookies
HttpRequest::getContentType ; Get content type
HttpRequest::getCookies ; Get cookies
HttpRequest::getHeaders ; Get headers
HttpRequest::getHistory ; Get history
HttpRequest::getMethod ; Get method
HttpRequest::getOptions ; Get options
HttpRequest::getPostFields ; Get post fields
HttpRequest::getPostFiles ; Get post files
HttpRequest::getPutData ; Get put data
HttpRequest::getPutFile ; Get put file
HttpRequest::getQueryData ; Get query data
HttpRequest::getRawPostData ; Get raw post data
HttpRequest::getRawRequestMessage ; Get raw request message
HttpRequest::getRawResponseMessage ; Get raw response message
HttpRequest::getRequestMessage ; Get request message
HttpRequest::getResponseBody ; Get response body
HttpRequest::getResponseCode ; Get response code
HttpRequest::getResponseCookies ; Get response cookie(s)
HttpRequest::getResponseData ; Get response data
HttpRequest::getResponseHeader ; Get response header(s)
HttpRequest::getResponseInfo ; Get response info
HttpRequest::getResponseMessage ; Get response message
HttpRequest::getResponseStatus ; Get response status
HttpRequest::getSslOptions ; Get ssl options
HttpRequest::getUrl ; Get url
HttpRequest::resetCookies ; Reset cookies
HttpRequest::send ; Send request
HttpRequest::setBody ; Set request body to send, overwriting previously set request body.
HttpRequest::setContentType ; Set content type
HttpRequest::setCookies ; Set cookies
HttpRequest::setHeaders ; Set headers
HttpRequest::setMethod ; Set method
HttpRequest::setOptions ; Set options
HttpRequest::setPostFields ; Set post fields
HttpRequest::setPostFiles ; Set post files
HttpRequest::setPutData ; Set put data
HttpRequest::setPutFile ; Set put file
HttpRequest::setQueryData ; Set query data
HttpRequest::setRawPostData ; Set raw post data
HttpRequest::setSslOptions ; Set ssl options
HttpRequest::setUrl ; Set URL
HttpRequest::__construct ; HttpRequest constructor
HttpRequestPool::attach ; Attach HttpRequest
HttpRequestPool::detach ; Detach HttpRequest
HttpRequestPool::getAttachedRequests ; Get attached requests
HttpRequestPool::getFinishedRequests ; Get finished requests
HttpRequestPool::reset ; Reset request pool
HttpRequestPool::send ; Send all requests
HttpRequestPool::socketPerform ; Perform socket actions
HttpRequestPool::socketSelect ; Perform socket select
HttpRequestPool::__construct ; HttpRequestPool constructor
HttpRequestPool::__destruct ; HttpRequestPool destructor
HttpResponse::capture ; Capture script output
HttpResponse::getBufferSize ; Get buffer size
HttpResponse::getCache ; Get cache
HttpResponse::getCacheControl ; Get cache control
HttpResponse::getContentDisposition ; Get content disposition
HttpResponse::getContentType ; Get content type
HttpResponse::getData ; Get data
HttpResponse::getETag ; Get ETag
HttpResponse::getFile ; Get file
HttpResponse::getGzip ; Get gzip
HttpResponse::getHeader ; Get header
HttpResponse::getLastModified ; Get last modified
HttpResponse::getRequestBody ; Get request body
HttpResponse::getRequestBodyStream ; Get request body stream
HttpResponse::getRequestHeaders ; Get request headers
HttpResponse::getStream ; Get Stream
HttpResponse::getThrottleDelay ; Get throttle delay
HttpResponse::guessContentType ; Guess content type
HttpResponse::redirect ; Redirect
HttpResponse::send ; Send response
HttpResponse::setBufferSize ; Set buffer size
HttpResponse::setCache ; Set cache
HttpResponse::setCacheControl ; Set cache control
HttpResponse::setContentDisposition ; Set content disposition
HttpResponse::setContentType ; Set content type
HttpResponse::setData ; Set data
HttpResponse::setETag ; Set ETag
HttpResponse::setFile ; Set file
HttpResponse::setGzip ; Set gzip
HttpResponse::setHeader ; Set header
HttpResponse::setLastModified ; Set last modified
HttpResponse::setStream ; Set stream
HttpResponse::setThrottleDelay ; Set throttle delay
HttpResponse::status ; Send HTTP response status
http_build_cookie ; Build cookie string
http_build_query ; 生成 URL-encode 之后的请求字符串
http_build_str ; 产生一个查询字符串
http_build_url ; 产生一个 URL
http_cache_etag ; Caching by ETag
http_cache_last_modified ; Caching by last modification
http_chunked_decode ; Decode chunked-encoded data
http_date ; Compose HTTP RFC compliant date
http_deflate ; Deflate data
http_get ; Perform GET request
http_get_request_body ; Get request body as string
http_get_request_body_stream ; Get request body as stream
http_get_request_headers ; Get request headers as array
http_head ; Perform HEAD request
http_inflate ; Inflate data
http_match_etag ; Match ETag
http_match_modified ; Match last modification
http_match_request_header ; Match any header
http_negotiate_charset ; Negotiate client's preferred character set
http_negotiate_content_type ; Negotiate client's preferred content type
http_negotiate_language ; Negotiate client's preferred language
http_parse_cookie ; Parse HTTP cookie
http_parse_headers ; Parse HTTP headers
http_parse_message ; Parse HTTP messages
http_parse_params ; Parse parameter list
http_persistent_handles_clean ; Clean up persistent handles
http_persistent_handles_count ; Stat persistent handles
http_persistent_handles_ident ; Get/set ident of persistent handles
http_post_data ; Perform POST request with pre-encoded data
http_post_fields ; Perform POST request with data to be encoded
http_put_data ; Perform PUT request with data
http_put_file ; Perform PUT request with file
http_put_stream ; Perform PUT request with stream
http_redirect ; Issue HTTP redirect
http_request ; Perform custom request
http_request_body_encode ; Encode request body
http_request_method_exists ; Check whether request method exists
http_request_method_name ; Get request method name
http_request_method_register ; Register request method
http_request_method_unregister ; Unregister request method
http_response_code ; Get or Set the HTTP response code
http_send_content_disposition ; Send Content-Disposition
http_send_content_type ; Send Content-Type
http_send_data ; Send arbitrary data
http_send_file ; Send file
http_send_last_modified ; Send Last-Modified
http_send_status ; Send HTTP response status
http_send_stream ; Send stream
http_support ; Check built-in HTTP support
http_throttle ; HTTP throttling
hwapi_attribute_new ; Creates instance of class hw_api_attribute
hwapi_content_new ; Create new instance of class hw_api_content
hwapi_hgcsp ; Returns object of class hw_api
hwapi_object_new ; Creates a new instance of class hwapi_object_new
hw_api::checkin ; Checks in an object
hw_api::checkout ; Checks out an object
hw_api::children ; Returns children of an object
hw_api::content ; Returns content of an object
hw_api::copy ; Copies physically
hw_api::dbstat ; Returns statistics about database server
hw_api::dcstat ; Returns statistics about document cache server
hw_api::dstanchors ; Returns a list of all destination anchors
hw_api::dstofsrcanchor ; Returns destination of a source anchor
hw_api::find ; Search for objects
hw_api::ftstat ; Returns statistics about fulltext server
hw_api::hwstat ; Returns statistics about Hyperwave server
hw_api::identify ; Log into Hyperwave Server
hw_api::info ; Returns information about server configuration
hw_api::insert ; Inserts a new object
hw_api::insertanchor ; Inserts a new object of type anchor
hw_api::insertcollection ; Inserts a new object of type collection
hw_api::insertdocument ; Inserts a new object of type document
hw_api::link ; Creates a link to an object
hw_api::lock ; Locks an object
hw_api::move ; Moves object between collections
hw_api::object ; Retrieve attribute information
hw_api::objectbyanchor ; Returns the object an anchor belongs to
hw_api::parents ; Returns parents of an object
hw_api::remove ; Delete an object
hw_api::replace ; Replaces an object
hw_api::setcommittedversion ; Commits version other than last version
hw_api::srcanchors ; Returns a list of all source anchors
hw_api::srcsofdst ; Returns source of a destination object
hw_api::unlock ; Unlocks a locked object
hw_api::user ; Returns the own user object
hw_api::userlist ; Returns a list of all logged in users
hw_api_attribute::key ; Returns key of the attribute
hw_api_attribute::langdepvalue ; Returns value for a given language
hw_api_attribute::value ; Returns value of the attribute
hw_api_attribute::values ; Returns all values of the attribute
hw_api_content::mimetype ; Returns mimetype
hw_api_content::read ; Read content
hw_api_error::count ; Returns number of reasons
hw_api_error::reason ; Returns reason of error
hw_api_object::assign ; Clones object
hw_api_object::attreditable ; Checks whether an attribute is editable
hw_api_object::count ; Returns number of attributes
hw_api_object::insert ; Inserts new attribute
hw_api_object::remove ; Removes attribute
hw_api_object::title ; Returns the title attribute
hw_api_object::value ; Returns value of attribute
hw_api_reason::description ; Returns description of reason
hw_api_reason::type ; Returns type of reason
hw_Array2Objrec ; Convert attributes from object array to object record
hw_changeobject ; Changes attributes of an object (obsolete)
hw_Children ; Object ids of children
hw_ChildrenObj ; Object records of children
hw_Close ; Closes the Hyperwave connection
hw_Connect ; Opens a connection
hw_connection_info ; Prints information about the connection to Hyperwave server
hw_cp ; Copies objects
hw_Deleteobject ; Deletes object
hw_DocByAnchor ; Object id object belonging to anchor
hw_DocByAnchorObj ; Object record object belonging to anchor
hw_Document_Attributes ; Object record of hw_document
hw_Document_BodyTag ; Body tag of hw_document
hw_Document_Content ; Returns content of hw_document
hw_Document_SetContent ; Sets/replaces content of hw_document
hw_Document_Size ; Size of hw_document
hw_dummy ; Hyperwave dummy function
hw_EditText ; Retrieve text document
hw_Error ; Error number
hw_ErrorMsg ; Returns error message
hw_Free_Document ; Frees hw_document
hw_GetAnchors ; Object ids of anchors of document
hw_GetAnchorsObj ; Object records of anchors of document
hw_GetAndLock ; Return object record and lock object
hw_GetChildColl ; Object ids of child collections
hw_GetChildCollObj ; Object records of child collections
hw_GetChildDocColl ; Object ids of child documents of collection
hw_GetChildDocCollObj ; Object records of child documents of collection
hw_GetObject ; Object record
hw_GetObjectByQuery ; Search object
hw_GetObjectByQueryColl ; Search object in collection
hw_GetObjectByQueryCollObj ; Search object in collection
hw_GetObjectByQueryObj ; Search object
hw_GetParents ; Object ids of parents
hw_GetParentsObj ; Object records of parents
hw_getrellink ; Get link from source to dest relative to rootid
hw_GetRemote ; Gets a remote document
hw_getremotechildren ; Gets children of remote document
hw_GetSrcByDestObj ; Returns anchors pointing at object
hw_GetText ; Retrieve text document
hw_getusername ; Name of currently logged in user
hw_Identify ; Identifies as user
hw_InCollections ; Check if object ids in collections
hw_Info ; Info about connection
hw_InsColl ; Insert collection
hw_InsDoc ; Insert document
hw_insertanchors ; Inserts only anchors into text
hw_InsertDocument ; Upload any document
hw_InsertObject ; Inserts an object record
hw_mapid ; Maps global id on virtual local id
hw_Modifyobject ; Modifies object record
hw_mv ; Moves objects
hw_New_Document ; Create new document
hw_objrec2array ; Convert attributes from object record to object array
hw_Output_Document ; Prints hw_document
hw_pConnect ; Make a persistent database connection
hw_PipeDocument ; Retrieve any document
hw_Root ; Root object id
hw_setlinkroot ; Set the id to which links are calculated
hw_stat ; Returns status string
hw_Unlock ; Unlock object
hw_Who ; List of currently logged in users
hypot ; 计算一直角三角形的斜边长度
ibase_add_user ; Add a user to a security database
ibase_affected_rows ; Return the number of rows that were affected by the previous query
ibase_backup ; Initiates a backup task in the service manager and returns immediately
ibase_blob_add ; Add data into a newly created blob
ibase_blob_cancel ; Cancel creating blob
ibase_blob_close ; Close blob
ibase_blob_create ; Create a new blob for adding data
ibase_blob_echo ; Output blob contents to browser
ibase_blob_get ; Get len bytes data from open blob
ibase_blob_import ; Create blob, copy file in it, and close it
ibase_blob_info ; Return blob length and other useful info
ibase_blob_open ; Open blob for retrieving data parts
ibase_close ; Close a connection to an InterBase database
ibase_commit ; Commit a transaction
ibase_commit_ret ; Commit a transaction without closing it
ibase_connect ; Open a connection to a database
ibase_db_info ; Request statistics about a database
ibase_delete_user ; Delete a user from a security database
ibase_drop_db ; Drops a database
ibase_errcode ; Return an error code
ibase_errmsg ; Return error messages
ibase_execute ; Execute a previously prepared query
ibase_fetch_assoc ; Fetch a result row from a query as an associative array
ibase_fetch_object ; Get an object from a InterBase database
ibase_fetch_row ; Fetch a row from an InterBase database
ibase_field_info ; Get information about a field
ibase_free_event_handler ; Cancels a registered event handler
ibase_free_query ; Free memory allocated by a prepared query
ibase_free_result ; Free a result set
ibase_gen_id ; Increments the named generator and returns its new value
ibase_maintain_db ; Execute a maintenance command on the database server
ibase_modify_user ; Modify a user to a security database
ibase_name_result ; Assigns a name to a result set
ibase_num_fields ; Get the number of fields in a result set
ibase_num_params ; Return the number of parameters in a prepared query
ibase_param_info ; Return information about a parameter in a prepared query
ibase_pconnect ; Open a persistent connection to an InterBase database
ibase_prepare ; Prepare a query for later binding of parameter placeholders and execution
ibase_query ; Execute a query on an InterBase database
ibase_restore ; Initiates a restore task in the service manager and returns immediately
ibase_rollback ; Roll back a transaction
ibase_rollback_ret ; Roll back a transaction without closing it
ibase_server_info ; Request information about a database server
ibase_service_attach ; Connect to the service manager
ibase_service_detach ; Disconnect from the service manager
ibase_set_event_handler ; Register a callback function to be called when events are posted
ibase_trans ; Begin a transaction
ibase_wait_event ; Wait for an event to be posted by the database
iconv ; 字符串按要求的字符编码来转换
iconv_get_encoding ; 获取 iconv 扩展的内部配置变量
iconv_mime_decode ; Decodes a MIME header field
iconv_mime_decode_headers ; 一次性解码多个 MIME 头字段
iconv_mime_encode ; Composes a MIME header field
iconv_set_encoding ; 为字符编码转换设定当前设置
iconv_strlen ; 返回字符串的字符数统计
iconv_strpos ; Finds position of first occurrence of a needle within a haystack
iconv_strrpos ; Finds the last occurrence of a needle within a haystack
iconv_substr ; 截取字符串的部分
id3_get_frame_long_name ; Get the long name of an ID3v2 frame
id3_get_frame_short_name ; Get the short name of an ID3v2 frame
id3_get_genre_id ; Get the id for a genre
id3_get_genre_list ; Get all possible genre values
id3_get_genre_name ; Get the name for a genre id
id3_get_tag ; Get all information stored in an ID3 tag
id3_get_version ; Get version of an ID3 tag
id3_remove_tag ; Remove an existing ID3 tag
id3_set_tag ; Update information stored in an ID3 tag
idate ; 将本地时间日期格式化为整数
idn_to_ascii ; Convert domain name to IDNA ASCII form.
idn_to_unicode ; 别名 idn_to_utf8
idn_to_utf8 ; Convert domain name from IDNA ASCII to Unicode.
ifxus_close_slob ; Deletes the slob object
ifxus_create_slob ; Creates an slob object and opens it
ifxus_free_slob ; Deletes the slob object
ifxus_open_slob ; Opens an slob object
ifxus_read_slob ; Reads nbytes of the slob object
ifxus_seek_slob ; Sets the current file or seek position
ifxus_tell_slob ; Returns the current file or seek position
ifxus_write_slob ; Writes a string into the slob object
ifx_affected_rows ; Get number of rows affected by a query
ifx_blobinfile_mode ; Set the default blob mode for all select queries
ifx_byteasvarchar ; Set the default byte mode
ifx_close ; Close Informix connection
ifx_connect ; Open Informix server connection
ifx_copy_blob ; Duplicates the given blob object
ifx_create_blob ; Creates an blob object
ifx_create_char ; Creates an char object
ifx_do ; Execute a previously prepared SQL-statement
ifx_error ; Returns error code of last Informix call
ifx_errormsg ; Returns error message of last Informix call
ifx_fetch_row ; Get row as an associative array
ifx_fieldproperties ; List of SQL fieldproperties
ifx_fieldtypes ; List of Informix SQL fields
ifx_free_blob ; Deletes the blob object
ifx_free_char ; Deletes the char object
ifx_free_result ; Releases resources for the query
ifx_getsqlca ; Get the contents of sqlca.sqlerrd[0..5] after a query
ifx_get_blob ; Return the content of a blob object
ifx_get_char ; Return the content of the char object
ifx_htmltbl_result ; Formats all rows of a query into a HTML table
ifx_nullformat ; Sets the default return value on a fetch row
ifx_num_fields ; Returns the number of columns in the query
ifx_num_rows ; Count the rows already fetched from a query
ifx_pconnect ; Open persistent Informix connection
ifx_prepare ; Prepare an SQL-statement for execution
ifx_query ; Send Informix query
ifx_textasvarchar ; Set the default text mode
ifx_update_blob ; Updates the content of the blob object
ifx_update_char ; Updates the content of the char object
ignore_user_abort ; 设置客户端断开连接时是否中断脚本的执行
iis_add_server ; Creates a new virtual web server
iis_get_dir_security ; Gets Directory Security
iis_get_script_map ; Gets script mapping on a virtual directory for a specific extension
iis_get_server_by_comment ; Return the instance number associated with the Comment
iis_get_server_by_path ; Return the instance number associated with the Path
iis_get_server_rights ; Gets server rights
iis_get_service_state ; Returns the state for the service defined by ServiceId
iis_remove_server ; Removes the virtual web server indicated by ServerInstance
iis_set_app_settings ; Creates application scope for a virtual directory
iis_set_dir_security ; Sets Directory Security
iis_set_script_map ; Sets script mapping on a virtual directory
iis_set_server_rights ; Sets server rights
iis_start_server ; Starts the virtual web server
iis_start_service ; Starts the service defined by ServiceId
iis_stop_server ; Stops the virtual web server
iis_stop_service ; Stops the service defined by ServiceId
image2wbmp ; 以 WBMP 格式将图像输出到浏览器或文件
imagealphablending ; 设定图像的混色模式
imageantialias ; 是否使用抗锯齿（antialias）功能
imagearc ; 画椭圆弧
imagechar ; 水平地画一个字符
imagecharup ; 垂直地画一个字符
imagecolorallocate ; 为一幅图像分配颜色
imagecolorallocatealpha ; 为一幅图像分配颜色 + alpha
imagecolorat ; 取得某像素的颜色索引值
imagecolorclosest ; 取得与指定的颜色最接近的颜色的索引值
imagecolorclosestalpha ; 取得与指定的颜色加透明度最接近的颜色
imagecolorclosesthwb ; 取得与给定颜色最接近的色度的黑白色的索引
imagecolordeallocate ; 取消图像颜色的分配
imagecolorexact ; 取得指定颜色的索引值
imagecolorexactalpha ; 取得指定的颜色加透明度的索引值
imagecolormatch ; 使一个图像中调色板版本的颜色与真彩色版本更能匹配
imagecolorresolve ; 取得指定颜色的索引值或有可能得到的最接近的替代值
imagecolorresolvealpha ; 取得指定颜色 + alpha 的索引值或有可能得到的最接近的替代值
imagecolorset ; 给指定调色板索引设定颜色
imagecolorsforindex ; 取得某索引的颜色
imagecolorstotal ; 取得一幅图像的调色板中颜色的数目
imagecolortransparent ; 将某个颜色定义为透明色
imageconvolution ; 用系数 div 和 offset 申请一个 3x3 的卷积矩阵
imagecopy ; 拷贝图像的一部分
imagecopymerge ; 拷贝并合并图像的一部分
imagecopymergegray ; 用灰度拷贝并合并图像的一部分
imagecopyresampled ; 重采样拷贝部分图像并调整大小
imagecopyresized ; 拷贝部分图像并调整大小
imagecreate ; 新建一个基于调色板的图像
imagecreatefromgd ; 从 GD 文件或 URL 新建一图像
imagecreatefromgd2 ; 从 GD2 文件或 URL 新建一图像
imagecreatefromgd2part ; 从给定的 GD2 文件或 URL 中的部分新建一图像
imagecreatefromgif ; 由文件或 URL 创建一个新图象。
imagecreatefromjpeg ; 由文件或 URL 创建一个新图象。
imagecreatefrompng ; 由文件或 URL 创建一个新图象。
imagecreatefromstring ; 从字符串中的图像流新建一图像
imagecreatefromwbmp ; 由文件或 URL 创建一个新图象。
imagecreatefromwebp ; 由文件或 URL 创建一个新图象。
imagecreatefromxbm ; 由文件或 URL 创建一个新图象。
imagecreatefromxpm ; 由文件或 URL 创建一个新图象。
imagecreatetruecolor ; 新建一个真彩色图像
imagedashedline ; 画一虚线
imagedestroy ; 销毁一图像
imageellipse ; 画一个椭圆
imagefill ; 区域填充
imagefilledarc ; 画一椭圆弧且填充
imagefilledellipse ; 画一椭圆并填充
imagefilledpolygon ; 画一多边形并填充
imagefilledrectangle ; 画一矩形并填充
imagefilltoborder ; 区域填充到指定颜色的边界为止
imagefilter ; 对图像使用过滤器
imageflip ; Flips an image using a given mode
imagefontheight ; 取得字体高度
imagefontwidth ; 取得字体宽度
imageftbbox ; 给出一个使用 FreeType 2 字体的文本框
imagefttext ; 使用 FreeType 2 字体将文本写入图像
imagegammacorrect ; 对 GD 图像应用 gamma 修正
imagegd ; 将 GD 图像输出到浏览器或文件
imagegd2 ; 将 GD2 图像输出到浏览器或文件
imagegif ; 输出图象到浏览器或文件。
imagegrabscreen ; Captures the whole screen
imagegrabwindow ; Captures a window
imageinterlace ; 激活或禁止隔行扫描
imageistruecolor ; 检查图像是否为真彩色图像
imagejpeg ; 输出图象到浏览器或文件。
imagelayereffect ; 设定 alpha 混色标志以使用绑定的 libgd 分层效果
imageline ; 画一条线段
imageloadfont ; 载入一新字体
imagepalettecopy ; 将调色板从一幅图像拷贝到另一幅
imagepalettetotruecolor ; Converts a palette based image to true color
imagepng ; 以 PNG 格式将图像输出到浏览器或文件
imagepolygon ; 画一个多边形
imagepsbbox ; 给出一个使用 PostScript Type1 字体的文本方框
imagepsencodefont ; 改变字体中的字符编码矢量
imagepsextendfont ; 扩充或精简字体
imagepsfreefont ; 释放一个 PostScript Type 1 字体所占用的内存
imagepsloadfont ; 从文件中加载一个 PostScript Type 1 字体
imagepsslantfont ; 倾斜某字体
imagepstext ; 用 PostScript Type1 字体把文本字符串画在图像上
imagerectangle ; 画一个矩形
imagerotate ; 用给定角度旋转图像
imagesavealpha ; 设置标记以在保存 PNG 图像时保存完整的 alpha 通道信息（与单一透明色相反）
imagesetbrush ; 设定画线用的画笔图像
imagesetinterpolation ; Set the interpolation method
imagesetpixel ; 画一个单一像素
imagesetstyle ; 设定画线的风格
imagesetthickness ; 设定画线的宽度
imagesettile ; 设定用于填充的贴图
imagestring ; 水平地画一行字符串
imagestringup ; 垂直地画一行字符串
imagesx ; 取得图像宽度
imagesy ; 取得图像高度
imagetruecolortopalette ; 将真彩色图像转换为调色板图像
imagettfbbox ; 取得使用 TrueType 字体的文本的范围
imagettftext ; 用 TrueType 字体向图像写入文本
imagetypes ; 返回当前 PHP 版本所支持的图像类型
imagewbmp ; 以 WBMP 格式将图像输出到浏览器或文件
imagewebp ; Output an WebP image to browser or file
imagexbm ; 将 XBM 图像输出到浏览器或文件
image_type_to_extension ; 取得图像类型的文件后缀
Imagick::adaptiveBlurImage ; Adds adaptive blur filter to image
Imagick::adaptiveResizeImage ; Adaptively resize image with data dependent triangulation
Imagick::adaptiveSharpenImage ; Adaptively sharpen the image
Imagick::adaptiveThresholdImage ; Selects a threshold for each pixel based on a range of intensity
Imagick::addImage ; Adds new image to Imagick object image list
Imagick::addNoiseImage ; Adds random noise to the image
Imagick::affineTransformImage ; Transforms an image
Imagick::animateImages ; Animates an image or images
Imagick::annotateImage ; Annotates an image with text
Imagick::appendImages ; Append a set of images
Imagick::averageImages ; Average a set of images
Imagick::blackThresholdImage ; Forces all pixels below the threshold into black
Imagick::blurImage ; Adds blur filter to image
Imagick::borderImage ; Surrounds the image with a border
Imagick::charcoalImage ; Simulates a charcoal drawing
Imagick::chopImage ; Removes a region of an image and trims
Imagick::clear ; Clears all resources associated to Imagick object
Imagick::clipImage ; Clips along the first path from the 8BIM profile
Imagick::clipPathImage ; Clips along the named paths from the 8BIM profile
Imagick::clone ; Makes an exact copy of the Imagick object
Imagick::clutImage ; Replaces colors in the image
Imagick::coalesceImages ; Composites a set of images
Imagick::colorFloodfillImage ; Changes the color value of any pixel that matches target
Imagick::colorizeImage ; Blends the fill color with the image
Imagick::combineImages ; Combines one or more images into a single image
Imagick::commentImage ; Adds a comment to your image
Imagick::compareImageChannels ; Returns the difference in one or more images
Imagick::compareImageLayers ; Returns the maximum bounding region between images
Imagick::compareImages ; Compares an image to a reconstructed image
Imagick::compositeImage ; Composite one image onto another
Imagick::contrastImage ; Change the contrast of the image
Imagick::contrastStretchImage ; Enhances the contrast of a color image
Imagick::convolveImage ; Applies a custom convolution kernel to the image
Imagick::cropImage ; Extracts a region of the image
Imagick::cropThumbnailImage ; Creates a crop thumbnail
Imagick::current ; Returns a reference to the current Imagick object
Imagick::cycleColormapImage ; Displaces an image's colormap
Imagick::decipherImage ; Deciphers an image
Imagick::deconstructImages ; Returns certain pixel differences between images
Imagick::deleteImageArtifact ; Delete image artifact
Imagick::deskewImage ; Removes skew from the image
Imagick::despeckleImage ; Reduces the speckle noise in an image
Imagick::destroy ; Destroys the Imagick object
Imagick::displayImage ; Displays an image
Imagick::displayImages ; Displays an image or image sequence
Imagick::distortImage ; Distorts an image using various distortion methods
Imagick::drawImage ; Renders the ImagickDraw object on the current image
Imagick::edgeImage ; Enhance edges within the image
Imagick::embossImage ; Returns a grayscale image with a three-dimensional effect
Imagick::encipherImage ; Enciphers an image
Imagick::enhanceImage ; Improves the quality of a noisy image
Imagick::equalizeImage ; Equalizes the image histogram
Imagick::evaluateImage ; Applies an expression to an image
Imagick::exportImagePixels ; Exports raw image pixels
Imagick::extentImage ; Set image size
Imagick::flattenImages ; Merges a sequence of images
Imagick::flipImage ; Creates a vertical mirror image
Imagick::floodFillPaintImage ; Changes the color value of any pixel that matches target
Imagick::flopImage ; Creates a horizontal mirror image
Imagick::frameImage ; Adds a simulated three-dimensional border
Imagick::functionImage ; Applies a function on the image
Imagick::fxImage ; Evaluate expression for each pixel in the image
Imagick::gammaImage ; Gamma-corrects an image
Imagick::gaussianBlurImage ; Blurs an image
Imagick::getColorspace ; Gets the colorspace
Imagick::getCompression ; Gets the object compression type
Imagick::getCompressionQuality ; Gets the object compression quality
Imagick::getCopyright ; Returns the ImageMagick API copyright as a string
Imagick::getFilename ; The filename associated with an image sequence
Imagick::getFont ; Gets font
Imagick::getFormat ; Returns the format of the Imagick object
Imagick::getGravity ; Gets the gravity
Imagick::getHomeURL ; Returns the ImageMagick home URL
Imagick::getImage ; Returns a new Imagick object
Imagick::getImageAlphaChannel ; Gets the image alpha channel
Imagick::getImageArtifact ; Get image artifact
Imagick::getImageBackgroundColor ; Returns the image background color
Imagick::getImageBlob ; Returns the image sequence as a blob
Imagick::getImageBluePrimary ; Returns the chromaticy blue primary point
Imagick::getImageBorderColor ; Returns the image border color
Imagick::getImageChannelDepth ; Gets the depth for a particular image channel
Imagick::getImageChannelDistortion ; Compares image channels of an image to a reconstructed image
Imagick::getImageChannelDistortions ; Gets channel distortions
Imagick::getImageChannelExtrema ; Gets the extrema for one or more image channels
Imagick::getImageChannelKurtosis ; The getImageChannelKurtosis purpose
Imagick::getImageChannelMean ; Gets the mean and standard deviation
Imagick::getImageChannelRange ; Gets channel range
Imagick::getImageChannelStatistics ; Returns statistics for each channel in the image
Imagick::getImageClipMask ; Gets image clip mask
Imagick::getImageColormapColor ; Returns the color of the specified colormap index
Imagick::getImageColors ; Gets the number of unique colors in the image
Imagick::getImageColorspace ; Gets the image colorspace
Imagick::getImageCompose ; Returns the composite operator associated with the image
Imagick::getImageCompression ; Gets the current image's compression type
Imagick::getImageCompressionQuality ; Gets the current image's compression quality
Imagick::getImageDelay ; Gets the image delay
Imagick::getImageDepth ; Gets the image depth
Imagick::getImageDispose ; Gets the image disposal method
Imagick::getImageDistortion ; Compares an image to a reconstructed image
Imagick::getImageExtrema ; Gets the extrema for the image
Imagick::getImageFilename ; Returns the filename of a particular image in a sequence
Imagick::getImageFormat ; Returns the format of a particular image in a sequence
Imagick::getImageGamma ; Gets the image gamma
Imagick::getImageGeometry ; Gets the width and height as an associative array
Imagick::getImageGravity ; Gets the image gravity
Imagick::getImageGreenPrimary ; Returns the chromaticy green primary point
Imagick::getImageHeight ; Returns the image height
Imagick::getImageHistogram ; Gets the image histogram
Imagick::getImageIndex ; Gets the index of the current active image
Imagick::getImageInterlaceScheme ; Gets the image interlace scheme
Imagick::getImageInterpolateMethod ; Returns the interpolation method
Imagick::getImageIterations ; Gets the image iterations
Imagick::getImageLength ; Returns the image length in bytes
Imagick::getImageMagickLicense ; Returns a string containing the ImageMagick license
Imagick::getImageMatte ; Return if the image has a matte channel
Imagick::getImageMatteColor ; Returns the image matte color
Imagick::getImageOrientation ; Gets the image orientation
Imagick::getImagePage ; Returns the page geometry
Imagick::getImagePixelColor ; Returns the color of the specified pixel
Imagick::getImageProfile ; Returns the named image profile
Imagick::getImageProfiles ; Returns the image profiles
Imagick::getImageProperties ; Returns the image properties
Imagick::getImageProperty ; Returns the named image property
Imagick::getImageRedPrimary ; Returns the chromaticity red primary point
Imagick::getImageRegion ; Extracts a region of the image
Imagick::getImageRenderingIntent ; Gets the image rendering intent
Imagick::getImageResolution ; Gets the image X and Y resolution
Imagick::getImagesBlob ; Returns all image sequences as a blob
Imagick::getImageScene ; Gets the image scene
Imagick::getImageSignature ; Generates an SHA-256 message digest
Imagick::getImageSize ; Returns the image length in bytes
Imagick::getImageTicksPerSecond ; Gets the image ticks-per-second
Imagick::getImageTotalInkDensity ; Gets the image total ink density
Imagick::getImageType ; Gets the potential image type
Imagick::getImageUnits ; Gets the image units of resolution
Imagick::getImageVirtualPixelMethod ; Returns the virtual pixel method
Imagick::getImageWhitePoint ; Returns the chromaticity white point
Imagick::getImageWidth ; Returns the image width
Imagick::getInterlaceScheme ; Gets the object interlace scheme
Imagick::getIteratorIndex ; Gets the index of the current active image
Imagick::getNumberImages ; Returns the number of images in the object
Imagick::getOption ; Returns a value associated with the specified key
Imagick::getPackageName ; Returns the ImageMagick package name
Imagick::getPage ; Returns the page geometry
Imagick::getPixelIterator ; Returns a MagickPixelIterator
Imagick::getPixelRegionIterator ; Get an ImagickPixelIterator for an image section
Imagick::getPointSize ; Gets point size
Imagick::getQuantumDepth ; Gets the quantum depth
Imagick::getQuantumRange ; Returns the Imagick quantum range
Imagick::getReleaseDate ; Returns the ImageMagick release date
Imagick::getResource ; Returns the specified resource's memory usage
Imagick::getResourceLimit ; Returns the specified resource limit
Imagick::getSamplingFactors ; Gets the horizontal and vertical sampling factor
Imagick::getSize ; Returns the size associated with the Imagick object
Imagick::getSizeOffset ; Returns the size offset
Imagick::getVersion ; Returns the ImageMagick API version
Imagick::haldClutImage ; Replaces colors in the image
Imagick::hasNextImage ; Checks if the object has more images
Imagick::hasPreviousImage ; Checks if the object has a previous image
Imagick::identifyImage ; Identifies an image and fetches attributes
Imagick::implodeImage ; Creates a new image as a copy
Imagick::importImagePixels ; Imports image pixels
Imagick::labelImage ; Adds a label to an image
Imagick::levelImage ; Adjusts the levels of an image
Imagick::linearStretchImage ; Stretches with saturation the image intensity
Imagick::liquidRescaleImage ; Animates an image or images
Imagick::magnifyImage ; Scales an image proportionally 2x
Imagick::mapImage ; Replaces the colors of an image with the closest color from a reference image.
Imagick::matteFloodfillImage ; Changes the transparency value of a color
Imagick::medianFilterImage ; Applies a digital filter
Imagick::mergeImageLayers ; Merges image layers
Imagick::minifyImage ; Scales an image proportionally to half its size
Imagick::modulateImage ; Control the brightness, saturation, and hue
Imagick::montageImage ; Creates a composite image
Imagick::morphImages ; Method morphs a set of images
Imagick::mosaicImages ; Forms a mosaic from images
Imagick::motionBlurImage ; Simulates motion blur
Imagick::negateImage ; Negates the colors in the reference image
Imagick::newImage ; Creates a new image
Imagick::newPseudoImage ; Creates a new image
Imagick::nextImage ; Moves to the next image
Imagick::normalizeImage ; Enhances the contrast of a color image
Imagick::oilPaintImage ; Simulates an oil painting
Imagick::opaquePaintImage ; Changes the color value of any pixel that matches target
Imagick::optimizeImageLayers ; Removes repeated portions of images to optimize
Imagick::orderedPosterizeImage ; Performs an ordered dither
Imagick::paintFloodfillImage ; Changes the color value of any pixel that matches target
Imagick::paintOpaqueImage ; Change any pixel that matches color
Imagick::paintTransparentImage ; Changes any pixel that matches color with the color defined by fill
Imagick::pingImage ; Fetch basic attributes about the image
Imagick::pingImageBlob ; Quickly fetch attributes
Imagick::pingImageFile ; Get basic image attributes in a lightweight manner
Imagick::polaroidImage ; Simulates a Polaroid picture
Imagick::posterizeImage ; Reduces the image to a limited number of color level
Imagick::previewImages ; Quickly pin-point appropriate parameters for image processing
Imagick::previousImage ; Move to the previous image in the object
Imagick::profileImage ; Adds or removes a profile from an image
Imagick::quantizeImage ; Analyzes the colors within a reference image
Imagick::quantizeImages ; Analyzes the colors within a sequence of images
Imagick::queryFontMetrics ; Returns an array representing the font metrics
Imagick::queryFonts ; Returns the configured fonts
Imagick::queryFormats ; Returns formats supported by Imagick
Imagick::radialBlurImage ; Radial blurs an image
Imagick::raiseImage ; Creates a simulated 3d button-like effect
Imagick::randomThresholdImage ; Creates a high-contrast, two-color image
Imagick::readImage ; Reads image from filename
Imagick::readImageBlob ; Reads image from a binary string
Imagick::readImageFile ; Reads image from open filehandle
Imagick::recolorImage ; Recolors image
Imagick::reduceNoiseImage ; Smooths the contours of an image
Imagick::remapImage ; Remaps image colors
Imagick::removeImage ; Removes an image from the image list
Imagick::removeImageProfile ; Removes the named image profile and returns it
Imagick::render ; Renders all preceding drawing commands
Imagick::resampleImage ; Resample image to desired resolution
Imagick::resetImagePage ; Reset image page
Imagick::resizeImage ; Scales an image
Imagick::rollImage ; Offsets an image
Imagick::rotateImage ; Rotates an image
Imagick::roundCorners ; Rounds image corners
Imagick::sampleImage ; Scales an image with pixel sampling
Imagick::scaleImage ; Scales the size of an image
Imagick::segmentImage ; Segments an image
Imagick::separateImageChannel ; Separates a channel from the image
Imagick::sepiaToneImage ; Sepia tones an image
Imagick::setBackgroundColor ; Sets the object's default background color
Imagick::setColorspace ; Set colorspace
Imagick::setCompression ; Sets the object's default compression type
Imagick::setCompressionQuality ; Sets the object's default compression quality
Imagick::setFilename ; Sets the filename before you read or write the image
Imagick::setFirstIterator ; Sets the Imagick iterator to the first image
Imagick::setFont ; Sets font
Imagick::setFormat ; Sets the format of the Imagick object
Imagick::setGravity ; Sets the gravity
Imagick::setImage ; Replaces image in the object
Imagick::setImageAlphaChannel ; Sets image alpha channel
Imagick::setImageArtifact ; Set image artifact
Imagick::setImageBackgroundColor ; Sets the image background color
Imagick::setImageBias ; Sets the image bias for any method that convolves an image
Imagick::setImageBluePrimary ; Sets the image chromaticity blue primary point
Imagick::setImageBorderColor ; Sets the image border color
Imagick::setImageChannelDepth ; Sets the depth of a particular image channel
Imagick::setImageClipMask ; Sets image clip mask
Imagick::setImageColormapColor ; Sets the color of the specified colormap index
Imagick::setImageColorspace ; Sets the image colorspace
Imagick::setImageCompose ; Sets the image composite operator
Imagick::setImageCompression ; Sets the image compression
Imagick::setImageCompressionQuality ; Sets the image compression quality
Imagick::setImageDelay ; Sets the image delay
Imagick::setImageDepth ; Sets the image depth
Imagick::setImageDispose ; Sets the image disposal method
Imagick::setImageExtent ; Sets the image size
Imagick::setImageFilename ; Sets the filename of a particular image
Imagick::setImageFormat ; Sets the format of a particular image
Imagick::setImageGamma ; Sets the image gamma
Imagick::setImageGravity ; Sets the image gravity
Imagick::setImageGreenPrimary ; Sets the image chromaticity green primary point
Imagick::setImageIndex ; Set the iterator position
Imagick::setImageInterlaceScheme ; Sets the image compression
Imagick::setImageInterpolateMethod ; Sets the image interpolate pixel method
Imagick::setImageIterations ; Sets the image iterations
Imagick::setImageMatte ; Sets the image matte channel
Imagick::setImageMatteColor ; Sets the image matte color
Imagick::setImageOpacity ; Sets the image opacity level
Imagick::setImageOrientation ; Sets the image orientation
Imagick::setImagePage ; Sets the page geometry of the image
Imagick::setImageProfile ; Adds a named profile to the Imagick object
Imagick::setImageProperty ; Sets an image property
Imagick::setImageRedPrimary ; Sets the image chromaticity red primary point
Imagick::setImageRenderingIntent ; Sets the image rendering intent
Imagick::setImageResolution ; Sets the image resolution
Imagick::setImageScene ; Sets the image scene
Imagick::setImageTicksPerSecond ; Sets the image ticks-per-second
Imagick::setImageType ; Sets the image type
Imagick::setImageUnits ; Sets the image units of resolution
Imagick::setImageVirtualPixelMethod ; Sets the image virtual pixel method
Imagick::setImageWhitePoint ; Sets the image chromaticity white point
Imagick::setInterlaceScheme ; Sets the image compression
Imagick::setIteratorIndex ; Set the iterator position
Imagick::setLastIterator ; Sets the Imagick iterator to the last image
Imagick::setOption ; Set an option
Imagick::setPage ; Sets the page geometry of the Imagick object
Imagick::setPointSize ; Sets point size
Imagick::setResolution ; Sets the image resolution
Imagick::setResourceLimit ; Sets the limit for a particular resource in megabytes
Imagick::setSamplingFactors ; Sets the image sampling factors
Imagick::setSize ; Sets the size of the Imagick object
Imagick::setSizeOffset ; Sets the size and offset of the Imagick object
Imagick::setType ; Sets the image type attribute
Imagick::shadeImage ; Creates a 3D effect
Imagick::shadowImage ; Simulates an image shadow
Imagick::sharpenImage ; Sharpens an image
Imagick::shaveImage ; Shaves pixels from the image edges
Imagick::shearImage ; Creating a parallelogram
Imagick::sigmoidalContrastImage ; Adjusts the contrast of an image
Imagick::sketchImage ; Simulates a pencil sketch
Imagick::solarizeImage ; Applies a solarizing effect to the image
Imagick::sparseColorImage ; Interpolates colors
Imagick::spliceImage ; Splices a solid color into the image
Imagick::spreadImage ; Randomly displaces each pixel in a block
Imagick::steganoImage ; Hides a digital watermark within the image
Imagick::stereoImage ; Composites two images
Imagick::stripImage ; Strips an image of all profiles and comments
Imagick::swirlImage ; Swirls the pixels about the center of the image
Imagick::textureImage ; Repeatedly tiles the texture image
Imagick::thresholdImage ; Changes the value of individual pixels based on a threshold
Imagick::thumbnailImage ; Changes the size of an image
Imagick::tintImage ; Applies a color vector to each pixel in the image
Imagick::transformImage ; Convenience method for setting crop size and the image geometry
Imagick::transparentPaintImage ; Paints pixels transparent
Imagick::transposeImage ; Creates a vertical mirror image
Imagick::transverseImage ; Creates a horizontal mirror image
Imagick::trimImage ; Remove edges from the image
Imagick::uniqueImageColors ; Discards all but one of any pixel color
Imagick::unsharpMaskImage ; Sharpens an image
Imagick::valid ; Checks if the current item is valid
Imagick::vignetteImage ; Adds vignette filter to the image
Imagick::waveImage ; Applies wave filter to the image
Imagick::whiteThresholdImage ; Force all pixels above the threshold into white
Imagick::writeImage ; Writes an image to the specified filename
Imagick::writeImageFile ; Writes an image to a filehandle
Imagick::writeImages ; Writes an image or image sequence
Imagick::writeImagesFile ; Writes frames to a filehandle
Imagick::__construct ; The Imagick constructor
ImagickDraw::affine ; Adjusts the current affine transformation matrix
ImagickDraw::annotation ; Draws text on the image
ImagickDraw::arc ; Draws an arc
ImagickDraw::bezier ; Draws a bezier curve
ImagickDraw::circle ; Draws a circle
ImagickDraw::clear ; Clears the ImagickDraw
ImagickDraw::clone ; Makes an exact copy of the specified ImagickDraw object
ImagickDraw::color ; Draws color on image
ImagickDraw::comment ; Adds a comment
ImagickDraw::composite ; Composites an image onto the current image
ImagickDraw::destroy ; Frees all associated resources
ImagickDraw::ellipse ; Draws an ellipse on the image
ImagickDraw::getClipPath ; Obtains the current clipping path ID
ImagickDraw::getClipRule ; Returns the current polygon fill rule
ImagickDraw::getClipUnits ; Returns the interpretation of clip path units
ImagickDraw::getFillColor ; Returns the fill color
ImagickDraw::getFillOpacity ; Returns the opacity used when drawing
ImagickDraw::getFillRule ; Returns the fill rule
ImagickDraw::getFont ; Returns the font
ImagickDraw::getFontFamily ; Returns the font family
ImagickDraw::getFontSize ; Returns the font pointsize
ImagickDraw::getFontStyle ; Returns the font style
ImagickDraw::getFontWeight ; Returns the font weight
ImagickDraw::getGravity ; Returns the text placement gravity
ImagickDraw::getStrokeAntialias ; Returns the current stroke antialias setting
ImagickDraw::getStrokeColor ; Returns the color used for stroking object outlines
ImagickDraw::getStrokeDashArray ; Returns an array representing the pattern of dashes and gaps used to stroke paths
ImagickDraw::getStrokeDashOffset ; Returns the offset into the dash pattern to start the dash
ImagickDraw::getStrokeLineCap ; Returns the shape to be used at the end of open subpaths when they are stroked
ImagickDraw::getStrokeLineJoin ; Returns the shape to be used at the corners of paths when they are stroked
ImagickDraw::getStrokeMiterLimit ; Returns the stroke miter limit
ImagickDraw::getStrokeOpacity ; Returns the opacity of stroked object outlines
ImagickDraw::getStrokeWidth ; Returns the width of the stroke used to draw object outlines
ImagickDraw::getTextAlignment ; Returns the text alignment
ImagickDraw::getTextAntialias ; Returns the current text antialias setting
ImagickDraw::getTextDecoration ; Returns the text decoration
ImagickDraw::getTextEncoding ; Returns the code set used for text annotations
ImagickDraw::getTextUnderColor ; Returns the text under color
ImagickDraw::getVectorGraphics ; Returns a string containing vector graphics
ImagickDraw::line ; Draws a line
ImagickDraw::matte ; Paints on the image's opacity channel
ImagickDraw::pathClose ; Adds a path element to the current path
ImagickDraw::pathCurveToAbsolute ; Draws a cubic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierAbsolute ; Draws a quadratic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierRelative ; Draws a quadratic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute ; Draws a quadratic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierSmoothRelative ; Draws a quadratic Bezier curve
ImagickDraw::pathCurveToRelative ; Draws a cubic Bezier curve
ImagickDraw::pathCurveToSmoothAbsolute ; Draws a cubic Bezier curve
ImagickDraw::pathCurveToSmoothRelative ; Draws a cubic Bezier curve
ImagickDraw::pathEllipticArcAbsolute ; Draws an elliptical arc
ImagickDraw::pathEllipticArcRelative ; Draws an elliptical arc
ImagickDraw::pathFinish ; Terminates the current path
ImagickDraw::pathLineToAbsolute ; Draws a line path
ImagickDraw::pathLineToHorizontalAbsolute ; Draws a horizontal line path
ImagickDraw::pathLineToHorizontalRelative ; Draws a horizontal line
ImagickDraw::pathLineToRelative ; Draws a line path
ImagickDraw::pathLineToVerticalAbsolute ; Draws a vertical line
ImagickDraw::pathLineToVerticalRelative ; Draws a vertical line path
ImagickDraw::pathMoveToAbsolute ; Starts a new sub-path
ImagickDraw::pathMoveToRelative ; Starts a new sub-path
ImagickDraw::pathStart ; Declares the start of a path drawing list
ImagickDraw::point ; Draws a point
ImagickDraw::polygon ; Draws a polygon
ImagickDraw::polyline ; Draws a polyline
ImagickDraw::pop ; Destroys the current ImagickDraw in the stack, and returns to the previously pushed ImagickDraw
ImagickDraw::popClipPath ; Terminates a clip path definition
ImagickDraw::popDefs ; Terminates a definition list
ImagickDraw::popPattern ; Terminates a pattern definition
ImagickDraw::push ; Clones the current ImagickDraw and pushes it to the stack
ImagickDraw::pushClipPath ; Starts a clip path definition
ImagickDraw::pushDefs ; Indicates that following commands create named elements for early processing
ImagickDraw::pushPattern ; Indicates that subsequent commands up to a ImagickDraw::opPattern() command comprise the definition of a named pattern
ImagickDraw::rectangle ; Draws a rectangle
ImagickDraw::render ; Renders all preceding drawing commands onto the image
ImagickDraw::rotate ; Applies the specified rotation to the current coordinate space
ImagickDraw::roundRectangle ; Draws a rounded rectangle
ImagickDraw::scale ; Adjusts the scaling factor
ImagickDraw::setClipPath ; Associates a named clipping path with the image
ImagickDraw::setClipRule ; Set the polygon fill rule to be used by the clipping path
ImagickDraw::setClipUnits ; Sets the interpretation of clip path units
ImagickDraw::setFillAlpha ; Sets the opacity to use when drawing using the fill color or fill texture
ImagickDraw::setFillColor ; Sets the fill color to be used for drawing filled objects
ImagickDraw::setFillOpacity ; Sets the opacity to use when drawing using the fill color or fill texture
ImagickDraw::setFillPatternURL ; Sets the URL to use as a fill pattern for filling objects
ImagickDraw::setFillRule ; Sets the fill rule to use while drawing polygons
ImagickDraw::setFont ; Sets the fully-specified font to use when annotating with text
ImagickDraw::setFontFamily ; Sets the font family to use when annotating with text
ImagickDraw::setFontSize ; Sets the font pointsize to use when annotating with text
ImagickDraw::setFontStretch ; Sets the font stretch to use when annotating with text
ImagickDraw::setFontStyle ; Sets the font style to use when annotating with text
ImagickDraw::setFontWeight ; Sets the font weight
ImagickDraw::setGravity ; Sets the text placement gravity
ImagickDraw::setStrokeAlpha ; Specifies the opacity of stroked object outlines
ImagickDraw::setStrokeAntialias ; Controls whether stroked outlines are antialiased
ImagickDraw::setStrokeColor ; Sets the color used for stroking object outlines
ImagickDraw::setStrokeDashArray ; Specifies the pattern of dashes and gaps used to stroke paths
ImagickDraw::setStrokeDashOffset ; Specifies the offset into the dash pattern to start the dash
ImagickDraw::setStrokeLineCap ; Specifies the shape to be used at the end of open subpaths when they are stroked
ImagickDraw::setStrokeLineJoin ; Specifies the shape to be used at the corners of paths when they are stroked
ImagickDraw::setStrokeMiterLimit ; Specifies the miter limit
ImagickDraw::setStrokeOpacity ; Specifies the opacity of stroked object outlines
ImagickDraw::setStrokePatternURL ; Sets the pattern used for stroking object outlines
ImagickDraw::setStrokeWidth ; Sets the width of the stroke used to draw object outlines
ImagickDraw::setTextAlignment ; Specifies a text alignment
ImagickDraw::setTextAntialias ; Controls whether text is antialiased
ImagickDraw::setTextDecoration ; Specifies a decoration
ImagickDraw::setTextEncoding ; Specifies specifies the text code set
ImagickDraw::setTextUnderColor ; Specifies the color of a background rectangle
ImagickDraw::setVectorGraphics ; Sets the vector graphics
ImagickDraw::setViewbox ; Sets the overall canvas size
ImagickDraw::skewX ; Skews the current coordinate system in the horizontal direction
ImagickDraw::skewY ; Skews the current coordinate system in the vertical direction
ImagickDraw::translate ; Applies a translation to the current coordinate system
ImagickDraw::__construct ; The ImagickDraw constructor
ImagickPixel::clear ; Clears resources associated with this object
ImagickPixel::destroy ; Deallocates resources associated with this object
ImagickPixel::getColor ; Returns the color
ImagickPixel::getColorAsString ; Returns the color as a string
ImagickPixel::getColorCount ; Returns the color count associated with this color
ImagickPixel::getColorValue ; Gets the normalized value of the provided color channel
ImagickPixel::getHSL ; Returns the normalized HSL color of the ImagickPixel object
ImagickPixel::isSimilar ; Check the distance between this color and another
ImagickPixel::setColor ; Sets the color
ImagickPixel::setColorValue ; Sets the normalized value of one of the channels
ImagickPixel::setHSL ; Sets the normalized HSL color
ImagickPixel::__construct ; The ImagickPixel constructor
ImagickPixelIterator::clear ; Clear resources associated with a PixelIterator
ImagickPixelIterator::destroy ; Deallocates resources associated with a PixelIterator
ImagickPixelIterator::getCurrentIteratorRow ; Returns the current row of ImagickPixel objects
ImagickPixelIterator::getIteratorRow ; Returns the current pixel iterator row
ImagickPixelIterator::getNextIteratorRow ; Returns the next row of the pixel iterator
ImagickPixelIterator::getPreviousIteratorRow ; Returns the previous row
ImagickPixelIterator::newPixelIterator ; Returns a new pixel iterator
ImagickPixelIterator::newPixelRegionIterator ; Returns a new pixel iterator
ImagickPixelIterator::resetIterator ; Resets the pixel iterator
ImagickPixelIterator::setIteratorFirstRow ; Sets the pixel iterator to the first pixel row
ImagickPixelIterator::setIteratorLastRow ; Sets the pixel iterator to the last pixel row
ImagickPixelIterator::setIteratorRow ; Set the pixel iterator row
ImagickPixelIterator::syncIterator ; Syncs the pixel iterator
ImagickPixelIterator::__construct ; The ImagickPixelIterator constructor
imap_8bit ; Convert an 8bit string to a quoted-printable string
imap_alerts ; Returns all IMAP alert messages that have occurred
imap_append ; Append a string message to a specified mailbox
imap_base64 ; Decode BASE64 encoded text
imap_binary ; Convert an 8bit string to a base64 string
imap_body ; Read the message body
imap_bodystruct ; Read the structure of a specified body section of a specific message
imap_check ; Check current mailbox
imap_clearflag_full ; Clears flags on messages
imap_close ; Close an IMAP stream
imap_create ; 别名 imap_createmailbox
imap_createmailbox ; Create a new mailbox
imap_delete ; Mark a message for deletion from current mailbox
imap_deletemailbox ; Delete a mailbox
imap_errors ; Returns all of the IMAP errors that have occurred
imap_expunge ; Delete all messages marked for deletion
imap_fetchbody ; Fetch a particular section of the body of the message
imap_fetchheader ; Returns header for a message
imap_fetchmime ; Fetch MIME headers for a particular section of the message
imap_fetchstructure ; Read the structure of a particular message
imap_fetchtext ; 别名 imap_body
imap_fetch_overview ; Read an overview of the information in the headers of the given message
imap_gc ; Clears IMAP cache
imap_getacl ; Gets the ACL for a given mailbox
imap_getmailboxes ; Read the list of mailboxes, returning detailed information on each one
imap_getsubscribed ; List all the subscribed mailboxes
imap_get_quota ; Retrieve the quota level settings, and usage statics per mailbox
imap_get_quotaroot ; Retrieve the quota settings per user
imap_header ; 别名 imap_headerinfo
imap_headerinfo ; Read the header of the message
imap_headers ; Returns headers for all messages in a mailbox
imap_last_error ; Gets the last IMAP error that occurred during this page request
imap_list ; Read the list of mailboxes
imap_listmailbox ; 别名 imap_list
imap_listscan ; Returns the list of mailboxes that matches the given text
imap_listsubscribed ; 别名 imap_lsub
imap_lsub ; List all the subscribed mailboxes
imap_mail ; Send an email message
imap_mailboxmsginfo ; Get information about the current mailbox
imap_mail_compose ; Create a MIME message based on given envelope and body sections
imap_mail_copy ; Copy specified messages to a mailbox
imap_mail_move ; Move specified messages to a mailbox
imap_mime_header_decode ; Decode MIME header elements
imap_msgno ; Gets the message sequence number for the given UID
imap_num_msg ; Gets the number of messages in the current mailbox
imap_num_recent ; Gets the number of recent messages in current mailbox
imap_open ; Open an IMAP stream to a mailbox
imap_ping ; Check if the IMAP stream is still active
imap_qprint ; Convert a quoted-printable string to an 8 bit string
imap_rename ; 别名 imap_renamemailbox
imap_renamemailbox ; Rename an old mailbox to new mailbox
imap_reopen ; Reopen IMAP stream to new mailbox
imap_rfc822_parse_adrlist ; Parses an address string
imap_rfc822_parse_headers ; Parse mail headers from a string
imap_rfc822_write_address ; Returns a properly formatted email address given the mailbox, host, and personal info
imap_savebody ; Save a specific body section to a file
imap_scan ; 别名 imap_listscan
imap_scanmailbox ; 别名 imap_listscan
imap_search ; This function returns an array of messages matching the given search criteria
imap_setacl ; Sets the ACL for a giving mailbox
imap_setflag_full ; Sets flags on messages
imap_set_quota ; Sets a quota for a given mailbox
imap_sort ; Gets and sort messages
imap_status ; Returns status information on a mailbox
imap_subscribe ; Subscribe to a mailbox
imap_thread ; Returns a tree of threaded message
imap_timeout ; Set or fetch imap timeout
imap_uid ; This function returns the UID for the given message sequence number
imap_undelete ; Unmark the message which is marked deleted
imap_unsubscribe ; Unsubscribe from a mailbox
imap_utf7_decode ; Decodes a modified UTF-7 encoded string
imap_utf7_encode ; Converts ISO-8859-1 string to modified UTF-7 text
imap_utf8 ; Converts MIME-encoded text to UTF-8
implode ; Join array elements with a string
import_request_variables ; 将 GET／POST／Cookie 变量导入到全局作用域中
inclued_get_data ; Get the inclued data
inet_ntop ; Converts a packed internet address to a human readable representation
inet_pton ; Converts a human readable IP address to its packed in_addr representation
InfiniteIterator::next ; Moves the inner Iterator forward or rewinds it
InfiniteIterator::__construct ; Constructs an InfiniteIterator
ingres_autocommit ; Switch autocommit on or off
ingres_autocommit_state ; Test if the connection is using autocommit
ingres_charset ; Returns the installation character set
ingres_close ; Close an Ingres database connection
ingres_commit ; Commit a transaction
ingres_connect ; Open a connection to an Ingres database
ingres_cursor ; Get a cursor name for a given result resource
ingres_errno ; Get the last Ingres error number generated
ingres_error ; Get a meaningful error message for the last error generated
ingres_errsqlstate ; Get the last SQLSTATE error code generated
ingres_escape_string ; Escape special characters for use in a query
ingres_execute ; Execute a prepared query
ingres_fetch_array ; Fetch a row of result into an array
ingres_fetch_assoc ; Fetch a row of result into an associative array
ingres_fetch_object ; Fetch a row of result into an object
ingres_fetch_proc_return ; Get the return value from a procedure call
ingres_fetch_row ; Fetch a row of result into an enumerated array
ingres_field_length ; Get the length of a field
ingres_field_name ; Get the name of a field in a query result
ingres_field_nullable ; Test if a field is nullable
ingres_field_precision ; Get the precision of a field
ingres_field_scale ; Get the scale of a field
ingres_field_type ; Get the type of a field in a query result
ingres_free_result ; Free the resources associated with a result identifier
ingres_next_error ; Get the next Ingres error
ingres_num_fields ; Get the number of fields returned by the last query
ingres_num_rows ; Get the number of rows affected or returned by a query
ingres_pconnect ; Open a persistent connection to an Ingres database
ingres_prepare ; Prepare a query for later execution
ingres_query ; Send an SQL query to Ingres
ingres_result_seek ; Set the row position before fetching data
ingres_rollback ; Roll back a transaction
ingres_set_environment ; Set environment features controlling output options
ingres_unbuffered_query ; Send an unbuffered  SQL query to Ingres
ini_alter ; 别名 ini_set
ini_get ; 获取一个配置选项的值
ini_get_all ; 获取所有配置选项
ini_restore ; 恢复配置选项的值
ini_set ; 为一个配置选项设置值
inotify_add_watch ; Add a watch to an initialized inotify instance
inotify_init ; Initialize an inotify instance
inotify_queue_len ; Return a number upper than zero if there are pending events
inotify_read ; Read events from an inotify instance
inotify_rm_watch ; Remove an existing watch from an inotify instance
interface_exists ; 检查接口是否已被定义
IntlDateFormatter::create ; Create a date formatter
IntlDateFormatter::format ; Format the date/time value as a string
IntlDateFormatter::formatObject ; Formats an object
IntlDateFormatter::getCalendar ; Get the calendar used for the IntlDateFormatter
IntlDateFormatter::getCalendarObject ; Get formatter calendar
IntlDateFormatter::getDateType ; Get the datetype used for the IntlDateFormatter
IntlDateFormatter::getErrorCode ; Get the error code from last operation
IntlDateFormatter::getErrorMessage ; Get the error text from the last operation.
IntlDateFormatter::getLocale ; Get the locale used by formatter
IntlDateFormatter::getPattern ; Get the pattern used for the IntlDateFormatter
IntlDateFormatter::getTimeType ; Get the timetype used for the IntlDateFormatter
IntlDateFormatter::getTimeZone ; Get formatter timezone
IntlDateFormatter::getTimeZoneId ; Get the timezone-id used for the IntlDateFormatter
IntlDateFormatter::isLenient ; Get the lenient used for the IntlDateFormatter
IntlDateFormatter::localtime ; Parse string to a field-based time value
IntlDateFormatter::parse ; Parse string to a timestamp value
IntlDateFormatter::setCalendar ; sets the calendar used by the formatter
IntlDateFormatter::setLenient ; Set the leniency of the parser
IntlDateFormatter::setPattern ; Set the pattern used for the IntlDateFormatter
IntlDateFormatter::setTimeZone ; Sets formatter's timezone
IntlDateFormatter::setTimeZoneId ; Sets the time zone to use
intl_error_name ; Get symbolic name for a given error code
intl_get_error_code ; Get the last error code
intl_get_error_message ; Get description of the last error
intl_is_failure ; Check whether the given error code indicates failure
intval ; 获取变量的整数值
in_array ; 检查数组中是否存在某个值
ip2long ; Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address
iptcembed ; 将二进制 IPTC 数据嵌入到一幅 JPEG 图像中
iptcparse ; 将二进制 IPTC 块解析为单个标记
isset ; 检测变量是否设置
is_a ; 如果对象属于该类或该类是此对象的父类则返回 TRUE
is_array ; 检测变量是否是数组
is_bool ; 检测变量是否是布尔型
is_callable ; 检测参数是否为合法的可调用结构
is_dir ; 判断给定文件名是否是一个目录
is_double ; is_float 的别名
is_executable ; 判断给定文件名是否可执行
is_file ; 判断给定文件名是否为一个正常的文件
is_finite ; 判断是否为有限值
is_float ; 检测变量是否是浮点型
is_infinite ; 判断是否为无限值
is_int ; 检测变量是否是整数
is_integer ; is_int 的别名
is_link ; 判断给定文件名是否为一个符号连接
is_long ; is_int 的别名
is_nan ; 判断是否为合法数值
is_null ; 检测变量是否为 NULL
is_numeric ; 检测变量是否为数字或数字字符串
is_object ; 检测变量是否是一个对象
is_readable ; 判断给定文件名是否可读
is_real ; is_float 的别名
is_resource ; 检测变量是否为资源类型
is_scalar ; 检测变量是否是一个标量
is_soap_fault ; Checks if a SOAP call has failed
is_string ; 检测变量是否是字符串
is_subclass_of ; 如果此对象是该类的子类，则返回 TRUE
is_tainted ; Checks whether a string is tainted
is_uploaded_file ; 判断文件是否是通过 HTTP POST 上传的
is_writable ; 判断给定的文件名是否可写
is_writeable ; is_writable 的别名
Iterator::current ; 返回当前元素
Iterator::key ; 返回当前元素的键
Iterator::next ; 向前移动到下一个元素
Iterator::rewind ; 返回到迭代器的第一个元素
Iterator::valid ; 检查当前位置是否有效
IteratorAggregate::getIterator ; 获取一个外部迭代器
IteratorIterator::current ; Get the current value
IteratorIterator::getInnerIterator ; Get the inner iterator
IteratorIterator::key ; Get the key of the current element
IteratorIterator::next ; Forward to the next element
IteratorIterator::rewind ; Rewind to the first element
IteratorIterator::valid ; Checks if the iterator is valid
IteratorIterator::__construct ; Create an iterator from anything that is traversable
iterator_apply ; 为迭代器中每个元素调用一个用户自定义函数
iterator_count ; 计算迭代器中元素的个数
iterator_to_array ; 将迭代器中的元素拷贝到数组
java_last_exception_clear ; Clear last Java exception
java_last_exception_get ; Get last Java exception
JDDayOfWeek ; 返回星期的日期
JDMonthName ; 返回月份的名称
JDToFrench ; 转变一个Julian Day计数到French Republican历法的日期
JDToGregorian ; 转变一个Julian Day计数为Gregorian历法日期
jdtojewish ; 转换一个julian天数为Jewish历法的日期
JDToJulian ; 转变一个Julian Day计数到Julian历法的日期
jdtounix ; 转变Julian Day计数为一个Unix时间戳
JewishToJD ; 转变一个Jewish历法的日期为一个Julian Day计数
join ; 别名 implode
jpeg2wbmp ; 将 JPEG 图像文件转换为 WBMP 图像文件
JsonSerializable::jsonSerialize ; 指定需要被序列化成 JSON 的数据
json_decode ; 对 JSON 格式的字符串进行编码
json_encode ; 对变量进行 JSON 编码
json_last_error ; 返回最后发生的错误
Judy::byCount ; Locate the Nth index present in the Judy array
Judy::count ; Count the number of elements in the Judy array
Judy::first ; Search for the first index in the Judy array
Judy::firstEmpty ; Search for the first absent index in the Judy array
Judy::free ; Free the entire Judy array
Judy::getType ; Return the type of the current Judy array
Judy::last ; Search for the last index in the Judy array
Judy::lastEmpty ; Search for the last absent index in the Judy array
Judy::memoryUsage ; Return the memory used by the Judy array
Judy::next ; Search for the next index in the Judy array
Judy::nextEmpty ; Search for the next absent index in the Judy array
Judy::offsetExists ; Whether a offset exists
Judy::offsetGet ; Offset to retrieve
Judy::offsetSet ; Offset to set
Judy::offsetUnset ; Offset to unset
Judy::prev ; Search for the previous index in the Judy array
Judy::prevEmpty ; Search for the previous absent index in the Judy array
Judy::size ; Return the size of the current Judy array
Judy::__construct ; Construct a new Judy object
Judy::__destruct ; Destruct a Judy object
judy_type ; Return the type of a Judy array
judy_version ; Return or print the current PHP Judy version
JulianToJD ; 转变一个Julian历法的日期为Julian Day计数
kadm5_chpass_principal ; Changes the principal's password
kadm5_create_principal ; Creates a kerberos principal with the given parameters
kadm5_delete_principal ; Deletes a kerberos principal
kadm5_destroy ; Closes the connection to the admin server and releases all related resources
kadm5_flush ; Flush all changes to the Kerberos database
kadm5_get_policies ; Gets all policies from the Kerberos database
kadm5_get_principal ; Gets the principal's entries from the Kerberos database
kadm5_get_principals ; Gets all principals from the Kerberos database
kadm5_init_with_password ; Opens a connection to the KADM5 library
kadm5_modify_principal ; Modifies a kerberos principal with the given parameters
key ; 从关联数组中取得键名
krsort ; 对数组按照键名逆向排序
ksort ; 对数组按照键名排序
KTaglib_ID3v2_AttachedPictureFrame::getDescription ; Returns a description for the picture in a picture frame
KTaglib_ID3v2_AttachedPictureFrame::getMimeType ; Returns the mime type of the picture
KTaglib_ID3v2_AttachedPictureFrame::getType ; Returns the type of the image
KTaglib_ID3v2_AttachedPictureFrame::savePicture ; Saves the picture to a file
KTaglib_ID3v2_AttachedPictureFrame::setMimeType ; Set's the mime type of the picture
KTaglib_ID3v2_AttachedPictureFrame::setPicture ; Sets the frame picture to the given image
KTaglib_ID3v2_AttachedPictureFrame::setType ; Set the type of the image
KTaglib_ID3v2_Frame::getSize ; Returns the size of the frame in bytes
KTaglib_ID3v2_Frame::__toString ; Returns a string representation of the frame
KTaglib_ID3v2_Tag::addFrame ; Add a frame to the ID3v2 tag
KTaglib_ID3v2_Tag::getFrameList ; Returns an array of ID3v2 frames, associated with the ID3v2 tag
KTaglib_MPEG_AudioProperties::getBitrate ; Returns the bitrate of the MPEG file
KTaglib_MPEG_AudioProperties::getChannels ; Returns the amount of channels of a MPEG file
KTaglib_MPEG_AudioProperties::getLayer ; Returns the layer of a MPEG file
KTaglib_MPEG_AudioProperties::getLength ; Returns the length of a MPEG file
KTaglib_MPEG_AudioProperties::getSampleBitrate ; Returns the sample bitrate of a MPEG file
KTaglib_MPEG_AudioProperties::getVersion ; Returns the version of a MPEG file
KTaglib_MPEG_AudioProperties::isCopyrighted ; Returns the copyright status of an MPEG file
KTaglib_MPEG_AudioProperties::isOriginal ; Returns if the file is marked as the original file
KTaglib_MPEG_AudioProperties::isProtectionEnabled ; Returns if protection mechanisms of an MPEG file are enabled
KTaglib_MPEG_File::getAudioProperties ; Returns an object that provides access to the audio properties
KTaglib_MPEG_File::getID3v1Tag ; Returns an object representing an ID3v1 tag
KTaglib_MPEG_File::getID3v2Tag ; Returns a ID3v2 object
KTaglib_MPEG_File::__construct ; Opens a new file
KTaglib_Tag::getAlbum ; Returns the title string from a ID3 tag
KTaglib_Tag::getArtist ; Returns the artist string from a ID3 tag
KTaglib_Tag::getComment ; Returns the comment from a ID3 tag
KTaglib_Tag::getGenre ; Returns the genre from a ID3 tag
KTaglib_Tag::getTitle ; Returns the title string from a ID3 tag
KTaglib_Tag::getTrack ; Returns the track number from a ID3 tag
KTaglib_Tag::getYear ; Returns the year from a ID3 tag
KTaglib_Tag::isEmpty ; Returns true if the tag is empty
Lapack::eigenValues ; This function returns the eigenvalues for a given square matrix
Lapack::identity ; Return an identity matrix
Lapack::leastSquaresByFactorisation ; Calculate the linear least squares solution of a matrix using QR factorisation
Lapack::leastSquaresBySVD ; Solve the linear least squares problem, using SVD
Lapack::pseudoInverse ; Calculate the inverse of a matrix
Lapack::singularValues ; Calculated the singular values of a matrix
Lapack::solveLinearEquation ; Solve a system of linear equations
lcfirst ; 使一个字符串的第一个字符小写
lcg_value ; 组合线性同余发生器
lchgrp ; Changes group ownership of symlink
lchown ; Changes user ownership of symlink
ldap_8859_to_t61 ; Translate 8859 characters to t61 characters
ldap_add ; Add entries to LDAP directory
ldap_bind ; Bind to LDAP directory
ldap_close ; 别名 ldap_unbind
ldap_compare ; Compare value of attribute found in entry specified with DN
ldap_connect ; Connect to an LDAP server
ldap_control_paged_result ; Send LDAP pagination control
ldap_control_paged_result_response ; Retrieve the LDAP pagination cookie
ldap_count_entries ; Count the number of entries in a search
ldap_delete ; Delete an entry from a directory
ldap_dn2ufn ; Convert DN to User Friendly Naming format
ldap_err2str ; Convert LDAP error number into string error message
ldap_errno ; Return the LDAP error number of the last LDAP command
ldap_error ; Return the LDAP error message of the last LDAP command
ldap_explode_dn ; Splits DN into its component parts
ldap_first_attribute ; Return first attribute
ldap_first_entry ; Return first result id
ldap_first_reference ; Return first reference
ldap_free_result ; Free result memory
ldap_get_attributes ; Get attributes from a search result entry
ldap_get_dn ; Get the DN of a result entry
ldap_get_entries ; Get all result entries
ldap_get_option ; Get the current value for given option
ldap_get_values ; Get all values from a result entry
ldap_get_values_len ; Get all binary values from a result entry
ldap_list ; Single-level search
ldap_modify ; Modify an LDAP entry
ldap_mod_add ; Add attribute values to current attributes
ldap_mod_del ; Delete attribute values from current attributes
ldap_mod_replace ; Replace attribute values with new ones
ldap_next_attribute ; Get the next attribute in result
ldap_next_entry ; Get next result entry
ldap_next_reference ; Get next reference
ldap_parse_reference ; Extract information from reference entry
ldap_parse_result ; Extract information from result
ldap_read ; Read an entry
ldap_rename ; Modify the name of an entry
ldap_sasl_bind ; Bind to LDAP directory using SASL
ldap_search ; Search LDAP tree
ldap_set_option ; Set the value of the given option
ldap_set_rebind_proc ; Set a callback function to do re-binds on referral chasing
ldap_sort ; Sort LDAP result entries
ldap_start_tls ; Start TLS
ldap_t61_to_8859 ; Translate t61 characters to 8859 characters
ldap_unbind ; Unbind from LDAP directory
levenshtein ; 计算两个字符串之间的编辑距离
libxml_clear_errors ; Clear libxml error buffer
libxml_disable_entity_loader ; Disable the ability to load external entities
libxml_get_errors ; Retrieve array of errors
libxml_get_last_error ; Retrieve last error from libxml
libxml_set_external_entity_loader ; Changes the default external entity loader
libxml_set_streams_context ; Set the streams context for the next libxml document load or write
libxml_use_internal_errors ; Disable libxml errors and allow user to fetch error information as needed
LimitIterator::current ; Get current element
LimitIterator::getInnerIterator ; Get inner iterator
LimitIterator::getPosition ; Return the current position
LimitIterator::key ; Get current key
LimitIterator::next ; Move the iterator forward
LimitIterator::rewind ; Rewind the iterator to the specified starting offset
LimitIterator::seek ; Seek to the given position
LimitIterator::valid ; Check whether the current element is valid
LimitIterator::__construct ; Construct a LimitIterator
link ; 建立一个硬连接
linkinfo ; 获取一个连接的信息
list ; 把数组中的值赋给一些变量
Locale::acceptFromHttp ; Tries to find out best available locale based on HTTP &quot;Accept-Language&quot; header
Locale::composeLocale ; Returns a correctly ordered and delimited locale ID
Locale::filterMatches ; Checks if a language tag filter matches with locale
Locale::getAllVariants ; Gets the variants for the input locale
Locale::getDefault ; Gets the default locale value from the INTL global 'default_locale'
Locale::getDisplayLanguage ; Returns an appropriately localized display name for language of the inputlocale
Locale::getDisplayName ; Returns an appropriately localized display name for the input locale
Locale::getDisplayRegion ; Returns an appropriately localized display name for region of the input locale
Locale::getDisplayScript ; Returns an appropriately localized display name for script of the input locale
Locale::getDisplayVariant ; Returns an appropriately localized display name for variants of the input locale
Locale::getKeywords ; Gets the keywords for the input locale
Locale::getPrimaryLanguage ; Gets the primary language for the input locale
Locale::getRegion ; Gets the region for the input locale
Locale::getScript ; Gets the script for the input locale
Locale::lookup ; Searches the language tag list for the best match to the language
Locale::parseLocale ; Returns a key-value array of locale ID subtag elements.
Locale::setDefault ; sets the default runtime locale
localeconv ; Get numeric formatting information
localtime ; 取得本地时间
log ; 自然对数
log1p ; 返回 log(1 + number)，甚至当 number 的值接近零也能计算出准确结果
log10 ; 以 10 为底的对数
long2ip ; Converts an (IPv4) Internet network address into a string in Internet standard dotted format
lstat ; 给出一个文件或符号连接的信息
ltrim ; 删除字符串开头的空白字符（或其他字符）
Lua::assign ; Assign a PHP variable to Lua
Lua::call ; Call Lua functions
Lua::eval ; Evaluate a string as Lua code
Lua::getVersion ; The getversion purpose
Lua::include ; Parse a Lua script file
Lua::registerCallback ; Register a PHP function to Lua
Lua::__construct ; Lua constructor
LuaClosure::__invoke ; invoke luaclosure
lzf_compress ; LZF compression
lzf_decompress ; LZF decompression
lzf_optimized_for ; Determines what LZF extension was optimized for
magic_quotes_runtime ; 别名 set_magic_quotes_runtime
mail ; 发送邮件
mailparse_determine_best_xfer_encoding ; Gets the best way of encoding
mailparse_msg_create ; Create a mime mail resource
mailparse_msg_extract_part ; Extracts/decodes a message section
mailparse_msg_extract_part_file ; Extracts/decodes a message section
mailparse_msg_extract_whole_part_file ; Extracts a message section including headers without decoding the transfer encoding
mailparse_msg_free ; Frees a MIME resource
mailparse_msg_get_part ; Returns a handle on a given section in a mimemessage
mailparse_msg_get_part_data ; Returns an associative array of info about the message
mailparse_msg_get_structure ; Returns an array of mime section names in the supplied message
mailparse_msg_parse ; Incrementally parse data into buffer
mailparse_msg_parse_file ; Parses a file
mailparse_rfc822_parse_addresses ; Parse RFC 822 compliant addresses
mailparse_stream_encode ; Streams data from source file pointer, apply encoding and write to destfp
mailparse_uudecode_all ; Scans the data from fp and extract each embedded uuencoded file
main ; 虚拟的main
max ; 找出最大值
maxdb_affected_rows ; Gets the number of affected rows in a previous MaxDB operation
maxdb_autocommit ; Turns on or off auto-commiting database modifications
maxdb_bind_param ; 别名 maxdb_stmt_bind_param
maxdb_bind_result ; 别名 maxdb_stmt_bind_result
maxdb_change_user ; Changes the user of the specified database connection
maxdb_character_set_name ; Returns the default character set for the database connection
maxdb_client_encoding ; 别名 maxdb_character_set_name
maxdb_close ; Closes a previously opened database connection
maxdb_close_long_data ; 别名 maxdb_stmt_close_long_data
maxdb_commit ; Commits the current transaction
maxdb_connect ; Open a new connection to the MaxDB server
maxdb_connect_errno ; Returns the error code from last connect call
maxdb_connect_error ; Returns a string description of the last connect error
maxdb_data_seek ; Adjusts the result pointer to an arbitary row in the result
maxdb_debug ; Performs debugging operations
maxdb_disable_reads_from_master ; Disable reads from master
maxdb_disable_rpl_parse ; Disable RPL parse
maxdb_dump_debug_info ; Dump debugging information into the log
maxdb_embedded_connect ; Open a connection to an embedded MaxDB server
maxdb_enable_reads_from_master ; Enable reads from master
maxdb_enable_rpl_parse ; Enable RPL parse
maxdb_errno ; Returns the error code for the most recent function call
maxdb_error ; Returns a string description of the last error
maxdb_escape_string ; 别名 maxdb_real_escape_string
maxdb_execute ; 别名 maxdb_stmt_execute
maxdb_fetch ; 别名 maxdb_stmt_fetch
maxdb_fetch_array ; Fetch a result row as an associative, a numeric array, or both
maxdb_fetch_assoc ; Fetch a result row as an associative array
maxdb_fetch_field ; Returns the next field in the result set
maxdb_fetch_fields ; Returns an array of resources representing the fields in a result set
maxdb_fetch_field_direct ; Fetch meta-data for a single field
maxdb_fetch_lengths ; Returns the lengths of the columns of the current row in the result set
maxdb_fetch_object ; Returns the current row of a result set as an object
maxdb_fetch_row ; Get a result row as an enumerated array
maxdb_field_count ; Returns the number of columns for the most recent query
maxdb_field_seek ; Set result pointer to a specified field offset
maxdb_field_tell ; Get current field offset of a result pointer
maxdb_free_result ; Frees the memory associated with a result
maxdb_get_client_info ; Returns the MaxDB client version as a string
maxdb_get_client_version ; Get MaxDB client info
maxdb_get_host_info ; Returns a string representing the type of connection used
maxdb_get_metadata ; 别名 maxdb_stmt_result_metadata
maxdb_get_proto_info ; Returns the version of the MaxDB protocol used
maxdb_get_server_info ; Returns the version of the MaxDB server
maxdb_get_server_version ; Returns the version of the MaxDB server as an integer
maxdb_info ; Retrieves information about the most recently executed query
maxdb_init ; Initializes MaxDB and returns an resource for use with maxdb_real_connect
maxdb_insert_id ; Returns the auto generated id used in the last query
maxdb_kill ; Disconnects from a MaxDB server
maxdb_master_query ; Enforce execution of a query on the master in a master/slave setup
maxdb_more_results ; Check if there any more query results from a multi query
maxdb_multi_query ; Performs a query on the database
maxdb_next_result ; Prepare next result from multi_query
maxdb_num_fields ; Get the number of fields in a result
maxdb_num_rows ; Gets the number of rows in a result
maxdb_options ; Set options
maxdb_param_count ; 别名 maxdb_stmt_param_count
maxdb_ping ; Pings a server connection, or tries to reconnect if the connection has gone down
maxdb_prepare ; Prepare an SQL statement for execution
maxdb_query ; Performs a query on the database
maxdb_real_connect ; Opens a connection to a MaxDB server
maxdb_real_escape_string ; Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection
maxdb_real_query ; Execute an SQL query
maxdb_report ; Enables or disables internal report functions
maxdb_rollback ; Rolls back current transaction
maxdb_rpl_parse_enabled ; Check if RPL parse is enabled
maxdb_rpl_probe ; RPL probe
maxdb_rpl_query_type ; Returns RPL query type
maxdb_select_db ; Selects the default database for database queries
maxdb_send_long_data ; 别名 maxdb_stmt_send_long_data
maxdb_send_query ; Send the query and return
maxdb_server_end ; Shut down the embedded server
maxdb_server_init ; Initialize embedded server
maxdb_set_opt ; 别名 maxdb_options
maxdb_sqlstate ; Returns the SQLSTATE error from previous MaxDB operation
maxdb_ssl_set ; Used for establishing secure connections using SSL
maxdb_stat ; Gets the current system status
maxdb_stmt_bind_param ; Binds variables to a prepared statement as parameters
maxdb_stmt_bind_result ; Binds variables to a prepared statement for result storage
maxdb_stmt_close ; Closes a prepared statement
maxdb_stmt_close_long_data ; Ends a sequence of maxdb_stmt_send_long_data
maxdb_stmt_data_seek ; Seeks to an arbitray row in statement result set
maxdb_stmt_errno ; Returns the error code for the most recent statement call
maxdb_stmt_error ; Returns a string description for last statement error
maxdb_stmt_execute ; Executes a prepared Query
maxdb_stmt_fetch ; Fetch results from a prepared statement into the bound variables
maxdb_stmt_free_result ; Frees stored result memory for the given statement handle
maxdb_stmt_init ; Initializes a statement and returns an resource for use with maxdb_stmt_prepare
maxdb_stmt_num_rows ; Return the number of rows in statements result set
maxdb_stmt_param_count ; Returns the number of parameter for the given statement
maxdb_stmt_prepare ; Prepare an SQL statement for execution
maxdb_stmt_reset ; Resets a prepared statement
maxdb_stmt_result_metadata ; Returns result set metadata from a prepared statement
maxdb_stmt_send_long_data ; Send data in blocks
maxdb_stmt_sqlstate ; Returns SQLSTATE error from previous statement operation
maxdb_stmt_store_result ; Transfers a result set from a prepared statement
maxdb_store_result ; Transfers a result set from the last query
maxdb_thread_id ; Returns the thread ID for the current connection
maxdb_thread_safe ; Returns whether thread safety is given or not
maxdb_use_result ; Initiate a result set retrieval
maxdb_warning_count ; Returns the number of warnings from the last query for the given link
mb_check_encoding ; 检查字符串在指定的编码里是否有效
mb_convert_case ; 对字符串进行大小写转换
mb_convert_encoding ; 转换字符的编码
mb_convert_kana ; Convert &quot;kana&quot; one from another (&quot;zen-kaku&quot;, &quot;han-kaku&quot; and more)
mb_convert_variables ; 转换一个或多个变量的字符编码
mb_decode_mimeheader ; 解码 MIME 头字段中的字符串
mb_decode_numericentity ; 根据 HTML 数字字符串解码成字符
mb_detect_encoding ; 检测字符的编码
mb_detect_order ; 设置/获取 字符编码的检测顺序
mb_encode_mimeheader ; 为 MIME 头编码字符串
mb_encode_numericentity ; Encode character to HTML numeric string reference
mb_encoding_aliases ; Get aliases of a known encoding type
mb_ereg ; Regular expression match with multibyte support
mb_eregi ; Regular expression match ignoring case with multibyte support
mb_eregi_replace ; Replace regular expression with multibyte support ignoring case
mb_ereg_match ; Regular expression match for multibyte string
mb_ereg_replace ; Replace regular expression with multibyte support
mb_ereg_replace_callback ; Perform a regular expresssion seach and replace with multibyte support using a callback
mb_ereg_search ; Multibyte regular expression match for predefined multibyte string
mb_ereg_search_getpos ; Returns start point for next regular expression match
mb_ereg_search_getregs ; Retrieve the result from the last multibyte regular expression match
mb_ereg_search_init ; Setup string and regular expression for a multibyte regular expression match
mb_ereg_search_pos ; Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string
mb_ereg_search_regs ; Returns the matched part of a multibyte regular expression
mb_ereg_search_setpos ; Set start point of next regular expression match
mb_get_info ; 获取 mbstring 的内部设置
mb_http_input ; 检测 HTTP 输入字符编码
mb_http_output ; 设置/获取 HTTP 输出字符编码
mb_internal_encoding ; 设置/获取内部字符编码
mb_language ; 设置/获取当前的语言
mb_list_encodings ; 返回所有支持编码的数组
mb_output_handler ; 在输出缓冲中转换字符编码的回调函数
mb_parse_str ; 解析 GET/POST/COOKIE 数据并设置全局变量
mb_preferred_mime_name ; 获取 MIME 字符串
mb_regex_encoding ; Set/Get character encoding for multibyte regex
mb_regex_set_options ; Set/Get the default options for mbregex functions
mb_send_mail ; 发送编码过的邮件
mb_split ; 使用正则表达式分割多字节字符串
mb_strcut ; 获取字符的一部分
mb_strimwidth ; 获取按指定宽度截断的字符串
mb_stripos ; 大小写不敏感地查找字符串在另一个字符串中首次出现的位置
mb_stristr ; 大小写不敏感地查找字符串在另一个字符串里的首次出现
mb_strlen ; 获取字符串的长度
mb_strpos ; 查找字符串在另一个字符串中首次出现的位置
mb_strrchr ; 查找指定字符在另一个字符串中最后一次的出现
mb_strrichr ; 大小写不敏感地查找指定字符在另一个字符串中最后一次的出现
mb_strripos ; 大小写不敏感地在字符串中查找一个字符串最后出现的位置
mb_strrpos ; 查找字符串在一个字符串中最后出现的位置
mb_strstr ; 查找字符串在另一个字符串里的首次出现
mb_strtolower ; 使字符串小写
mb_strtoupper ; 使字符串大写
mb_strwidth ; 返回字符串的宽度
mb_substitute_character ; 设置/获取替代字符
mb_substr ; 获取字符串的部分
mb_substr_count ; 统计字符串出现的次数
mcrypt_cbc ; Encrypts/decrypts data in CBC mode
mcrypt_cfb ; Encrypts/decrypts data in CFB mode
mcrypt_create_iv ; Creates an initialization vector (IV) from a random source
mcrypt_decrypt ; Decrypts crypttext with given parameters
mcrypt_ecb ; Deprecated: Encrypts/decrypts data in ECB mode
mcrypt_encrypt ; Encrypts plaintext with given parameters
mcrypt_enc_get_algorithms_name ; Returns the name of the opened algorithm
mcrypt_enc_get_block_size ; Returns the blocksize of the opened algorithm
mcrypt_enc_get_iv_size ; Returns the size of the IV of the opened algorithm
mcrypt_enc_get_key_size ; Returns the maximum supported keysize of the opened mode
mcrypt_enc_get_modes_name ; Returns the name of the opened mode
mcrypt_enc_get_supported_key_sizes ; Returns an array with the supported keysizes of the opened algorithm
mcrypt_enc_is_block_algorithm ; Checks whether the algorithm of the opened mode is a block algorithm
mcrypt_enc_is_block_algorithm_mode ; Checks whether the encryption of the opened mode works on blocks
mcrypt_enc_is_block_mode ; Checks whether the opened mode outputs blocks
mcrypt_enc_self_test ; Runs a self test on the opened module
mcrypt_generic ; This function encrypts data
mcrypt_generic_deinit ; This function deinitializes an encryption module
mcrypt_generic_end ; This function terminates encryption
mcrypt_generic_init ; This function initializes all buffers needed for encryption
mcrypt_get_block_size ; Gets the block size of the specified cipher
mcrypt_get_cipher_name ; Gets the name of the specified cipher
mcrypt_get_iv_size ; Returns the size of the IV belonging to a specific cipher/mode combination
mcrypt_get_key_size ; Gets the key size of the specified cipher
mcrypt_list_algorithms ; Gets an array of all supported ciphers
mcrypt_list_modes ; Gets an array of all supported modes
mcrypt_module_close ; Closes the mcrypt module
mcrypt_module_get_algo_block_size ; Returns the blocksize of the specified algorithm
mcrypt_module_get_algo_key_size ; Returns the maximum supported keysize of the opened mode
mcrypt_module_get_supported_key_sizes ; Returns an array with the supported keysizes of the opened algorithm
mcrypt_module_is_block_algorithm ; This function checks whether the specified algorithm is a block algorithm
mcrypt_module_is_block_algorithm_mode ; Returns if the specified module is a block algorithm or not
mcrypt_module_is_block_mode ; Returns if the specified mode outputs blocks or not
mcrypt_module_open ; Opens the module of the algorithm and the mode to be used
mcrypt_module_self_test ; This function runs a self test on the specified module
mcrypt_ofb ; Encrypts/decrypts data in OFB mode
md5 ; 计算字符串的 MD5 散列值
md5_file ; 计算指定文件的 MD5 散列值
mdecrypt_generic ; Decrypts data
Memcache::add ; 增加一个条目到缓存服务器
Memcache::addServer ; 向连接池中添加一个memcache服务器
Memcache::close ; 关闭memcache连接
Memcache::connect ; 打开一个memcached服务端连接
Memcache::decrement ; 减小元素的值
Memcache::delete ; 从服务端删除一个元素
Memcache::flush ; 清洗（删除）已经存储的所有的元素
Memcache::get ; 从服务端检回一个元素
Memcache::getExtendedStats ; 缓存服务器池中所有服务器统计信息
Memcache::getServerStatus ; 用于获取一个服务器的在线/离线状态
Memcache::getStats ; 获取服务器统计信息
Memcache::getVersion ; 返回服务器版本信息
Memcache::increment ; 增加一个元素的值
Memcache::pconnect ; 打开一个到服务器的持久化连接
Memcache::replace ; 替换已经存在的元素的值
Memcache::set ; Store data at the server
Memcache::setCompressThreshold ; 开启大值自动压缩
Memcache::setServerParams ; 运行时修改服务器参数和状态
Memcached::add ; 向一个新的key下面增加一个元素
Memcached::addByKey ; 在指定服务器上的一个新的key下增加一个元素
Memcached::addServer ; 向服务器池中增加一个服务器
Memcached::addServers ; 向服务器池中增加多台服务器
Memcached::append ; 向已存在元素后追加数据
Memcached::appendByKey ; 向指定服务器上已存在元素后追加数据
Memcached::cas ; 比较并交换值
Memcached::casByKey ; 在指定服务器上比较并交换值
Memcached::decrement ; 减小数值元素的值
Memcached::decrementByKey ; Decrement numeric item's value, stored on a specific server
Memcached::delete ; 删除一个元素
Memcached::deleteByKey ; 从指定的服务器删除一个元素
Memcached::deleteMulti ; Delete multiple items
Memcached::deleteMultiByKey ; Delete multiple items from a specific server
Memcached::fetch ; 抓取下一个结果
Memcached::fetchAll ; 抓取所有剩余的结果
Memcached::flush ; 作废缓存中的所有元素
Memcached::get ; 检索一个元素
Memcached::getAllKeys ; Gets the keys stored on all the servers
Memcached::getByKey ; 从特定的服务器检索元素
Memcached::getDelayed ; 请求多个元素
Memcached::getDelayedByKey ; 从指定的服务器上请求多个元素
Memcached::getMulti ; 检索多个元素
Memcached::getMultiByKey ; 从特定服务器检索多个元素
Memcached::getOption ; 获取Memcached的选项值
Memcached::getResultCode ; 返回最后一次操作的结果代码
Memcached::getResultMessage ; 返回最后一次操作的结果描述消息
Memcached::getServerByKey ; 获取一个key所映射的服务器信息
Memcached::getServerList ; 获取服务器池中的服务器列表
Memcached::getStats ; 获取服务器池的统计信息
Memcached::getVersion ; 获取服务器池中所有服务器的版本信息
Memcached::increment ; 增加数值元素的值
Memcached::incrementByKey ; Increment numeric item's value, stored on a specific server
Memcached::isPersistent ; Check if a persitent connection to memcache is being used
Memcached::isPristine ; Check if the instance was recently created
Memcached::prepend ; 向一个已存在的元素前面追加数据
Memcached::prependByKey ; Prepend data to an existing item on a specific server
Memcached::quit ; Close any open connections
Memcached::replace ; 替换已存在key下的元素
Memcached::replaceByKey ; Replace the item under an existing key on a specific server
Memcached::resetServerList ; Clears all servers from the server list
Memcached::set ; 存储一个元素
Memcached::setByKey ; Store an item on a specific server
Memcached::setMulti ; 存储多个元素
Memcached::setMultiByKey ; Store multiple items on a specific server
Memcached::setOption ; 设置一个memcached选项
Memcached::setOptions ; Set Memcached options
Memcached::setSaslAuthData ; Set the credentials to use for authentication
Memcached::touch ; Set a new expiration on an item
Memcached::touchByKey ; Set a new expiration on an item on a specific server
Memcached::__construct ; 创建一个Memcached实例
memcache_debug ; 转换调试输出的开/关
memory_get_peak_usage ; 返回分配给 PHP 内存的峰值
memory_get_usage ; 返回分配给 PHP 的内存量
MessageFormatter::create ; Constructs a new Message Formatter
MessageFormatter::format ; Format the message
MessageFormatter::formatMessage ; Quick format message
MessageFormatter::getErrorCode ; Get the error code from last operation
MessageFormatter::getErrorMessage ; Get the error text from the last operation
MessageFormatter::getLocale ; Get the locale for which the formatter was created.
MessageFormatter::getPattern ; Get the pattern used by the formatter
MessageFormatter::parse ; Parse input string according to pattern
MessageFormatter::parseMessage ; Quick parse input string
MessageFormatter::setPattern ; Set the pattern used by the formatter
metaphone ; Calculate the metaphone key of a string
method_exists ; 检查类的方法是否存在
mhash ; Computes hash
mhash_count ; Gets the highest available hash ID
mhash_get_block_size ; Gets the block size of the specified hash
mhash_get_hash_name ; Gets the name of the specified hash
mhash_keygen_s2k ; Generates a key
microtime ; 返回当前 Unix 时间戳和微秒数
mime_content_type ; Detect MIME Content-type for a file (deprecated)
min ; 找出最小值
ming_keypress ; Returns the action flag for keyPress(char)
ming_setcubicthreshold ; Set cubic threshold
ming_setscale ; Set the global scaling factor.
ming_setswfcompression ; Sets the SWF output compression
ming_useconstants ; Use constant pool
ming_useswfversion ; Sets the SWF version
mkdir ; 新建目录
mktime ; 取得一个日期的 Unix 时间戳
money_format ; Formats a number as a currency string
Mongo::connectUtil ; Connects with a database server
Mongo::getPoolSize ; Get pool size for connection pools
Mongo::getSlave ; Returns the address being used by this for slaveOkay reads
Mongo::getSlaveOkay ; Get slaveOkay setting for this connection
Mongo::poolDebug ; Returns information about all connection pools.
Mongo::setPoolSize ; Set the size for future connection pools.
Mongo::setSlaveOkay ; Change slaveOkay setting for this connection
Mongo::switchSlave ; Choose a new secondary for slaveOkay reads
Mongo::__construct ; The __construct purpose
MongoBinData::__construct ; 创建一个新的二进制数据对象
MongoBinData::__toString ; 二进制数据对象的字符串表达形式。
MongoClient::close ; 关闭连接
MongoClient::connect ; 连接到数据库服务器
MongoClient::dropDB ; 删除一个数据库 [已废弃]
MongoClient::getConnections ; 返回所有已打开连接的信息
MongoClient::getHosts ; 更新所有关联主机的状态信息
MongoClient::getReadPreference ; 获取此连接的读取首选项
MongoClient::listDBs ; 列出所有有效数据库
MongoClient::selectCollection ; 获取数据库的文档集
MongoClient::selectDB ; 获取一个数据库
MongoClient::setReadPreference ; 为该连接设置读取选项
MongoClient::__construct ; 创建一个新的数据库连接对象
MongoClient::__get ; 取得一个数据库
MongoClient::__toString ; 该连接的字符串表达方式
MongoCode::__construct ; 创建一个新的代码对象
MongoCode::__toString ; 返回代码的字符串形式
MongoCollection::aggregate ; Perform an aggregation using the aggregation framework
MongoCollection::batchInsert ; Inserts multiple documents into this collection
MongoCollection::count ; 返回集合中的文档数量
MongoCollection::createDBRef ; 创建一个数据库引用
MongoCollection::deleteIndex ; Deletes an index from this collection
MongoCollection::deleteIndexes ; 删除集合的所有索引
MongoCollection::distinct ; 获取集合里指定键的不同值的列表。
MongoCollection::drop ; 删除该集合
MongoCollection::find ; 查询该集合，并返回结果集的 MongoCursor
MongoCollection::findAndModify ; Update a document and return it
MongoCollection::findOne ; Querys this collection, returning a single element
MongoCollection::getDBRef ; Fetches the document pointed to by a database reference
MongoCollection::getIndexInfo ; Returns information about indexes on this collection
MongoCollection::getName ; 返回这个集合的名称
MongoCollection::getReadPreference ; Get the read preference for this collection
MongoCollection::getSlaveOkay ; Get slaveOkay setting for this collection
MongoCollection::group ; Performs an operation similar to SQL's GROUP BY command
MongoCollection::insert ; 插入文档到集合中
MongoCollection::remove ; 从集合中删除记录
MongoCollection::save ; 保存一个文档到集合
MongoCollection::setReadPreference ; Set the read preference for this collection
MongoCollection::setSlaveOkay ; Change slaveOkay setting for this collection
MongoCollection::toIndexString ; Converts keys specifying an index to its identifying string
MongoCollection::update ; Update records based on a given criteria
MongoCollection::validate ; Validates this collection
MongoCollection::__construct ; 创建一个新的集合
MongoCollection::__get ; Gets a collection
MongoCollection::__toString ; String representation of this collection
MongoCursor::addOption ; Adds a top-level key/value pair to a query
MongoCursor::awaitData ; Sets whether this cursor will wait for a while for a tailable cursor to return more data
MongoCursor::batchSize ; Limits the number of elements returned in one batch.
MongoCursor::count ; Counts the number of results for this query
MongoCursor::current ; Returns the current element
MongoCursor::dead ; Checks if there are documents that have not been sent yet from the database for this cursor
MongoCursor::doQuery ; Execute the query.
MongoCursor::explain ; Return an explanation of the query, often useful for optimization and debugging
MongoCursor::fields ; Sets the fields for a query
MongoCursor::getNext ; Return the next object to which this cursor points, and advance the cursor
MongoCursor::getReadPreference ; Get the read preference for this query
MongoCursor::hasNext ; Checks if there are any more elements in this cursor
MongoCursor::hint ; Gives the database a hint about the query
MongoCursor::immortal ; Sets whether this cursor will timeout
MongoCursor::info ; Gets the query, fields, limit, and skip for this cursor
MongoCursor::key ; Returns the current result's _id
MongoCursor::limit ; Limits the number of results returned
MongoCursor::next ; Advances the cursor to the next result
MongoCursor::partial ; If this query should fetch partial results from mongos if a shard is down
MongoCursor::reset ; Clears the cursor
MongoCursor::rewind ; Returns the cursor to the beginning of the result set
MongoCursor::setFlag ; Sets arbitrary flags in case there is no method available the specific flag
MongoCursor::setReadPreference ; Set the read preference for this query
MongoCursor::skip ; Skips a number of results
MongoCursor::slaveOkay ; Sets whether this query can be done on a secondary
MongoCursor::snapshot ; Use snapshot mode for the query
MongoCursor::sort ; Sorts the results by given fields
MongoCursor::tailable ; Sets whether this cursor will be left open after fetching the last results
MongoCursor::timeout ; Sets a client-side timeout for this query
MongoCursor::valid ; Checks if the cursor is reading a valid result.
MongoCursor::__construct ; Create a new cursor
MongoCursorException::getHost ; 遇到该错误的服务器的 hostname
MongoDate::__construct ; 创建一个新的日期。
MongoDate::__toString ; 返回该日期的字符串形式的表达
MongoDB::authenticate ; 登录到数据库
MongoDB::command ; Execute a database command
MongoDB::createCollection ; Creates a collection
MongoDB::createDBRef ; Creates a database reference
MongoDB::drop ; Drops this database
MongoDB::dropCollection ; Drops a collection [deprecated]
MongoDB::execute ; Runs JavaScript code on the database server.
MongoDB::forceError ; Creates a database error
MongoDB::getCollectionNames ; Get all collections from this database
MongoDB::getDBRef ; Fetches the document pointed to by a database reference
MongoDB::getGridFS ; Fetches toolkit for dealing with files stored in this database
MongoDB::getProfilingLevel ; Gets this database's profiling level
MongoDB::getReadPreference ; Get the read preference for this database
MongoDB::getSlaveOkay ; Get slaveOkay setting for this database
MongoDB::lastError ; Check if there was an error on the most recent db operation performed
MongoDB::listCollections ; Gets an array of all MongoCollections for this database
MongoDB::prevError ; Checks for the last error thrown during a database operation
MongoDB::repair ; Repairs and compacts this database
MongoDB::resetError ; Clears any flagged errors on the database
MongoDB::selectCollection ; Gets a collection
MongoDB::setProfilingLevel ; Sets this database's profiling level
MongoDB::setReadPreference ; Set the read preference for this database
MongoDB::setSlaveOkay ; Change slaveOkay setting for this database
MongoDB::__construct ; Creates a new database
MongoDB::__get ; Gets a collection
MongoDB::__toString ; The name of this database
MongoDBRef::create ; 创建一个新的数据库引用
MongoDBRef::get ; 获取引用所指向的对象
MongoDBRef::isRef ; 检测数组是否为数据库引用
MongoGridFS::delete ; Delete a file from the database
MongoGridFS::drop ; Drops the files and chunks collections
MongoGridFS::find ; Queries for files
MongoGridFS::findOne ; Returns a single file matching the criteria
MongoGridFS::get ; Retrieve a file from the database
MongoGridFS::put ; Stores a file in the database
MongoGridFS::remove ; Removes files from the collections
MongoGridFS::storeBytes ; Stores a string of bytes in the database
MongoGridFS::storeFile ; Stores a file in the database
MongoGridFS::storeUpload ; Stores an uploaded file in the database
MongoGridFS::__construct ; Creates new file collections
MongoGridFSCursor::current ; Returns the current file
MongoGridFSCursor::getNext ; Return the next file to which this cursor points, and advance the cursor
MongoGridFSCursor::key ; Returns the current result's filename
MongoGridFSCursor::__construct ; Create a new cursor
MongoGridFSFile::getBytes ; Returns this file's contents as a string of bytes
MongoGridFSFile::getFilename ; Returns this file's filename
MongoGridFSFile::getResource ; Returns a resource that can be used to read the stored file
MongoGridFSFile::getSize ; Returns this file's size
MongoGridFSFile::write ; Writes this file to the filesystem
MongoGridfsFile::__construct ; Create a new GridFS file
MongoId::getHostname ; 获取这台机器上 id 所使用的 hostname
MongoId::getInc ; 返回用于创建 id 所增加的值
MongoId::getPID ; 获取进程 ID
MongoId::getTimestamp ; 获取新纪元时间到 id 创建时的秒数。
MongoId::__construct ; 创建一个新的id
MongoId::__set_state ; 创建一个假的 MongoId
MongoId::__toString ; 返回该 id 十六进制的表示形式
MongoInt32::__construct ; 创建一个新的 32位 integer。
MongoInt32::__toString ; 返回该 32 位 integer 的字符串表示。
MongoInt64::__construct ; 创建一个新的 64 位 integer。
MongoInt64::__toString ; 返回该 64 位 integer 的字符串表示形式。
MongoLog::getCallback ; Retrieve the previously set callback function name
MongoLog::getLevel ; Gets the log level
MongoLog::getModule ; Gets the modules currently being logged
MongoLog::setCallback ; Set a callback function to be called on events
MongoLog::setLevel ; Sets logging level
MongoLog::setModule ; Sets driver functionality to log
MongoPool::getSize ; Get pool size for connection pools
MongoPool::info ; Returns information about all connection pools.
MongoPool::setSize ; Set the size for future connection pools.
MongoRegex::__construct ; 创建一个新的正则表达式
MongoRegex::__toString ; 正则表达式的字符串表达形式
MongoResultException::getDocument ; 获取完整的结果文档
MongoTimestamp::__construct ; 创建一个新的时间戳。
MongoTimestamp::__toString ; 返回时间戳的字符串表示形式
move_uploaded_file ; 将上传的文件移动到新位置
mqseries_back ; MQSeries MQBACK
mqseries_begin ; MQseries MQBEGIN
mqseries_close ; MQSeries MQCLOSE
mqseries_cmit ; MQSeries MQCMIT
mqseries_conn ; MQSeries MQCONN
mqseries_connx ; MQSeries MQCONNX
mqseries_disc ; MQSeries MQDISC
mqseries_get ; MQSeries MQGET
mqseries_inq ; MQSeries MQINQ
mqseries_open ; MQSeries MQOPEN
mqseries_put ; MQSeries MQPUT
mqseries_put1 ; MQSeries MQPUT1
mqseries_set ; MQSeries MQSET
mqseries_strerror ; Returns the error message corresponding to a result code (MQRC).
msession_connect ; Connect to msession server
msession_count ; Get session count
msession_create ; Create a session
msession_destroy ; Destroy a session
msession_disconnect ; Close connection to msession server
msession_find ; Find all sessions with name and value
msession_get ; Get value from session
msession_get_array ; Get array of msession variables
msession_get_data ; Get data session unstructured data
msession_inc ; Increment value in session
msession_list ; List all sessions
msession_listvar ; List sessions with variable
msession_lock ; Lock a session
msession_plugin ; Call an escape function within the msession personality plugin
msession_randstr ; Get random string
msession_set ; Set value in session
msession_set_array ; Set msession variables from an array
msession_set_data ; Set data session unstructured data
msession_timeout ; Set/get session timeout
msession_uniq ; Get unique id
msession_unlock ; Unlock a session
msg_get_queue ; Create or attach to a message queue
msg_queue_exists ; Check whether a message queue exists
msg_receive ; Receive a message from a message queue
msg_remove_queue ; Destroy a message queue
msg_send ; Send a message to a message queue
msg_set_queue ; Set information in the message queue data structure
msg_stat_queue ; Returns information from the message queue data structure
msql ; Alias of msql_db_query
msql_affected_rows ; Returns number of affected rows
msql_close ; Close mSQL connection
msql_connect ; Open mSQL connection
msql_createdb ; 别名 msql_create_db
msql_create_db ; Create mSQL database
msql_data_seek ; Move internal row pointer
msql_dbname ; 别名 msql_result
msql_db_query ; Send mSQL query
msql_drop_db ; Drop (delete) mSQL database
msql_error ; Returns error message of last msql call
msql_fetch_array ; Fetch row as array
msql_fetch_field ; Get field information
msql_fetch_object ; Fetch row as object
msql_fetch_row ; Get row as enumerated array
msql_fieldflags ; Alias of msql_field_flags
msql_fieldlen ; Alias of msql_field_len
msql_fieldname ; Alias of msql_field_name
msql_fieldtable ; Alias of msql_field_table
msql_fieldtype ; Alias of msql_field_type
msql_field_flags ; Get field flags
msql_field_len ; Get field length
msql_field_name ; Get the name of the specified field in a result
msql_field_seek ; Set field offset
msql_field_table ; Get table name for field
msql_field_type ; Get field type
msql_free_result ; Free result memory
msql_list_dbs ; List mSQL databases on server
msql_list_fields ; List result fields
msql_list_tables ; List tables in an mSQL database
msql_numfields ; Alias of msql_num_fields
msql_numrows ; Alias of msql_num_rows
msql_num_fields ; Get number of fields in result
msql_num_rows ; Get number of rows in result
msql_pconnect ; Open persistent mSQL connection
msql_query ; Send mSQL query
msql_regcase ; Alias of sql_regcase
msql_result ; Get result data
msql_select_db ; Select mSQL database
msql_tablename ; Alias of msql_result
mssql_bind ; Adds a parameter to a stored procedure or a remote stored procedure
mssql_close ; Close MS SQL Server connection
mssql_connect ; Open MS SQL server connection
mssql_data_seek ; Moves internal row pointer
mssql_execute ; Executes a stored procedure on a MS SQL server database
mssql_fetch_array ; Fetch a result row as an associative array, a numeric array, or both
mssql_fetch_assoc ; Returns an associative array of the current row in the result
mssql_fetch_batch ; Returns the next batch of records
mssql_fetch_field ; Get field information
mssql_fetch_object ; Fetch row as object
mssql_fetch_row ; Get row as enumerated array
mssql_field_length ; Get the length of a field
mssql_field_name ; Get the name of a field
mssql_field_seek ; Seeks to the specified field offset
mssql_field_type ; Gets the type of a field
mssql_free_result ; Free result memory
mssql_free_statement ; Free statement memory
mssql_get_last_message ; Returns the last message from the server
mssql_guid_string ; Converts a 16 byte binary GUID to a string
mssql_init ; Initializes a stored procedure or a remote stored procedure
mssql_min_error_severity ; Sets the minimum error severity
mssql_min_message_severity ; Sets the minimum message severity
mssql_next_result ; Move the internal result pointer to the next result
mssql_num_fields ; Gets the number of fields in result
mssql_num_rows ; Gets the number of rows in result
mssql_pconnect ; Open persistent MS SQL connection
mssql_query ; Send MS SQL query
mssql_result ; Get result data
mssql_rows_affected ; Returns the number of records affected by the query
mssql_select_db ; Select MS SQL database
mt_getrandmax ; 显示随机数的最大可能值
mt_rand ; 生成更好的随机数
mt_srand ; 播下一个更好的随机数发生器种子
MultipleIterator::attachIterator ; Attaches iterator information
MultipleIterator::containsIterator ; Checks if an iterator is attached
MultipleIterator::countIterators ; Gets the number of attached iterator instances
MultipleIterator::current ; Gets the registered iterator instances
MultipleIterator::detachIterator ; Detaches an iterator
MultipleIterator::getFlags ; Gets the flag information
MultipleIterator::key ; Gets the registered iterator instances
MultipleIterator::next ; Moves all attached iterator instances forward
MultipleIterator::rewind ; Rewinds all attached iterator instances
MultipleIterator::setFlags ; Sets flags
MultipleIterator::valid ; Checks the validity of sub iterators
MultipleIterator::__construct ; Constructs a new MultipleIterator
Mutex::create ; Create a Mutex
Mutex::destroy ; Destroy Mutex
Mutex::lock ; Acquire Mutex
Mutex::trylock ; Attempt to Acquire Mutex
Mutex::unlock ; Release Mutex
mysqli::$affected_rows ; Gets the number of affected rows in a previous MySQL operation
mysqli::$client_info ; Get MySQL client info
mysqli::$connect_errno ; Returns the error code from last connect call
mysqli::$connect_error ; Returns a string description of the last connect error
mysqli::$error ; Returns a string description of the last error
mysqli::$error_list ; Returns a list of errors from the last command executed
mysqli::$field_count ; Returns the number of columns for the most recent query
mysqli::$host_info ; Returns a string representing the type of connection used
mysqli::$info ; Retrieves information about the most recently executed query
mysqli::$insert_id ; Returns the auto generated id used in the last query
mysqli::$protocol_version ; Returns the version of the MySQL protocol used
mysqli::$server_info ; Returns the version of the MySQL server
mysqli::$server_version ; Returns the version of the MySQL server as an integer
mysqli::$sqlstate ; Returns the SQLSTATE error from previous MySQL operation
mysqli::$thread_id ; Returns the thread ID for the current connection
mysqli::$warning_count ; Returns the number of warnings from the last query for the given link
mysqli::autocommit ; 打开或关闭本次数据库连接的自动命令提交事务模式
mysqli::change_user ; Changes the user of the specified database connection
mysqli::character_set_name ; 返回当前数据库连接的默认字符编码
mysqli::close ; 关闭先前打开的数据库连接
mysqli::commit ; 提交一个事务
mysqli::debug ; Performs debugging operations
mysqli::disable_reads_from_master ; Disable reads from master
mysqli::dump_debug_info ; 将调试信息输出到日志
mysqli::errno ; 返回最近函数调用的错误代码
mysqli::get_charset ; Returns a character set object
mysqli::get_client_info ; Get MySQL client info
mysqli::get_connection_stats ; Returns statistics about the client connection
mysqli::get_warnings ; Get result of SHOW WARNINGS
mysqli::init ; Initializes MySQLi and returns a resource for use with mysqli_real_connect()
mysqli::kill ; Asks the server to kill a MySQL thread
mysqli::more_results ; Check if there are any more query results from a multi query
mysqli::multi_query ; Performs a query on the database
mysqli::next_result ; Prepare next result from multi_query
mysqli::options ; Set options
mysqli::ping ; Pings a server connection, or tries to reconnect if the connection has gone down
mysqli::poll ; Poll connections
mysqli::prepare ; Prepare an SQL statement for execution
mysqli::query ; 对数据库执行一次查询
mysqli::real_connect ; Opens a connection to a mysql server
mysqli::real_escape_string ; Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection
mysqli::real_query ; 执行一个mysql查询
mysqli::reap_async_query ; Get result from async query
mysqli::refresh ; Refreshes
mysqli::rollback ; 回退当前事务
mysqli::rpl_query_type ; Returns RPL query type
mysqli::select_db ; 选择用于数据库查询的默认数据库
mysqli::send_query ; 发送请求并返回结果
mysqli::set_charset ; 设置默认字符编码
mysqli::set_local_infile_default ; Unsets user defined handler for load local infile command
mysqli::set_local_infile_handler ; Set callback function for LOAD DATA LOCAL INFILE command
mysqli::ssl_set ; Used for establishing secure connections using SSL
mysqli::stat ; Gets the current system status
mysqli::stmt_init ; 初始化一条语句并返回一个用于mysqli_stmt_prepare(调用)的对象
mysqli::store_result ; Transfers a result set from the last query
mysqli::thread_safe ; 返回是否是线程安全的
mysqli::use_result ; Initiate a result set retrieval
mysqli::__construct ; Open a new connection to the MySQL server
mysqli_bind_param ; mysqli_stmt_bind_param的别名
mysqli_bind_result ; mysqli_stmt_bind_result的别名
mysqli_client_encoding ; mysqli_character_set_name的别名
mysqli_connect ; 别名 mysqli::__construct
mysqli_disable_rpl_parse ; 禁用RPL解析
mysqli_driver::$report_mode ; Enables or disables internal report functions
mysqli_driver::embedded_server_end ; Stop embedded server
mysqli_driver::embedded_server_start ; Initialize and start embedded server
mysqli_enable_reads_from_master ; 开启从主机读取
mysqli_enable_rpl_parse ; 开启RPL解析
mysqli_escape_string ; 别名 mysqli_real_escape_string
mysqli_execute ; mysqli_stmt_execute的别名
mysqli_fetch ; mysqli_stmt_fetch的别名。
mysqli_get_cache_stats ; 返回客户端Zval缓存统计信息
mysqli_get_client_stats ; Returns client per-process statistics
mysqli_get_client_version ; Returns the MySQL client version as a string
mysqli_get_metadata ; mysqli_stmt_result_metadata的别名
mysqli_master_query ; 在主/从机制中强制在主机中执行一个查询
mysqli_param_count ; mysqli_stmt_param_count的别名
mysqli_report ; 开启或禁用（Mysql）内部（错误）报告函数
mysqli_result::$current_field ; Get current field offset of a result pointer
mysqli_result::$field_count ; Get the number of fields in a result
mysqli_result::$lengths ; Returns the lengths of the columns of the current row in the result set
mysqli_result::$num_rows ; Gets the number of rows in a result
mysqli_result::data_seek ; Adjusts the result pointer to an arbitrary row in the result
mysqli_result::fetch_all ; Fetches all result rows as an associative array, a numeric array, or both
mysqli_result::fetch_array ; Fetch a result row as an associative, a numeric array, or both
mysqli_result::fetch_assoc ; Fetch a result row as an associative array
mysqli_result::fetch_field ; Returns the next field in the result set
mysqli_result::fetch_fields ; Returns an array of objects representing the fields in a result set
mysqli_result::fetch_field_direct ; Fetch meta-data for a single field
mysqli_result::fetch_object ; Returns the current row of a result set as an object
mysqli_result::fetch_row ; Get a result row as an enumerated array
mysqli_result::field_seek ; Set result pointer to a specified field offset
mysqli_result::free ; Frees the memory associated with a result
mysqli_rpl_parse_enabled ; 检查是否开启了RPL解析
mysqli_rpl_probe ; RPL探测
mysqli_send_long_data ; mysqli_stmt_send_long_data的别名
mysqli_set_opt ; mysqli_options的别名
mysqli_slave_query ; 在主/从机制中强制在从机上执行一个查询
mysqli_stmt::$errno ; Returns the error code for the most recent statement call
mysqli_stmt::$error ; Returns a string description for last statement error
mysqli_stmt::$error_list ; Returns a list of errors from the last statement executed
mysqli_stmt::$field_count ; Returns the number of field in the given statement
mysqli_stmt::$insert_id ; Get the ID generated from the previous INSERT operation
mysqli_stmt::$num_rows ; Return the number of rows in statements result set
mysqli_stmt::$param_count ; Returns the number of parameter for the given statement
mysqli_stmt::$sqlstate ; Returns SQLSTATE error from previous statement operation
mysqli_stmt::attr_get ; Used to get the current value of a statement attribute
mysqli_stmt::attr_set ; Used to modify the behavior of a prepared statement
mysqli_stmt::bind_param ; Binds variables to a prepared statement as parameters
mysqli_stmt::bind_result ; Binds variables to a prepared statement for result storage
mysqli_stmt::close ; Closes a prepared statement
mysqli_stmt::data_seek ; Seeks to an arbitrary row in statement result set
mysqli_stmt::execute ; Executes a prepared Query
mysqli_stmt::fetch ; Fetch results from a prepared statement into the bound variables
mysqli_stmt::free_result ; Frees stored result memory for the given statement handle
mysqli_stmt::get_result ; Gets a result set from a prepared statement
mysqli_stmt::get_warnings ; Get result of SHOW WARNINGS
mysqli_stmt::more_results ; Check if there are more query results from a multiple query
mysqli_stmt::next_result ; Reads the next result from a multiple query
mysqli_stmt::prepare ; Prepare an SQL statement for execution
mysqli_stmt::reset ; Resets a prepared statement
mysqli_stmt::result_metadata ; Returns result set metadata from a prepared statement
mysqli_stmt::send_long_data ; Send data in blocks
mysqli_stmt::store_result ; Transfers a result set from a prepared statement
mysqli_warning::next ; The next purpose
mysqli_warning::__construct ; The __construct purpose
MysqlndUhConnection::changeUser ; Changes the user of the specified mysqlnd database connection
MysqlndUhConnection::charsetName ; Returns the default character set for the database connection
MysqlndUhConnection::close ; Closes a previously opened database connection
MysqlndUhConnection::connect ; Open a new connection to the MySQL server
MysqlndUhConnection::endPSession ; End a persistent connection
MysqlndUhConnection::getAffectedRows ; Gets the number of affected rows in a previous MySQL operation
MysqlndUhConnection::getErrorNumber ; Returns the error code for the most recent function call
MysqlndUhConnection::getErrorString ; Returns a string description of the last error
MysqlndUhConnection::getFieldCount ; Returns the number of columns for the most recent query
MysqlndUhConnection::getHostInformation ; Returns a string representing the type of connection used
MysqlndUhConnection::getLastInsertId ; Returns the auto generated id used in the last query.
MysqlndUhConnection::getLastMessage ; Retrieves information about the most recently executed query
MysqlndUhConnection::getProtocolInformation ; Returns the version of the MySQL protocol used
MysqlndUhConnection::getServerInformation ; Returns the version of the MySQL server
MysqlndUhConnection::getServerStatistics ; Gets the current system status
MysqlndUhConnection::getServerVersion ; Returns the version of the MySQL server as an integer
MysqlndUhConnection::getSqlstate ; Returns the SQLSTATE error from previous MySQL operation
MysqlndUhConnection::getStatistics ; Returns statistics about the client connection.
MysqlndUhConnection::getThreadId ; Returns the thread ID for the current connection
MysqlndUhConnection::getWarningCount ; Returns the number of warnings from the last query for the given link
MysqlndUhConnection::init ; Initialize mysqlnd connection
MysqlndUhConnection::killConnection ; Asks the server to kill a MySQL thread
MysqlndUhConnection::listFields ; List MySQL table fields
MysqlndUhConnection::listMethod ; Wrapper for assorted list commands
MysqlndUhConnection::moreResults ; Check if there are any more query results from a multi query
MysqlndUhConnection::nextResult ; Prepare next result from multi_query
MysqlndUhConnection::ping ; Pings a server connection, or tries to reconnect if the connection has gone down
MysqlndUhConnection::query ; Performs a query on the database
MysqlndUhConnection::queryReadResultsetHeader ; Read a result set header
MysqlndUhConnection::reapQuery ; Get result from async query
MysqlndUhConnection::refreshServer ; Flush or reset tables and caches
MysqlndUhConnection::restartPSession ; Restart a persistent mysqlnd connection
MysqlndUhConnection::selectDb ; Selects the default database for database queries
MysqlndUhConnection::sendClose ; Sends a close command to MySQL
MysqlndUhConnection::sendQuery ; Sends a query to MySQL
MysqlndUhConnection::serverDumpDebugInformation ; Dump debugging information into the log for the MySQL server
MysqlndUhConnection::setAutocommit ; Turns on or off auto-committing database modifications
MysqlndUhConnection::setCharset ; Sets the default client character set
MysqlndUhConnection::setClientOption ; Sets a client option
MysqlndUhConnection::setServerOption ; Sets a server option
MysqlndUhConnection::shutdownServer ; The shutdownServer purpose
MysqlndUhConnection::simpleCommand ; Sends a basic COM_* command
MysqlndUhConnection::simpleCommandHandleResponse ; Process a response for a basic COM_* command send to the client
MysqlndUhConnection::sslSet ; Used for establishing secure connections using SSL
MysqlndUhConnection::stmtInit ; Initializes a statement and returns a resource for use with mysqli_statement::prepare
MysqlndUhConnection::storeResult ; Transfers a result set from the last query
MysqlndUhConnection::txCommit ; Commits the current transaction
MysqlndUhConnection::txRollback ; Rolls back current transaction
MysqlndUhConnection::useResult ; Initiate a result set retrieval
MysqlndUhConnection::__construct ; The __construct purpose
MysqlndUhPreparedStatement::execute ; Executes a prepared Query
MysqlndUhPreparedStatement::prepare ; Prepare an SQL statement for execution
MysqlndUhPreparedStatement::__construct ; The __construct purpose
mysqlnd_memcache_get_config ; Returns information about the plugin configuration
mysqlnd_memcache_set ; Associate a MySQL connection with a Memcache connection
mysqlnd_ms_get_last_gtid ; Returns the latest global transaction ID
mysqlnd_ms_get_last_used_connection ; Returns an array which describes the last used connection
mysqlnd_ms_get_stats ; Returns query distribution and connection statistics
mysqlnd_ms_match_wild ; Finds whether a table name matches a wildcard pattern or not
mysqlnd_ms_query_is_select ; Find whether to send the query to the master, the slave or the last used MySQL server
mysqlnd_ms_set_qos ; Sets the quality of service needed from the cluster
mysqlnd_ms_set_user_pick_server ; Sets a callback for user-defined read/write splitting
mysqlnd_qc_clear_cache ; Flush all cache contents
mysqlnd_qc_get_available_handlers ; Returns a list of available storage handler
mysqlnd_qc_get_cache_info ; Returns information on the current handler, the number of cache entries and cache entries, if available
mysqlnd_qc_get_core_stats ; Statistics collected by the core of the query cache
mysqlnd_qc_get_normalized_query_trace_log ; Returns a normalized query trace log for each query inspected by the query cache
mysqlnd_qc_get_query_trace_log ; Returns a backtrace for each query inspected by the query cache
mysqlnd_qc_set_cache_condition ; Set conditions for automatic caching
mysqlnd_qc_set_is_select ; Installs a callback which decides whether a statement is cached
mysqlnd_qc_set_storage_handler ; Change current storage handler
mysqlnd_qc_set_user_handlers ; Sets the callback functions for a user-defined procedural storage handler
mysqlnd_uh_convert_to_mysqlnd ; Converts a MySQL connection handle into a mysqlnd connection handle
mysqlnd_uh_set_connection_proxy ; Installs a proxy for mysqlnd connections
mysqlnd_uh_set_statement_proxy ; Installs a proxy for mysqlnd statements
mysql_affected_rows ; 取得前一次 MySQL 操作所影响的记录行数
mysql_client_encoding ; 返回字符集的名称
mysql_close ; 关闭 MySQL 连接
mysql_connect ; 打开一个到 MySQL 服务器的连接
mysql_create_db ; 新建一个 MySQL 数据库
mysql_data_seek ; 移动内部结果的指针
mysql_db_name ; 取得结果数据
mysql_db_query ; 发送一条 MySQL 查询
mysql_drop_db ; 丢弃（删除）一个 MySQL 数据库
mysql_errno ; 返回上一个 MySQL 操作中的错误信息的数字编码
mysql_error ; 返回上一个 MySQL 操作产生的文本错误信息
mysql_escape_string ; 转义一个字符串用于 mysql_query
mysql_fetch_array ; 从结果集中取得一行作为关联数组，或数字数组，或二者兼有
mysql_fetch_assoc ; 从结果集中取得一行作为关联数组
mysql_fetch_field ; 从结果集中取得列信息并作为对象返回
mysql_fetch_lengths ; 取得结果集中每个输出的长度
mysql_fetch_object ; 从结果集中取得一行作为对象
mysql_fetch_row ; 从结果集中取得一行作为枚举数组
mysql_field_flags ; 从结果中取得和指定字段关联的标志
mysql_field_len ; 返回指定字段的长度
mysql_field_name ; 取得结果中指定字段的字段名
mysql_field_seek ; 将结果集中的指针设定为制定的字段偏移量
mysql_field_table ; 取得指定字段所在的表名
mysql_field_type ; 取得结果集中指定字段的类型
mysql_free_result ; 释放结果内存
mysql_get_client_info ; 取得 MySQL 客户端信息
mysql_get_host_info ; 取得 MySQL 主机信息
mysql_get_proto_info ; 取得 MySQL 协议信息
mysql_get_server_info ; 取得 MySQL 服务器信息
mysql_info ; 取得最近一条查询的信息
mysql_insert_id ; 取得上一步 INSERT 操作产生的 ID
mysql_list_dbs ; 列出 MySQL 服务器中所有的数据库
mysql_list_fields ; 列出 MySQL 结果中的字段
mysql_list_processes ; 列出 MySQL 进程
mysql_list_tables ; 列出 MySQL 数据库中的表
mysql_num_fields ; 取得结果集中字段的数目
mysql_num_rows ; 取得结果集中行的数目
mysql_pconnect ; 打开一个到 MySQL 服务器的持久连接
mysql_ping ; Ping 一个服务器连接，如果没有连接则重新连接
mysql_query ; 发送一条 MySQL 查询
mysql_real_escape_string ; 转义 SQL 语句中使用的字符串中的特殊字符，并考虑到连接的当前字符集
mysql_result ; 取得结果数据
mysql_select_db ; 选择 MySQL 数据库
mysql_set_charset ; 设置客户端的字符集
mysql_stat ; 取得当前系统状态
mysql_tablename ; 取得表名
mysql_thread_id ; 返回当前线程的 ID
mysql_unbuffered_query ; 向 MySQL 发送一条 SQL 查询，并不获取和缓存结果的行
m_checkstatus ; Check to see if a transaction has completed
m_completeauthorizations ; Number of complete authorizations in queue, returning an array of their identifiers
m_connect ; Establish the connection to MCVE
m_connectionerror ; Get a textual representation of why a connection failed
m_deletetrans ; Delete specified transaction from MCVE_CONN structure
m_destroyconn ; Destroy the connection and MCVE_CONN structure
m_destroyengine ; Free memory associated with IP/SSL connectivity
m_getcell ; Get a specific cell from a comma delimited response by column name
m_getcellbynum ; Get a specific cell from a comma delimited response by column number
m_getcommadelimited ; Get the RAW comma delimited data returned from MCVE
m_getheader ; Get the name of the column in a comma-delimited response
m_initconn ; Create and initialize an MCVE_CONN structure
m_initengine ; Ready the client for IP/SSL Communication
m_iscommadelimited ; Checks to see if response is comma delimited
m_maxconntimeout ; The maximum amount of time the API will attempt a connection to MCVE
m_monitor ; Perform communication with MCVE (send/receive data) Non-blocking
m_numcolumns ; Number of columns returned in a comma delimited response
m_numrows ; Number of rows returned in a comma delimited response
m_parsecommadelimited ; Parse the comma delimited response so m_getcell, etc will work
m_responseparam ; Get a custom response parameter
m_returnstatus ; Check to see if the transaction was successful
m_setblocking ; Set blocking/non-blocking mode for connection
m_setdropfile ; Set the connection method to Drop-File
m_setip ; Set the connection method to IP
m_setssl ; Set the connection method to SSL
m_settimeout ; Set maximum transaction time (per trans)
m_sslcert_gen_hash ; Generate hash for SSL client certificate verification
m_transactionssent ; Check to see if outgoing buffer is clear
m_transinqueue ; Number of transactions in client-queue
m_transkeyval ; Add key/value pair to a transaction. Replaces deprecated transparam()
m_transnew ; Start a new transaction
m_transsend ; Finalize and send the transaction
m_uwait ; Wait x microsecs
m_validateidentifier ; Whether or not to validate the passed identifier on any transaction it is passed to
m_verifyconnection ; Set whether or not to PING upon connect to verify connection
m_verifysslcert ; Set whether or not to verify the server ssl certificate
natcasesort ; 用&ldquo;自然排序&rdquo;算法对数组进行不区分大小写字母的排序
natsort ; 用&ldquo;自然排序&rdquo;算法对数组排序
ncurses_addch ; Add character at current position and advance cursor
ncurses_addchnstr ; Add attributed string with specified length at current position
ncurses_addchstr ; Add attributed string at current position
ncurses_addnstr ; Add string with specified length at current position
ncurses_addstr ; Output text at current position
ncurses_assume_default_colors ; Define default colors for color 0
ncurses_attroff ; Turn off the given attributes
ncurses_attron ; Turn on the given attributes
ncurses_attrset ; Set given attributes
ncurses_baudrate ; Returns baudrate of terminal
ncurses_beep ; Let the terminal beep
ncurses_bkgd ; Set background property for terminal screen
ncurses_bkgdset ; Control screen background
ncurses_border ; Draw a border around the screen using attributed characters
ncurses_bottom_panel ; Moves a visible panel to the bottom of the stack
ncurses_can_change_color ; Checks if terminal color definitions can be changed
ncurses_cbreak ; Switch of input buffering
ncurses_clear ; Clear screen
ncurses_clrtobot ; Clear screen from current position to bottom
ncurses_clrtoeol ; Clear screen from current position to end of line
ncurses_color_content ; Retrieves RGB components of a color
ncurses_color_set ; Set active foreground and background colors
ncurses_curs_set ; Set cursor state
ncurses_define_key ; Define a keycode
ncurses_def_prog_mode ; Saves terminals (program) mode
ncurses_def_shell_mode ; Saves terminals (shell) mode
ncurses_delay_output ; Delay output on terminal using padding characters
ncurses_delch ; Delete character at current position, move rest of line left
ncurses_deleteln ; Delete line at current position, move rest of screen up
ncurses_delwin ; Delete a ncurses window
ncurses_del_panel ; Remove panel from the stack and delete it (but not the associated window)
ncurses_doupdate ; Write all prepared refreshes to terminal
ncurses_echo ; Activate keyboard input echo
ncurses_echochar ; Single character output including refresh
ncurses_end ; Stop using ncurses, clean up the screen
ncurses_erase ; Erase terminal screen
ncurses_erasechar ; Returns current erase character
ncurses_filter ; Set LINES for iniscr() and newterm() to 1
ncurses_flash ; Flash terminal screen (visual bell)
ncurses_flushinp ; Flush keyboard input buffer
ncurses_getch ; Read a character from keyboard
ncurses_getmaxyx ; Returns the size of a window
ncurses_getmouse ; Reads mouse event
ncurses_getyx ; Returns the current cursor position for a window
ncurses_halfdelay ; Put terminal into halfdelay mode
ncurses_has_colors ; Checks if terminal has color capabilities
ncurses_has_ic ; Check for insert- and delete-capabilities
ncurses_has_il ; Check for line insert- and delete-capabilities
ncurses_has_key ; Check for presence of a function key on terminal keyboard
ncurses_hide_panel ; Remove panel from the stack, making it invisible
ncurses_hline ; Draw a horizontal line at current position using an attributed character and max. n characters long
ncurses_inch ; Get character and attribute at current position
ncurses_init ; Initialize ncurses
ncurses_init_color ; Define a terminal color
ncurses_init_pair ; Define a color pair
ncurses_insch ; Insert character moving rest of line including character at current position
ncurses_insdelln ; Insert lines before current line scrolling down (negative numbers delete and scroll up)
ncurses_insertln ; Insert a line, move rest of screen down
ncurses_insstr ; Insert string at current position, moving rest of line right
ncurses_instr ; Reads string from terminal screen
ncurses_isendwin ; Ncurses is in endwin mode, normal screen output may be performed
ncurses_keyok ; Enable or disable a keycode
ncurses_keypad ; Turns keypad on or off
ncurses_killchar ; Returns current line kill character
ncurses_longname ; Returns terminals description
ncurses_meta ; Enables/Disable 8-bit meta key information
ncurses_mouseinterval ; Set timeout for mouse button clicks
ncurses_mousemask ; Sets mouse options
ncurses_mouse_trafo ; Transforms coordinates
ncurses_move ; Move output position
ncurses_move_panel ; Moves a panel so that its upper-left corner is at [startx, starty]
ncurses_mvaddch ; Move current position and add character
ncurses_mvaddchnstr ; Move position and add attributed string with specified length
ncurses_mvaddchstr ; Move position and add attributed string
ncurses_mvaddnstr ; Move position and add string with specified length
ncurses_mvaddstr ; Move position and add string
ncurses_mvcur ; Move cursor immediately
ncurses_mvdelch ; Move position and delete character, shift rest of line left
ncurses_mvgetch ; Move position and get character at new position
ncurses_mvhline ; Set new position and draw a horizontal line using an attributed character and max. n characters long
ncurses_mvinch ; Move position and get attributed character at new position
ncurses_mvvline ; Set new position and draw a vertical line using an attributed character and max. n characters long
ncurses_mvwaddstr ; Add string at new position in window
ncurses_napms ; Sleep
ncurses_newpad ; Creates a new pad (window)
ncurses_newwin ; Create a new window
ncurses_new_panel ; Create a new panel and associate it with window
ncurses_nl ; Translate newline and carriage return / line feed
ncurses_nocbreak ; Switch terminal to cooked mode
ncurses_noecho ; Switch off keyboard input echo
ncurses_nonl ; Do not translate newline and carriage return / line feed
ncurses_noqiflush ; Do not flush on signal characters
ncurses_noraw ; Switch terminal out of raw mode
ncurses_pair_content ; Retrieves foreground and background colors of a color pair
ncurses_panel_above ; Returns the panel above panel
ncurses_panel_below ; Returns the panel below panel
ncurses_panel_window ; Returns the window associated with panel
ncurses_pnoutrefresh ; Copies a region from a pad into the virtual screen
ncurses_prefresh ; Copies a region from a pad into the virtual screen
ncurses_putp ; Apply padding information to the string and output it
ncurses_qiflush ; Flush on signal characters
ncurses_raw ; Switch terminal into raw mode
ncurses_refresh ; Refresh screen
ncurses_replace_panel ; Replaces the window associated with panel
ncurses_resetty ; Restores saved terminal state
ncurses_reset_prog_mode ; Resets the prog mode saved by def_prog_mode
ncurses_reset_shell_mode ; Resets the shell mode saved by def_shell_mode
ncurses_savetty ; Saves terminal state
ncurses_scrl ; Scroll window content up or down without changing current position
ncurses_scr_dump ; Dump screen content to file
ncurses_scr_init ; Initialize screen from file dump
ncurses_scr_restore ; Restore screen from file dump
ncurses_scr_set ; Inherit screen from file dump
ncurses_show_panel ; Places an invisible panel on top of the stack, making it visible
ncurses_slk_attr ; Returns current soft label key attribute
ncurses_slk_attroff ; Turn off the given attributes for soft function-key labels
ncurses_slk_attron ; Turn on the given attributes for soft function-key labels
ncurses_slk_attrset ; Set given attributes for soft function-key labels
ncurses_slk_clear ; Clears soft labels from screen
ncurses_slk_color ; Sets color for soft label keys
ncurses_slk_init ; Initializes soft label key functions
ncurses_slk_noutrefresh ; Copies soft label keys to virtual screen
ncurses_slk_refresh ; Copies soft label keys to screen
ncurses_slk_restore ; Restores soft label keys
ncurses_slk_set ; Sets function key labels
ncurses_slk_touch ; Forces output when ncurses_slk_noutrefresh is performed
ncurses_standend ; Stop using 'standout' attribute
ncurses_standout ; Start using 'standout' attribute
ncurses_start_color ; Initializes color functionality
ncurses_termattrs ; Returns a logical OR of all attribute flags supported by terminal
ncurses_termname ; Returns terminals (short)-name
ncurses_timeout ; Set timeout for special key sequences
ncurses_top_panel ; Moves a visible panel to the top of the stack
ncurses_typeahead ; Specify different filedescriptor for typeahead checking
ncurses_ungetch ; Put a character back into the input stream
ncurses_ungetmouse ; Pushes mouse event to queue
ncurses_update_panels ; Refreshes the virtual screen to reflect the relations between panels in the stack
ncurses_use_default_colors ; Assign terminal default colors to color id -1
ncurses_use_env ; Control use of environment information about terminal size
ncurses_use_extended_names ; Control use of extended names in terminfo descriptions
ncurses_vidattr ; Display the string on the terminal in the video attribute mode
ncurses_vline ; Draw a vertical line at current position using an attributed character and max. n characters long
ncurses_waddch ; Adds character at current position in a window and advance cursor
ncurses_waddstr ; Outputs text at current postion in window
ncurses_wattroff ; Turns off attributes for a window
ncurses_wattron ; Turns on attributes for a window
ncurses_wattrset ; Set the attributes for a window
ncurses_wborder ; Draws a border around the window using attributed characters
ncurses_wclear ; Clears window
ncurses_wcolor_set ; Sets windows color pairings
ncurses_werase ; Erase window contents
ncurses_wgetch ; Reads a character from keyboard (window)
ncurses_whline ; Draws a horizontal line in a window at current position using an attributed character and max. n characters long
ncurses_wmouse_trafo ; Transforms window/stdscr coordinates
ncurses_wmove ; Moves windows output position
ncurses_wnoutrefresh ; Copies window to virtual screen
ncurses_wrefresh ; Refresh window on terminal screen
ncurses_wstandend ; End standout mode for a window
ncurses_wstandout ; Enter standout mode for a window
ncurses_wvline ; Draws a vertical line in a window at current position using an attributed character and max. n characters long
newt_bell ; Send a beep to the terminal
newt_button ; Create a new button
newt_button_bar ; This function returns a grid containing the buttons created.
newt_centered_window ; Open a centered window of the specified size
newt_checkbox ; 说明
newt_checkbox_get_value ; Retreives value of checkox resource
newt_checkbox_set_flags ; Configures checkbox resource
newt_checkbox_set_value ; Sets the value of the checkbox
newt_checkbox_tree ; 说明
newt_checkbox_tree_add_item ; Adds new item to the checkbox tree
newt_checkbox_tree_find_item ; Finds an item in the checkbox tree
newt_checkbox_tree_get_current ; Returns checkbox tree selected item
newt_checkbox_tree_get_entry_value ; 说明
newt_checkbox_tree_get_multi_selection ; 说明
newt_checkbox_tree_get_selection ; 说明
newt_checkbox_tree_multi ; 说明
newt_checkbox_tree_set_current ; 说明
newt_checkbox_tree_set_entry ; 说明
newt_checkbox_tree_set_entry_value ; 说明
newt_checkbox_tree_set_width ; 说明
newt_cls ; 说明
newt_compact_button ; 说明
newt_component_add_callback ; 说明
newt_component_takes_focus ; 说明
newt_create_grid ; 说明
newt_cursor_off ; 说明
newt_cursor_on ; 说明
newt_delay ; 说明
newt_draw_form ; 说明
newt_draw_root_text ; Displays the string text at the position indicated
newt_entry ; 说明
newt_entry_get_value ; 说明
newt_entry_set ; 说明
newt_entry_set_filter ; 说明
newt_entry_set_flags ; 说明
newt_finished ; Uninitializes newt interface
newt_form ; Create a form
newt_form_add_component ; Adds a single component to the form
newt_form_add_components ; Add several components to the form
newt_form_add_hot_key ; 说明
newt_form_destroy ; Destroys a form
newt_form_get_current ; 说明
newt_form_run ; Runs a form
newt_form_set_background ; 说明
newt_form_set_height ; 说明
newt_form_set_size ; 说明
newt_form_set_timer ; 说明
newt_form_set_width ; 说明
newt_form_watch_fd ; 说明
newt_grid_add_components_to_form ; 说明
newt_grid_basic_window ; 说明
newt_grid_free ; 说明
newt_grid_get_size ; 说明
newt_grid_h_close_stacked ; 说明
newt_grid_h_stacked ; 说明
newt_grid_place ; 说明
newt_grid_set_field ; 说明
newt_grid_simple_window ; 说明
newt_grid_v_close_stacked ; 说明
newt_grid_v_stacked ; 说明
newt_grid_wrapped_window ; 说明
newt_grid_wrapped_window_at ; 说明
newt_init ; Initialize newt
newt_label ; 说明
newt_label_set_text ; 说明
newt_listbox ; 说明
newt_listbox_append_entry ; 说明
newt_listbox_clear ; 说明
newt_listbox_clear_selection ; 说明
newt_listbox_delete_entry ; 说明
newt_listbox_get_current ; 说明
newt_listbox_get_selection ; 说明
newt_listbox_insert_entry ; 说明
newt_listbox_item_count ; 说明
newt_listbox_select_item ; 说明
newt_listbox_set_current ; 说明
newt_listbox_set_current_by_key ; 说明
newt_listbox_set_data ; 说明
newt_listbox_set_entry ; 说明
newt_listbox_set_width ; 说明
newt_listitem ; 说明
newt_listitem_get_data ; 说明
newt_listitem_set ; 说明
newt_open_window ; Open a window of the specified size and position
newt_pop_help_line ; Replaces the current help line with the one from the stack
newt_pop_window ; Removes the top window from the display
newt_push_help_line ; Saves the current help line on a stack, and displays the new line
newt_radiobutton ; 说明
newt_radio_get_current ; 说明
newt_redraw_help_line ; 说明
newt_reflow_text ; 说明
newt_refresh ; Updates modified portions of the screen
newt_resize_screen ; 说明
newt_run_form ; Runs a form
newt_scale ; 说明
newt_scale_set ; 说明
newt_scrollbar_set ; 说明
newt_set_help_callback ; 说明
newt_suspend ; Tells newt to return the terminal to its initial state
newt_textbox ; 说明
newt_textbox_get_num_lines ; 说明
newt_textbox_reflowed ; 说明
newt_textbox_set_height ; 说明
newt_textbox_set_text ; 说明
newt_vertical_scrollbar ; 说明
newt_wait_for_key ; Doesn't return until a key has been pressed
newt_win_choice ; 说明
newt_win_entries ; 说明
newt_win_menu ; 说明
newt_win_message ; 说明
newt_win_messagev ; 说明
newt_win_ternary ; 说明
next ; 将数组中的内部指针向前移动一位
ngettext ; Plural version of gettext
nl2br ; 在字符串所有新行之前插入 HTML 换行标记
nl_langinfo ; Query language and locale information
NoRewindIterator::current ; Get the current value
NoRewindIterator::getInnerIterator ; Get the inner iterator
NoRewindIterator::key ; Get the current key
NoRewindIterator::next ; Forward to the next element
NoRewindIterator::rewind ; Prevents the rewind operation on the inner iterator.
NoRewindIterator::valid ; Validates the iterator
NoRewindIterator::__construct ; Construct a NoRewindIterator
Normalizer::normalize ; Normalizes the input provided and returns the normalized string
notes_body ; Open the message msg_number in the specified mailbox on the specified server (leave serv
notes_copy_db ; Copy a Lotus Notes database
notes_create_db ; Create a Lotus Notes database
notes_create_note ; Create a note using form form_name
notes_drop_db ; Drop a Lotus Notes database
notes_find_note ; Returns a note id found in database_name
notes_header_info ; Open the message msg_number in the specified mailbox on the specified server (leave serv
notes_list_msgs ; Returns the notes from a selected database_name
notes_mark_read ; Mark a note_id as read for the User user_name
notes_mark_unread ; Mark a note_id as unread for the User user_name
notes_nav_create ; Create a navigator name, in database_name
notes_search ; Find notes that match keywords in database_name
notes_unread ; Returns the unread note id's for the current User user_name
notes_version ; Get the version Lotus Notes
nsapi_request_headers ; Fetch all HTTP request headers
nsapi_response_headers ; Fetch all HTTP response headers
nsapi_virtual ; Perform an NSAPI sub-request
nthmac ; Obtain a nthmac key (needs 2 arguments)
NumberFormatter::create ; Create a number formatter
NumberFormatter::format ; Format a number
NumberFormatter::formatCurrency ; Format a currency value
NumberFormatter::getAttribute ; Get an attribute
NumberFormatter::getErrorCode ; Get formatter's last error code.
NumberFormatter::getErrorMessage ; Get formatter's last error message.
NumberFormatter::getLocale ; Get formatter locale
NumberFormatter::getPattern ; Get formatter pattern
NumberFormatter::getSymbol ; Get a symbol value
NumberFormatter::getTextAttribute ; Get a text attribute
NumberFormatter::parse ; Parse a number
NumberFormatter::parseCurrency ; Parse a currency number
NumberFormatter::setAttribute ; Set an attribute
NumberFormatter::setPattern ; Set formatter pattern
NumberFormatter::setSymbol ; Set a symbol value
NumberFormatter::setTextAttribute ; Set a text attribute
number_format ; Format a number with grouped thousands
OAuth::disableDebug ; Turn off verbose debugging
OAuth::disableRedirects ; Turn off redirects
OAuth::disableSSLChecks ; Turn off SSL checks
OAuth::enableDebug ; Turn on verbose debugging
OAuth::enableRedirects ; Turn on redirects
OAuth::enableSSLChecks ; Turn on SSL checks
OAuth::fetch ; Fetch an OAuth protected resource
OAuth::generateSignature ; Generate a signature
OAuth::getAccessToken ; Fetch an access token
OAuth::getCAPath ; Gets CA information
OAuth::getLastResponse ; Get the last response
OAuth::getLastResponseHeaders ; Get headers for last response
OAuth::getLastResponseInfo ; Get HTTP information about the last response
OAuth::getRequestHeader ; Generate OAuth header string signature
OAuth::getRequestToken ; Fetch a request token
OAuth::setAuthType ; Set authorization type
OAuth::setCAPath ; Set CA path and info
OAuth::setNonce ; Set the nonce for subsequent requests
OAuth::setRequestEngine ; The setRequestEngine purpose
OAuth::setRSACertificate ; Set the RSA certificate
OAuth::setSSLChecks ; Tweak specific SSL checks for requests.
OAuth::setTimestamp ; Set the timestamp
OAuth::setToken ; Sets the token and secret
OAuth::setVersion ; Set the OAuth version
OAuth::__construct ; Create a new OAuth object
OAuth::__destruct ; The destructor
OAuthProvider::addRequiredParameter ; Add required parameters
OAuthProvider::callconsumerHandler ; Calls the consumerNonceHandler callback
OAuthProvider::callTimestampNonceHandler ; Calls the timestampNonceHandler callback
OAuthProvider::calltokenHandler ; Calls the tokenNonceHandler callback
OAuthProvider::checkOAuthRequest ; Check an oauth request
OAuthProvider::consumerHandler ; Set the consumerHandler handler callback
OAuthProvider::generateToken ; Generate a random token
OAuthProvider::is2LeggedEndpoint ; is2LeggedEndpoint
OAuthProvider::isRequestTokenEndpoint ; Sets isRequestTokenEndpoint
OAuthProvider::removeRequiredParameter ; Remove a required parameter
OAuthProvider::reportProblem ; Report a problem
OAuthProvider::setParam ; Set a parameter
OAuthProvider::setRequestTokenPath ; Set request token path
OAuthProvider::timestampNonceHandler ; Set the timestampNonceHandler handler callback
OAuthProvider::tokenHandler ; Set the tokenHandler handler callback
OAuthProvider::__construct ; Constructs a new OAuthProvider object
oauth_get_sbs ; Generate a Signature Base String
oauth_urlencode ; Encode a URI to RFC 3986
ob_clean ; 清空（擦掉）输出缓冲区
ob_deflatehandler ; Deflate output handler
ob_end_clean ; 清空（擦除）缓冲区并关闭输出缓冲
ob_end_flush ; 冲刷出（送出）输出缓冲区内容并关闭缓冲
ob_etaghandler ; ETag output handler
ob_flush ; 冲刷出（送出）输出缓冲区中的内容
ob_get_clean ; 得到当前缓冲区的内容并删除当前输出缓。
ob_get_contents ; 返回输出缓冲区的内容
ob_get_flush ; 刷出（送出）缓冲区内容，以字符串形式返回内容，并关闭输出缓冲区。
ob_get_length ; 返回输出缓冲区内容的长度
ob_get_level ; 返回输出缓冲机制的嵌套级别
ob_get_status ; 得到所有输出缓冲区的状态
ob_gzhandler ; 在ob_start中使用的用来压缩输出缓冲区中内容的回调函数。ob_start callback function to gzip output buffer
ob_iconv_handler ; 以输出缓冲处理程序转换字符编码
ob_implicit_flush ; 打开/关闭绝对刷送
ob_inflatehandler ; Inflate output handler
ob_list_handlers ; 列出所有使用中的输出处理程序。
ob_start ; 打开输出控制缓冲
ob_tidyhandler ; ob_start callback function to repair the buffer
OCI-Collection::append ; Appends element to the collection
OCI-Collection::assign ; Assigns a value to the collection from another existing collection
OCI-Collection::assignElem ; Assigns a value to the element of the collection
OCI-Collection::free ; Frees the resources associated with the collection object
OCI-Collection::getElem ; Returns value of the element
OCI-Collection::max ; Returns the maximum number of elements in the collection
OCI-Collection::size ; Returns size of the collection
OCI-Collection::trim ; Trims elements from the end of the collection
OCI-Lob::append ; Appends data from the large object to another large object
OCI-Lob::close ; Closes LOB descriptor
OCI-Lob::eof ; Tests for end-of-file on a large object's descriptor
OCI-Lob::erase ; Erases a specified portion of the internal LOB data
OCI-Lob::export ; Exports LOB's contents to a file
OCI-Lob::flush ; Flushes/writes buffer of the LOB to the server
OCI-Lob::free ; Frees resources associated with the LOB descriptor
OCI-Lob::getBuffering ; Returns current state of buffering for the large object
OCI-Lob::import ; Imports file data to the LOB
OCI-Lob::load ; Returns large object's contents
OCI-Lob::read ; Reads part of the large object
OCI-Lob::rewind ; Moves the internal pointer to the beginning of the large object
OCI-Lob::save ; Saves data to the large object
OCI-Lob::saveFile ; 别名 OCI-Lob::import
OCI-Lob::seek ; Sets the internal pointer of the large object
OCI-Lob::setBuffering ; Changes current state of buffering for the large object
OCI-Lob::size ; Returns size of large object
OCI-Lob::tell ; Returns the current position of internal pointer of large object
OCI-Lob::truncate ; Truncates large object
OCI-Lob::write ; Writes data to the large object
OCI-Lob::writeTemporary ; Writes a temporary large object
OCI-Lob::writeToFile ; 别名 OCI-Lob::export
ocibindbyname ; 别名 oci_bind_by_name
ocicancel ; 别名 oci_cancel
ocicloselob ; 别名 OCI-Lob::close
ocicollappend ; 别名 OCI-Collection::append
ocicollassign ; 别名 OCI-Collection::assign
ocicollassignelem ; 别名 OCI-Collection::assignElem
ocicollgetelem ; 别名 OCI-Collection::getElem
ocicollmax ; 别名 OCI-Collection::max
ocicollsize ; 别名 OCI-Collection::size
ocicolltrim ; 别名 OCI-Collection::trim
ocicolumnisnull ; 别名 oci_field_is_null
ocicolumnname ; 别名 oci_field_name
ocicolumnprecision ; 别名 oci_field_precision
ocicolumnscale ; 别名 oci_field_scale
ocicolumnsize ; 别名 oci_field_size
ocicolumntype ; 别名 oci_field_type
ocicolumntyperaw ; 别名 oci_field_type_raw
ocicommit ; 别名 oci_commit
ocidefinebyname ; 别名 oci_define_by_name
ocierror ; 别名 oci_error
ociexecute ; 别名 oci_execute
ocifetch ; 别名 oci_fetch
ocifetchinto ; Fetches the next row into an array (deprecated)
ocifetchstatement ; 别名 oci_fetch_all
ocifreecollection ; 别名 OCI-Collection::free
ocifreecursor ; 别名 oci_free_statement
ocifreedesc ; 别名 OCI-Lob::free
ocifreestatement ; 别名 oci_free_statement
ociinternaldebug ; 别名 oci_internal_debug
ociloadlob ; 别名 OCI-Lob::load
ocilogoff ; 别名 oci_close
ocilogon ; 别名 oci_connect
ocinewcollection ; 别名 oci_new_collection
ocinewcursor ; 别名 oci_new_cursor
ocinewdescriptor ; 别名 oci_new_descriptor
ocinlogon ; 别名 oci_new_connect
ocinumcols ; 别名 oci_num_fields
ociparse ; 别名 oci_parse
ociplogon ; 别名 oci_pconnect
ociresult ; 别名 oci_result
ocirollback ; 别名 oci_rollback
ocirowcount ; 别名 oci_num_rows
ocisavelob ; 别名 OCI-Lob::save
ocisavelobfile ; 别名 OCI-Lob::import
ociserverversion ; 别名 oci_server_version
ocisetprefetch ; 别名 oci_set_prefetch
ocistatementtype ; 别名 oci_statement_type
ociwritelobtofile ; 别名 OCI-Lob::export
ociwritetemporarylob ; 别名 OCI-Lob::writeTemporary
oci_bind_array_by_name ; Binds a PHP array to an Oracle PL/SQL array parameter
oci_bind_by_name ; 绑定一个 PHP 变量到一个 Oracle 位置标志符
oci_cancel ; 取消从游标读取数据
oci_client_version ; Returns the Oracle client library version
oci_close ; 关闭 Oracle 连接
oci_commit ; 提交未执行的事务处理
oci_connect ; 建立一个到 Oracle 服务器的连接
oci_define_by_name ; 在 SELECT 中使用 PHP 变量作为定义的步骤
oci_error ; 返回上一个错误
oci_execute ; 执行一条语句
oci_fetch ; Fetches the next row into result-buffer
oci_fetch_all ; 获取结果数据的所有行到一个数组
oci_fetch_array ; Returns the next row from a query as an associative or numeric array
oci_fetch_assoc ; Returns the next row from a query as an associative array
oci_fetch_object ; Returns the next row from a query as an object
oci_fetch_row ; Returns the next row from a query as a numeric array
oci_field_is_null ; 检查字段是否为 NULL
oci_field_name ; 返回字段名
oci_field_precision ; 返回字段精度
oci_field_scale ; 返回字段范围
oci_field_size ; 返回字段大小
oci_field_type ; 返回字段的数据类型
oci_field_type_raw ; 返回字段的原始 Oracle 数据类型
oci_free_descriptor ; Frees a descriptor
oci_free_statement ; 释放关联于语句或游标的所有资源
oci_internal_debug ; 打开或关闭内部调试输出
oci_lob_copy ; Copies large object
oci_lob_is_equal ; Compares two LOB/FILE locators for equality
oci_new_collection ; 分配新的 collection 对象
oci_new_connect ; 建定一个到 Oracle 服务器的新连接
oci_new_cursor ; 分配并返回一个新的游标（语句句柄）
oci_new_descriptor ; 初始化一个新的空 LOB 或 FILE 描述符
oci_num_fields ; 返回结果列的数目
oci_num_rows ; 返回语句执行后受影响的行数
oci_parse ; 配置 Oracle 语句预备执行
oci_password_change ; 修改 Oracle 用户的密码
oci_pconnect ; 使用一个持久连接连到 Oracle 数据库
oci_result ; 返回所取得行中字段的值
oci_rollback ; 回滚未提交的事务
oci_server_version ; 返回服务器版本信息
oci_set_action ; Sets the action name
oci_set_client_identifier ; Sets the client identifier
oci_set_client_info ; Sets the client information
oci_set_edition ; Sets the database edition
oci_set_module_name ; Sets the module name
oci_set_prefetch ; 设置预提取行数
oci_statement_type ; 返回 OCI 语句的类型
octdec ; 八进制转换为十进制
odbc_autocommit ; Toggle autocommit behaviour
odbc_binmode ; Handling of binary column data
odbc_close ; Close an ODBC connection
odbc_close_all ; Close all ODBC connections
odbc_columnprivileges ; Lists columns and associated privileges for the given table
odbc_columns ; Lists the column names in specified tables
odbc_commit ; Commit an ODBC transaction
odbc_connect ; Connect to a datasource
odbc_cursor ; Get cursorname
odbc_data_source ; Returns information about a current connection
odbc_do ; 别名 odbc_exec
odbc_error ; Get the last error code
odbc_errormsg ; Get the last error message
odbc_exec ; Prepare and execute an SQL statement
odbc_execute ; Execute a prepared statement
odbc_fetch_array ; Fetch a result row as an associative array
odbc_fetch_into ; Fetch one result row into array
odbc_fetch_object ; Fetch a result row as an object
odbc_fetch_row ; Fetch a row
odbc_field_len ; Get the length (precision) of a field
odbc_field_name ; Get the columnname
odbc_field_num ; Return column number
odbc_field_precision ; 别名 odbc_field_len
odbc_field_scale ; Get the scale of a field
odbc_field_type ; Datatype of a field
odbc_foreignkeys ; Retrieves a list of foreign keys
odbc_free_result ; Free resources associated with a result
odbc_gettypeinfo ; Retrieves information about data types supported by the data source
odbc_longreadlen ; Handling of LONG columns
odbc_next_result ; Checks if multiple results are available
odbc_num_fields ; Number of columns in a result
odbc_num_rows ; Number of rows in a result
odbc_pconnect ; Open a persistent database connection
odbc_prepare ; Prepares a statement for execution
odbc_primarykeys ; Gets the primary keys for a table
odbc_procedurecolumns ; Retrieve information about parameters to procedures
odbc_procedures ; Get the list of procedures stored in a specific data source
odbc_result ; Get result data
odbc_result_all ; Print result as HTML table
odbc_rollback ; Rollback a transaction
odbc_setoption ; Adjust ODBC settings
odbc_specialcolumns ; Retrieves special columns
odbc_statistics ; Retrieve statistics about a table
odbc_tableprivileges ; Lists tables and the privileges associated with each table
odbc_tables ; Get the list of table names stored in a specific data source
ogg:// ; 音频流
openal_buffer_create ; Generate OpenAL buffer
openal_buffer_data ; Load a buffer with data
openal_buffer_destroy ; Destroys an OpenAL buffer
openal_buffer_get ; Retrieve an OpenAL buffer property
openal_buffer_loadwav ; Load a .wav file into a buffer
openal_context_create ; Create an audio processing context
openal_context_current ; Make the specified context current
openal_context_destroy ; Destroys a context
openal_context_process ; Process the specified context
openal_context_suspend ; Suspend the specified context
openal_device_close ; Close an OpenAL device
openal_device_open ; Initialize the OpenAL audio layer
openal_listener_get ; Retrieve a listener property
openal_listener_set ; Set a listener property
openal_source_create ; Generate a source resource
openal_source_destroy ; Destroy a source resource
openal_source_get ; Retrieve an OpenAL source property
openal_source_pause ; Pause the source
openal_source_play ; Start playing the source
openal_source_rewind ; Rewind the source
openal_source_set ; Set source property
openal_source_stop ; Stop playing the source
openal_stream ; Begin streaming on a source
opendir ; 打开目录句柄
openlog ; Open connection to system logger
openssl_cipher_iv_length ; Gets the cipher iv length
openssl_csr_export ; Exports a CSR as a string
openssl_csr_export_to_file ; Exports a CSR to a file
openssl_csr_get_public_key ; Returns the public key of a CERT
openssl_csr_get_subject ; Returns the subject of a CERT
openssl_csr_new ; Generates a CSR
openssl_csr_sign ; Sign a CSR with another certificate (or itself) and generate a certificate
openssl_decrypt ; Decrypts data
openssl_dh_compute_key ; Computes shared secret for public value of remote DH key and local DH key
openssl_digest ; Computes a digest
openssl_encrypt ; Encrypts data
openssl_error_string ; Return openSSL error message
openssl_free_key ; Free key resource
openssl_get_cipher_methods ; Gets available cipher methods
openssl_get_md_methods ; Gets available digest methods
openssl_get_privatekey ; 别名 openssl_pkey_get_private
openssl_get_publickey ; 别名 openssl_pkey_get_public
openssl_open ; Open sealed data
openssl_pkcs7_decrypt ; Decrypts an S/MIME encrypted message
openssl_pkcs7_encrypt ; Encrypt an S/MIME message
openssl_pkcs7_sign ; Sign an S/MIME message
openssl_pkcs7_verify ; Verifies the signature of an S/MIME signed message
openssl_pkcs12_export ; Exports a PKCS#12 Compatible Certificate Store File to variable.
openssl_pkcs12_export_to_file ; Exports a PKCS#12 Compatible Certificate Store File
openssl_pkcs12_read ; Parse a PKCS#12 Certificate Store into an array
openssl_pkey_export ; Gets an exportable representation of a key into a string
openssl_pkey_export_to_file ; Gets an exportable representation of a key into a file
openssl_pkey_free ; Frees a private key
openssl_pkey_get_details ; Returns an array with the key details
openssl_pkey_get_private ; Get a private key
openssl_pkey_get_public ; Extract public key from certificate and prepare it for use
openssl_pkey_new ; Generates a new private key
openssl_private_decrypt ; Decrypts data with private key
openssl_private_encrypt ; Encrypts data with private key
openssl_public_decrypt ; Decrypts data with public key
openssl_public_encrypt ; Encrypts data with public key
openssl_random_pseudo_bytes ; Generate a pseudo-random string of bytes
openssl_seal ; Seal (encrypt) data
openssl_sign ; Generate signature
openssl_verify ; Verify signature
openssl_x509_checkpurpose ; Verifies if a certificate can be used for a particular purpose
openssl_x509_check_private_key ; Checks if a private key corresponds to a certificate
openssl_x509_export ; Exports a certificate as a string
openssl_x509_export_to_file ; Exports a certificate to file
openssl_x509_free ; Free certificate resource
openssl_x509_parse ; Parse an X509 certificate and return the information as an array
ord ; 返回字符的 ASCII 码值
OuterIterator::getInnerIterator ; Returns the inner iterator for the current entry.
output_add_rewrite_var ; 添加URL重写器的值（Add URL rewriter values）
output_reset_rewrite_vars ; 重设URL重写器的值（Reset URL rewriter values）
override_function ; Overrides built-in functions
ovrimos_close ; Closes the connection to ovrimos
ovrimos_commit ; Commits the transaction
ovrimos_connect ; Connect to the specified database
ovrimos_cursor ; Returns the name of the cursor
ovrimos_exec ; Executes an SQL statement
ovrimos_execute ; Executes a prepared SQL statement
ovrimos_fetch_into ; Fetches a row from the result set
ovrimos_fetch_row ; Fetches a row from the result set
ovrimos_field_len ; Returns the length of the output column
ovrimos_field_name ; Returns the output column name
ovrimos_field_num ; Returns the (1-based) index of the output column
ovrimos_field_type ; Returns the type of the output column
ovrimos_free_result ; Frees the specified result_id
ovrimos_longreadlen ; Specifies how many bytes are to be retrieved from long datatypes
ovrimos_num_fields ; Returns the number of columns
ovrimos_num_rows ; Returns the number of rows affected by update operations
ovrimos_prepare ; Prepares an SQL statement
ovrimos_result ; Retrieves the output column
ovrimos_result_all ; Prints the whole result set as an HTML table
ovrimos_rollback ; Rolls back the transaction
pack ; Pack data into binary string
ParentIterator::accept ; Determines acceptability
ParentIterator::getChildren ; Return the inner iterator's children contained in a ParentIterator
ParentIterator::hasChildren ; Check whether the inner iterator's current element has children
ParentIterator::next ; Move the iterator forward
ParentIterator::rewind ; Rewind the iterator
ParentIterator::__construct ; Constructs a ParentIterator
parsekit_compile_file ; Compile a string of PHP code and return the resulting op array
parsekit_compile_string ; Compile a string of PHP code and return the resulting op array
parsekit_func_arginfo ; Return information regarding function argument(s)
parse_ini_file ; 解析一个配置文件
parse_ini_string ; Parse a configuration string
parse_str ; 将字符串解析成多个变量
parse_url ; 解析 URL，返回其组成部分
passthru ; Execute an external program and display raw output
password_get_info ; Returns information about the given hash
password_hash ; Creates a password hash
password_needs_rehash ; Checks if the given hash matches the given options
password_verify ; Verifies that a password matches a hash
pathinfo ; 返回文件路径的信息
pclose ; 关闭进程文件指针
pcntl_alarm ; 为进程设置一个alarm闹钟信号
pcntl_exec ; 在当前进程空间执行指定程序
pcntl_getpriority ; 获取任意进程的优先级
pcntl_setpriority ; 修改任意进程的优先级
pcntl_signal ; 安装一个信号处理器
pcntl_signal_dispatch ; 调用等待信号的处理器
pcntl_sigprocmask ; 设置或检索阻塞信号
pcntl_sigtimedwait ; 带超时机制的信号等待
pcntl_sigwaitinfo ; 等待信号
pcntl_wait ; 等待或返回fork的子进程状态
pcntl_waitpid ; 等待或返回fork的子进程状态
pcntl_wexitstatus ; 返回一个中断的子进程的返回代码
pcntl_wifexited ; 检查状态代码是否代表一个正常的退出。
pcntl_wifsignaled ; 检查子进程状态码是否代表由于某个信号而中断
pcntl_wifstopped ; 检查子进程当前是否已经停止
pcntl_wstopsig ; 返回导致子进程停止的信号
pcntl_wtermsig ; 返回导致子进程中断的信号
PDF_activate_item ; Activate structure element or other content item
PDF_add_annotation ; Add annotation [deprecated]
PDF_add_bookmark ; Add bookmark for current page [deprecated]
PDF_add_launchlink ; Add launch annotation for current page [deprecated]
PDF_add_locallink ; Add link annotation for current page [deprecated]
PDF_add_nameddest ; Create named destination
PDF_add_note ; Set annotation for current page [deprecated]
PDF_add_outline ; Add bookmark for current page [deprecated]
PDF_add_pdflink ; Add file link annotation for current page [deprecated]
PDF_add_table_cell ; Add a cell to a new or existing table
PDF_add_textflow ; Create Textflow or add text to existing Textflow
PDF_add_thumbnail ; Add thumbnail for current page
PDF_add_weblink ; Add weblink for current page [deprecated]
PDF_arc ; Draw a counterclockwise circular arc segment
PDF_arcn ; Draw a clockwise circular arc segment
PDF_attach_file ; Add file attachment for current page [deprecated]
PDF_begin_document ; Create new PDF file
PDF_begin_font ; Start a Type 3 font definition
PDF_begin_glyph ; Start glyph definition for Type 3 font
PDF_begin_item ; Open structure element or other content item
PDF_begin_layer ; Start layer
PDF_begin_page ; Start new page [deprecated]
PDF_begin_page_ext ; Start new page
PDF_begin_pattern ; Start pattern definition
PDF_begin_template ; Start template definition [deprecated]
PDF_begin_template_ext ; Start template definition
PDF_circle ; Draw a circle
PDF_clip ; Clip to current path
PDF_close ; Close pdf resource [deprecated]
PDF_closepath ; Close current path
PDF_closepath_fill_stroke ; Close, fill and stroke current path
PDF_closepath_stroke ; Close and stroke path
PDF_close_image ; Close image
PDF_close_pdi ; Close the input PDF document [deprecated]
PDF_close_pdi_page ; Close the page handle
PDF_concat ; Concatenate a matrix to the CTM
PDF_continue_text ; Output text in next line
PDF_create_3dview ; Create 3D view
PDF_create_action ; Create action for objects or events
PDF_create_annotation ; Create rectangular annotation
PDF_create_bookmark ; Create bookmark
PDF_create_field ; Create form field
PDF_create_fieldgroup ; Create form field group
PDF_create_gstate ; Create graphics state object
PDF_create_pvf ; Create PDFlib virtual file
PDF_create_textflow ; Create textflow object
PDF_curveto ; Draw Bezier curve
PDF_define_layer ; Create layer definition
PDF_delete ; Delete PDFlib object
PDF_delete_pvf ; Delete PDFlib virtual file
PDF_delete_table ; Delete table object
PDF_delete_textflow ; Delete textflow object
PDF_encoding_set_char ; Add glyph name and/or Unicode value
PDF_endpath ; End current path
PDF_end_document ; Close PDF file
PDF_end_font ; Terminate Type 3 font definition
PDF_end_glyph ; Terminate glyph definition for Type 3 font
PDF_end_item ; Close structure element or other content item
PDF_end_layer ; Deactivate all active layers
PDF_end_page ; Finish page
PDF_end_page_ext ; Finish page
PDF_end_pattern ; Finish pattern
PDF_end_template ; Finish template
PDF_fill ; Fill current path
PDF_fill_imageblock ; Fill image block with variable data
PDF_fill_pdfblock ; Fill PDF block with variable data
PDF_fill_stroke ; Fill and stroke path
PDF_fill_textblock ; Fill text block with variable data
PDF_findfont ; Prepare font for later use [deprecated]
PDF_fit_image ; Place image or template
PDF_fit_pdi_page ; Place imported PDF page
PDF_fit_table ; Place table on page
PDF_fit_textflow ; Format textflow in rectangular area
PDF_fit_textline ; Place single line of text
PDF_get_apiname ; Get name of unsuccessfull API function
PDF_get_buffer ; Get PDF output buffer
PDF_get_errmsg ; Get error text
PDF_get_errnum ; Get error number
PDF_get_font ; Get font [deprecated]
PDF_get_fontname ; Get font name [deprecated]
PDF_get_fontsize ; Font handling [deprecated]
PDF_get_image_height ; Get image height [deprecated]
PDF_get_image_width ; Get image width [deprecated]
PDF_get_majorversion ; Get major version number [deprecated]
PDF_get_minorversion ; Get minor version number [deprecated]
PDF_get_parameter ; Get string parameter
PDF_get_pdi_parameter ; Get PDI string parameter [deprecated]
PDF_get_pdi_value ; Get PDI numerical parameter [deprecated]
PDF_get_value ; Get numerical parameter
PDF_info_font ; Query detailed information about a loaded font
PDF_info_matchbox ; Query matchbox information
PDF_info_table ; Retrieve table information
PDF_info_textflow ; Query textflow state
PDF_info_textline ; Perform textline formatting and query metrics
PDF_initgraphics ; Reset graphic state
PDF_lineto ; Draw a line
PDF_load_3ddata ; Load 3D model
PDF_load_font ; Search and prepare font
PDF_load_iccprofile ; Search and prepare ICC profile
PDF_load_image ; Open image file
PDF_makespotcolor ; Make spot color
PDF_moveto ; Set current point
PDF_new ; Create PDFlib object
PDF_open_ccitt ; Open raw CCITT image [deprecated]
PDF_open_file ; Create PDF file [deprecated]
PDF_open_gif ; Open GIF image [deprecated]
PDF_open_image ; Use image data [deprecated]
PDF_open_image_file ; Read image from file [deprecated]
PDF_open_jpeg ; Open JPEG image [deprecated]
PDF_open_memory_image ; Open image created with PHP's image functions [not supported]
PDF_open_pdi ; Open PDF file [deprecated]
PDF_open_pdi_document ; Prepare a pdi document
PDF_open_pdi_page ; Prepare a page
PDF_open_tiff ; Open TIFF image [deprecated]
PDF_pcos_get_number ; Get value of pCOS path with type number or boolean
PDF_pcos_get_stream ; Get contents of pCOS path with type stream, fstream, or string
PDF_pcos_get_string ; Get value of pCOS path with type name, string, or boolean
PDF_place_image ; Place image on the page [deprecated]
PDF_place_pdi_page ; Place PDF page [deprecated]
PDF_process_pdi ; Process imported PDF document
PDF_rect ; Draw rectangle
PDF_restore ; Restore graphics state
PDF_resume_page ; Resume page
PDF_rotate ; Rotate coordinate system
PDF_save ; Save graphics state
PDF_scale ; Scale coordinate system
PDF_setcolor ; Set fill and stroke color
PDF_setdash ; Set simple dash pattern
PDF_setdashpattern ; Set dash pattern
PDF_setflat ; Set flatness
PDF_setfont ; Set font
PDF_setgray ; Set color to gray [deprecated]
PDF_setgray_fill ; Set fill color to gray [deprecated]
PDF_setgray_stroke ; Set stroke color to gray [deprecated]
PDF_setlinecap ; Set linecap parameter
PDF_setlinejoin ; Set linejoin parameter
PDF_setlinewidth ; Set line width
PDF_setmatrix ; Set current transformation matrix
PDF_setmiterlimit ; Set miter limit
PDF_setpolydash ; Set complicated dash pattern [deprecated]
PDF_setrgbcolor ; Set fill and stroke rgb color values [deprecated]
PDF_setrgbcolor_fill ; Set fill rgb color values [deprecated]
PDF_setrgbcolor_stroke ; Set stroke rgb color values [deprecated]
PDF_set_border_color ; Set border color of annotations [deprecated]
PDF_set_border_dash ; Set border dash style of annotations [deprecated]
PDF_set_border_style ; Set border style of annotations [deprecated]
PDF_set_char_spacing ; Set character spacing [deprecated]
PDF_set_duration ; Set duration between pages [deprecated]
PDF_set_gstate ; Activate graphics state object
PDF_set_horiz_scaling ; Set horizontal text scaling [deprecated]
PDF_set_info ; Fill document info field
PDF_set_info_author ; Fill the author document info field [deprecated]
PDF_set_info_creator ; Fill the creator document info field [deprecated]
PDF_set_info_keywords ; Fill the keywords document info field [deprecated]
PDF_set_info_subject ; Fill the subject document info field [deprecated]
PDF_set_info_title ; Fill the title document info field [deprecated]
PDF_set_layer_dependency ; Define relationships among layers
PDF_set_leading ; Set distance between text lines [deprecated]
PDF_set_parameter ; Set string parameter
PDF_set_text_matrix ; Set text matrix [deprecated]
PDF_set_text_pos ; Set text position
PDF_set_text_rendering ; Determine text rendering [deprecated]
PDF_set_text_rise ; Set text rise [deprecated]
PDF_set_value ; Set numerical parameter
PDF_set_word_spacing ; Set spacing between words [deprecated]
PDF_shading ; Define blend
PDF_shading_pattern ; Define shading pattern
PDF_shfill ; Fill area with shading
PDF_show ; Output text at current position
PDF_show_boxed ; Output text in a box [deprecated]
PDF_show_xy ; Output text at given position
PDF_skew ; Skew the coordinate system
PDF_stringwidth ; Return width of text
PDF_stroke ; Stroke path
PDF_suspend_page ; Suspend page
PDF_translate ; Set origin of coordinate system
PDF_utf8_to_utf16 ; Convert string from UTF-8 to UTF-16
PDF_utf16_to_utf8 ; Convert string from UTF-16 to UTF-8
PDF_utf32_to_utf16 ; Convert string from UTF-32 to UTF-16
PDO::beginTransaction ; 启动一个事务
PDO::commit ; 提交一个事务
PDO::cubrid_schema ; Get the requested schema information
PDO::errorCode ; Fetch the SQLSTATE associated with the last operation on the database handle
PDO::errorInfo ; Fetch extended error information associated with the last operation on the database handle
PDO::exec ; 执行一条 SQL 语句，并返回受影响的行数
PDO::getAttribute ; 取回一个数据库连接的属性
PDO::getAvailableDrivers ; 返回一个可用驱动的数组
PDO::inTransaction ; 检查是否在一个事务内
PDO::lastInsertId ; 返回最后插入行的ID或序列值
PDO::pgsqlLOBCreate ; Creates a new large object
PDO::pgsqlLOBOpen ; Opens an existing large object stream
PDO::pgsqlLOBUnlink ; Deletes the large object
PDO::prepare ; Prepares a statement for execution and returns a statement object
PDO::query ; Executes an SQL statement, returning a result set as a PDOStatement object
PDO::quote ; Quotes a string for use in a query.
PDO::rollBack ; 回滚一个事务
PDO::setAttribute ; 设置属性
PDO::sqliteCreateAggregate ; Registers an aggregating User Defined Function for use in SQL statements
PDO::sqliteCreateFunction ; Registers a User Defined Function for use in SQL statements
PDO::__construct ; 创建一个表示数据库连接的 PDO 实例
PDOStatement::bindColumn ; 绑定一列到一个 PHP 变量
PDOStatement::bindParam ; 绑定一个参数到指定的变量名
PDOStatement::bindValue ; 把一个值绑定到一个参数
PDOStatement::closeCursor ; 关闭游标，使语句能再次被执行。
PDOStatement::columnCount ; 返回结果集中的列数
PDOStatement::debugDumpParams ; 打印一条 SQL 预处理命令
PDOStatement::errorCode ; 获取跟上一次语句句柄操作相关的 SQLSTATE
PDOStatement::errorInfo ; 获取跟上一次语句句柄操作相关的扩展错误信息
PDOStatement::execute ; 执行一条预处理语句
PDOStatement::fetch ; 从结果集中获取下一行
PDOStatement::fetchAll ; 返回一个包含结果集中所有行的数组
PDOStatement::fetchColumn ; 从结果集中的下一行返回单独的一列。
PDOStatement::fetchObject ; 获取下一行并作为一个对象返回。
PDOStatement::getAttribute ; 检索一个语句属性
PDOStatement::getColumnMeta ; 返回结果集中一列的元数据
PDOStatement::nextRowset ; 在一个多行集语句句柄中推进到下一个行集
PDOStatement::rowCount ; 返回受上一个 SQL 语句影响的行数
PDOStatement::setAttribute ; 设置一个语句属性
PDOStatement::setFetchMode ; 为语句设置默认的获取模式。
PDO_4D DSN ; Connecting to 4D SQL server
PDO_CUBRID DSN ; Connecting to CUBRID databases
PDO_DBLIB DSN ; Connecting to Microsoft SQL Server and Sybase databases
PDO_FIREBIRD DSN ; Connecting to Firebird and Interbase databases
PDO_IBM DSN ; Connecting to IBM databases
PDO_INFORMIX DSN ; Connecting to Informix databases
PDO_MYSQL DSN ; Connecting to MySQL databases
PDO_OCI DSN ; Connecting to Oracle databases
PDO_ODBC DSN ; Connecting to ODBC or DB2 databases
PDO_PGSQL DSN ; Connecting to PostgreSQL databases
PDO_SQLITE DSN ; Connecting to SQLite databases
PDO_SQLSRV DSN ; Connecting to MS SQL Server and SQL Azure databases
pfsockopen ; Open persistent Internet or Unix domain socket connection
pg_affected_rows ; 返回受影响的记录数目
pg_cancel_query ; 取消异步查询
pg_client_encoding ; 取得客户端编码方式
pg_close ; 关闭一个 PostgreSQL 连接
pg_connect ; 打开一个 PostgreSQL 连接
pg_connection_busy ; 获知连接是否为忙
pg_connection_reset ; 重置连接（再次连接）
pg_connection_status ; 获得连接状态
pg_convert ; 将关联的数组值转换为适合 SQL 语句的格式。
pg_copy_from ; 根据数组将记录插入表中
pg_copy_to ; 将一个表拷贝到数组中
pg_dbname ; 获得数据库名
pg_delete ; 删除记录
pg_end_copy ; 与 PostgreSQL 后端同步
pg_escape_bytea ; 转义 bytea 类型的二进制数据
pg_escape_identifier ; Escape a identifier for insertion into a text field
pg_escape_literal ; Escape a literal for insertion into a text field
pg_escape_string ; 转义 text/char 类型的字符串
pg_execute ; Sends a request to execute a prepared statement with given parameters, and waits for the result.
pg_fetch_all ; 从结果中提取所有行作为一个数组
pg_fetch_all_columns ; Fetches all rows in a particular result column as an array
pg_fetch_array ; 提取一行作为数组
pg_fetch_assoc ; 提取一行作为关联数组
pg_fetch_object ; 提取一行作为对象
pg_fetch_result ; 从结果资源中返回值
pg_fetch_row ; 提取一行作为枚举数组
pg_field_is_null ; 测试字段是否为 NULL
pg_field_name ; 返回字段的名字
pg_field_num ; 返回字段的编号
pg_field_prtlen ; 返回打印出来的长度
pg_field_size ; 返回指定字段占用内部存储空间的大小
pg_field_table ; Returns the name or oid of the tables field
pg_field_type ; 返回相应字段的类型名称
pg_field_type_oid ; Returns the type ID (OID) for the corresponding field number
pg_free_result ; 释放查询结果占用的内存
pg_get_notify ; Ping 数据库连接
pg_get_pid ; Ping 数据库连接
pg_get_result ; 取得异步查询结果
pg_host ; 返回和某连接关联的主机名
pg_insert ; 将数组插入到表中
pg_last_error ; 得到某连接的最后一条错误信息
pg_last_notice ; 返回 PostgreSQL 服务器最新一条公告信息
pg_last_oid ; 返回上一个对象的 oid
pg_lo_close ; 关闭一个大型对象
pg_lo_create ; 新建一个大型对象
pg_lo_export ; 将大型对象导出到文件
pg_lo_import ; 将文件导入为大型对象
pg_lo_open ; 打开一个大型对象
pg_lo_read ; 从大型对象中读入数据
pg_lo_read_all ; 读入整个大型对象并直接发送给浏览器
pg_lo_seek ; 移动大型对象中的指针
pg_lo_tell ; 返回大型对象的当前指针位置
pg_lo_unlink ; 删除一个大型对象
pg_lo_write ; 向大型对象写入数据
pg_meta_data ; 获得表的元数据
pg_num_fields ; 返回字段的数目
pg_num_rows ; 返回行的数目
pg_options ; 获得和连接有关的选项
pg_parameter_status ; Looks up a current parameter setting of the server.
pg_pconnect ; 打开一个持久的 PostgreSQL 连接
pg_ping ; Ping 数据库连接
pg_port ; 返回该连接的端口号
pg_put_line ; 向 PostgreSQL 后端发送以 NULL 结尾的字符串
pg_query ; 执行查询
pg_query_params ; Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text.
pg_result_error ; 获得查询结果的错误信息
pg_result_error_field ; Returns an individual field of an error report.
pg_result_seek ; 在结果资源中设定内部行偏移量
pg_result_status ; 获得查询结果的状态
pg_select ; 选择记录
pg_send_execute ; Sends a request to execute a prepared statement with given parameters, without waiting for the result(s).
pg_send_prepare ; Sends a request to create a prepared statement with the given parameters, without waiting for completion.
pg_send_query ; 发送异步查询
pg_send_query_params ; Submits a command and separate parameters to the server without waiting for the result(s).
pg_set_client_encoding ; 设定客户端编码
pg_trace ; 启动一个 PostgreSQL 连接的追踪功能
pg_transaction_status ; Returns the current in-transaction status of the server.
pg_tty ; 返回该连接的 tty 号
pg_unescape_bytea ; 取消 bytea 类型中的字符串转义
pg_untrace ; 关闭 PostgreSQL 连接的追踪功能
pg_update ; 更新表
pg_version ; Returns an array with client, protocol and server version (when available)
phar:// ; PHP 归档
Phar::addEmptyDir ; Add an empty directory to the phar archive
Phar::addFile ; Add a file from the filesystem to the phar archive
Phar::addFromString ; Add a file from the filesystem to the phar archive
Phar::apiVersion ; Returns the api version
Phar::buildFromDirectory ; Construct a phar archive from the files within a directory.
Phar::buildFromIterator ; Construct a phar archive from an iterator.
Phar::canCompress ; Returns whether phar extension supports compression using either zlib or bzip2
Phar::canWrite ; Returns whether phar extension supports writing and creating phars
Phar::compress ; Compresses the entire Phar archive using Gzip or Bzip2 compression
Phar::compressAllFilesBZIP2 ; Compresses all files in the current Phar archive using Bzip2 compression
Phar::compressAllFilesGZ ; Compresses all files in the current Phar archive using Gzip compression
Phar::compressFiles ; Compresses all files in the current Phar archive
Phar::convertToData ; Convert a phar archive to a non-executable tar or zip file
Phar::convertToExecutable ; Convert a phar archive to another executable phar archive file format
Phar::copy ; Copy a file internal to the phar archive to another new file within the phar
Phar::count ; Returns the number of entries (files) in the Phar archive
Phar::createDefaultStub ; Create a phar-file format specific stub
Phar::decompress ; Decompresses the entire Phar archive
Phar::decompressFiles ; Decompresses all files in the current Phar archive
Phar::delete ; Delete a file within a phar archive
Phar::delMetadata ; Deletes the global metadata of the phar
Phar::extractTo ; Extract the contents of a phar archive to a directory
Phar::getMetadata ; Returns phar archive meta-data
Phar::getModified ; Return whether phar was modified
Phar::getSignature ; Return MD5/SHA1/SHA256/SHA512/OpenSSL signature of a Phar archive
Phar::getStub ; Return the PHP loader or bootstrap stub of a Phar archive
Phar::getSupportedCompression ; Return array of supported compression algorithms
Phar::getSupportedSignatures ; Return array of supported signature types
Phar::getVersion ; Return version info of Phar archive
Phar::hasMetadata ; Returns whether phar has global meta-data
Phar::interceptFileFuncs ; instructs phar to intercept fopen, file_get_contents, opendir, and all of the stat-related functions
Phar::isBuffering ; Used to determine whether Phar write operations are being buffered, or are flushing directly to disk
Phar::isCompressed ; Returns Phar::GZ or PHAR::BZ2 if the entire phar archive is compressed (.tar.gz/tar.bz and so on)
Phar::isFileFormat ; Returns true if the phar archive is based on the tar/phar/zip file format depending on the parameter
Phar::isValidPharFilename ; Returns whether the given filename is a valid phar filename
Phar::isWritable ; Returns true if the phar archive can be modified
Phar::loadPhar ; Loads any phar archive with an alias
Phar::mapPhar ; Reads the currently executed file (a phar) and registers its manifest
Phar::mount ; Mount an external path or file to a virtual location within the phar archive
Phar::mungServer ; Defines a list of up to 4 $_SERVER variables that should be modified for execution
Phar::offsetExists ; determines whether a file exists in the phar
Phar::offsetGet ; Gets a PharFileInfo object for a specific file
Phar::offsetSet ; set the contents of an internal file to those of an external file
Phar::offsetUnset ; remove a file from a phar
Phar::running ; Returns the full path on disk or full phar URL to the currently executing Phar archive
Phar::setAlias ; Set the alias for the Phar archive
Phar::setDefaultStub ; Used to set the PHP loader or bootstrap stub of a Phar archive to the default loader
Phar::setMetadata ; Sets phar archive meta-data
Phar::setSignatureAlgorithm ; set the signature algorithm for a phar and apply it.  The
Phar::setStub ; Used to set the PHP loader or bootstrap stub of a Phar archive
Phar::startBuffering ; Start buffering Phar write operations, do not modify the Phar object on disk
Phar::stopBuffering ; Stop buffering write requests to the Phar archive, and save changes to disk
Phar::uncompressAllFiles ; Uncompresses all files in the current Phar archive
Phar::unlinkArchive ; Completely remove a phar archive from disk and from memory
Phar::webPhar ; mapPhar for web-based phars. front controller for web applications
Phar::__construct ; Construct a Phar archive object
Phar context options ; Phar context option listing
PharData::addEmptyDir ; Add an empty directory to the tar/zip archive
PharData::addFile ; Add a file from the filesystem to the tar/zip archive
PharData::addFromString ; Add a file from the filesystem to the tar/zip archive
PharData::buildFromDirectory ; Construct a tar/zip archive from the files within a directory.
PharData::buildFromIterator ; Construct a tar or zip archive from an iterator.
PharData::compress ; Compresses the entire tar/zip archive using Gzip or Bzip2 compression
PharData::compressFiles ; Compresses all files in the current tar/zip archive
PharData::convertToData ; Convert a phar archive to a non-executable tar or zip file
PharData::convertToExecutable ; Convert a non-executable tar/zip archive to an executable phar archive
PharData::copy ; Copy a file internal to the phar archive to another new file within the phar
PharData::decompress ; Decompresses the entire Phar archive
PharData::decompressFiles ; Decompresses all files in the current zip archive
PharData::delete ; Delete a file within a tar/zip archive
PharData::delMetadata ; Deletes the global metadata of a zip archive
PharData::extractTo ; Extract the contents of a tar/zip archive to a directory
PharData::isWritable ; Returns true if the tar/zip archive can be modified
PharData::offsetSet ; set the contents of a file within the tar/zip to those of an external file or string
PharData::offsetUnset ; remove a file from a tar/zip archive
PharData::setAlias ; dummy function (Phar::setAlias is not valid for PharData)
PharData::setDefaultStub ; dummy function (Phar::setDefaultStub is not valid for PharData)
PharData::setStub ; dummy function (Phar::setStub is not valid for PharData)
PharData::__construct ; Construct a non-executable tar or zip archive object
PharFileInfo::chmod ; Sets file-specific permission bits
PharFileInfo::compress ; Compresses the current Phar entry with either zlib or bzip2 compression
PharFileInfo::decompress ; Decompresses the current Phar entry within the phar
PharFileInfo::delMetadata ; Deletes the metadata of the entry
PharFileInfo::getCompressedSize ; Returns the actual size of the file (with compression) inside the Phar archive
PharFileInfo::getCRC32 ; Returns CRC32 code or throws an exception if CRC has not been verified
PharFileInfo::getMetadata ; Returns file-specific meta-data saved with a file
PharFileInfo::getPharFlags ; Returns the Phar file entry flags
PharFileInfo::hasMetadata ; Returns the metadata of the entry
PharFileInfo::isCompressed ; Returns whether the entry is compressed
PharFileInfo::isCompressedBZIP2 ; Returns whether the entry is compressed using bzip2
PharFileInfo::isCompressedGZ ; Returns whether the entry is compressed using gz
PharFileInfo::isCRCChecked ; Returns whether file entry has had its CRC verified
PharFileInfo::setCompressedBZIP2 ; Compresses the current Phar entry within the phar using Bzip2 compression
PharFileInfo::setCompressedGZ ; Compresses the current Phar entry within the phar using gz compression
PharFileInfo::setMetadata ; Sets file-specific meta-data saved with a file
PharFileInfo::setUncompressed ; Uncompresses the current Phar entry within the phar, if it is compressed
PharFileInfo::__construct ; Construct a Phar entry object
php:// ; 访问各个输入/输出流（I/O streams）
phpcredits ; 打印 PHP 贡献者名单
phpinfo ; 输出关于 PHP 配置的信息
phpversion ; 获取当前的PHP版本
php_check_syntax ; 检查PHP的语法（并执行）指定的文件
php_ini_loaded_file ; 取得已加载的 php.ini 文件的路径
php_ini_scanned_files ; 返回从额外 ini 目录里解析的 .ini 文件列表
php_logo_guid ; 获取 logo 的 guid
php_sapi_name ; 返回 web 服务器和 PHP 之间的接口类型
php_strip_whitespace ; 返回删除注释和空格后的PHP源码
php_uname ; 返回运行 PHP 的系统的有关信息
php_user_filter::filter ; Called when applying the filter
php_user_filter::onClose ; Called when closing the filter
php_user_filter::onCreate ; Called when creating the filter
pi ; 得到圆周率值
png2wbmp ; 将 PNG 图像文件转换为 WBMP 图像文件
popen ; 打开进程文件指针
pos ; current 的别名
posix_access ; Determine accessibility of a file
posix_ctermid ; Get path name of controlling terminal
posix_errno ; 别名 posix_get_last_error
posix_getcwd ; Pathname of current directory
posix_getegid ; Return the effective group ID of the current process
posix_geteuid ; Return the effective user ID of the current process
posix_getgid ; Return the real group ID of the current process
posix_getgrgid ; Return info about a group by group id
posix_getgrnam ; Return info about a group by name
posix_getgroups ; Return the group set of the current process
posix_getlogin ; Return login name
posix_getpgid ; Get process group id for job control
posix_getpgrp ; Return the current process group identifier
posix_getpid ; Return the current process identifier
posix_getppid ; Return the parent process identifier
posix_getpwnam ; Return info about a user by username
posix_getpwuid ; Return info about a user by user id
posix_getrlimit ; Return info about system resource limits
posix_getsid ; Get the current sid of the process
posix_getuid ; Return the real user ID of the current process
posix_get_last_error ; Retrieve the error number set by the last posix function that failed
posix_initgroups ; Calculate the group access list
posix_isatty ; Determine if a file descriptor is an interactive terminal
posix_kill ; Send a signal to a process
posix_mkfifo ; Create a fifo special file (a named pipe)
posix_mknod ; Create a special or ordinary file (POSIX.1)
posix_setegid ; Set the effective GID of the current process
posix_seteuid ; Set the effective UID of the current process
posix_setgid ; Set the GID of the current process
posix_setpgid ; Set process group id for job control
posix_setsid ; Make the current process a session leader
posix_setuid ; Set the UID of the current process
posix_strerror ; Retrieve the system error message associated with the given errno
posix_times ; Get process times
posix_ttyname ; Determine terminal device name
posix_uname ; Get system name
pow ; 指数表达式
preg_filter ; 执行一个正则表达式搜索和替换
preg_grep ; 返回匹配模式的数组条目
preg_last_error ; 返回最后一个PCRE正则执行产生的错误代码
preg_match ; 执行一个正则表达式匹配
preg_match_all ; 执行一个全局正则表达式匹配
preg_quote ; 转义正则表达式字符
preg_replace ; 执行一个正则表达式的搜索和替换
preg_replace_callback ; 执行一个正则表达式搜索并且使用一个回调进行替换
preg_split ; 通过一个正则表达式分隔字符串
prev ; 将数组的内部指针倒回一位
print ; 输出字符串
printer_abort ; Deletes the printer's spool file
printer_close ; Close an open printer connection
printer_create_brush ; Create a new brush
printer_create_dc ; Create a new device context
printer_create_font ; Create a new font
printer_create_pen ; Create a new pen
printer_delete_brush ; Delete a brush
printer_delete_dc ; Delete a device context
printer_delete_font ; Delete a font
printer_delete_pen ; Delete a pen
printer_draw_bmp ; Draw a bmp
printer_draw_chord ; Draw a chord
printer_draw_elipse ; Draw an ellipse
printer_draw_line ; Draw a line
printer_draw_pie ; Draw a pie
printer_draw_rectangle ; Draw a rectangle
printer_draw_roundrect ; Draw a rectangle with rounded corners
printer_draw_text ; Draw text
printer_end_doc ; Close document
printer_end_page ; Close active page
printer_get_option ; Retrieve printer configuration data
printer_list ; Return an array of printers attached to the server
printer_logical_fontheight ; Get logical font height
printer_open ; Opens a connection to a printer
printer_select_brush ; Select a brush
printer_select_font ; Select a font
printer_select_pen ; Select a pen
printer_set_option ; Configure the printer connection
printer_start_doc ; Start a new document
printer_start_page ; Start a new page
printer_write ; Write data to the printer
printf ; 输出格式化字符串
print_r ; 打印关于变量的易于理解的信息。
proc_close ; Close a process opened by proc_open and return the exit code of that process
proc_get_status ; Get information about a process opened by proc_open
proc_nice ; Change the priority of the current process
proc_open ; Execute a command and open file pointers for input/output
proc_terminate ; Kills a process opened by proc_open
property_exists ; 检查对象或类是否具有该属性
pspell_add_to_personal ; Add the word to a personal wordlist
pspell_add_to_session ; Add the word to the wordlist in the current session
pspell_check ; Check a word
pspell_clear_session ; Clear the current session
pspell_config_create ; Create a config used to open a dictionary
pspell_config_data_dir ; location of language data files
pspell_config_dict_dir ; Location of the main word list
pspell_config_ignore ; Ignore words less than N characters long
pspell_config_mode ; Change the mode number of suggestions returned
pspell_config_personal ; Set a file that contains personal wordlist
pspell_config_repl ; Set a file that contains replacement pairs
pspell_config_runtogether ; Consider run-together words as valid compounds
pspell_new ; Load a new dictionary
pspell_new_config ; Load a new dictionary with settings based on a given config
pspell_new_personal ; Load a new dictionary with personal wordlist
pspell_save_wordlist ; Save the personal wordlist to a file
pspell_store_replacement ; Store a replacement pair for a word
pspell_suggest ; Suggest spellings of a word
ps_add_bookmark ; Add bookmark to current page
ps_add_launchlink ; Adds link which launches file
ps_add_locallink ; Adds link to a page in the same document
ps_add_note ; Adds note to current page
ps_add_pdflink ; Adds link to a page in a second pdf document
ps_add_weblink ; Adds link to a web location
ps_arc ; Draws an arc counterclockwise
ps_arcn ; Draws an arc clockwise
ps_begin_page ; Start a new page
ps_begin_pattern ; Start a new pattern
ps_begin_template ; Start a new template
ps_circle ; Draws a circle
ps_clip ; Clips drawing to current path
ps_close ; Closes a PostScript document
ps_closepath ; Closes path
ps_closepath_stroke ; Closes and strokes path
ps_close_image ; Closes image and frees memory
ps_continue_text ; Continue text in next line
ps_curveto ; Draws a curve
ps_delete ; Deletes all resources of a PostScript document
ps_end_page ; End a page
ps_end_pattern ; End a pattern
ps_end_template ; End a template
ps_fill ; Fills the current path
ps_fill_stroke ; Fills and strokes the current path
ps_findfont ; Loads a font
ps_get_buffer ; Fetches the full buffer containig the generated PS data
ps_get_parameter ; Gets certain parameters
ps_get_value ; Gets certain values
ps_hyphenate ; Hyphenates a word
ps_include_file ; Reads an external file with raw PostScript code
ps_lineto ; Draws a line
ps_makespotcolor ; Create spot color
ps_moveto ; Sets current point
ps_new ; Creates a new PostScript document object
ps_open_file ; Opens a file for output
ps_open_image ; Reads an image for later placement
ps_open_image_file ; Opens image from file
ps_open_memory_image ; Takes an GD image and returns an image for placement in a PS document
ps_place_image ; Places image on the page
ps_rect ; Draws a rectangle
ps_restore ; Restore previously save context
ps_rotate ; Sets rotation factor
ps_save ; Save current context
ps_scale ; Sets scaling factor
ps_setcolor ; Sets current color
ps_setdash ; Sets appearance of a dashed line
ps_setflat ; Sets flatness
ps_setfont ; Sets font to use for following output
ps_setgray ; Sets gray value
ps_setlinecap ; Sets appearance of line ends
ps_setlinejoin ; Sets how contected lines are joined
ps_setlinewidth ; Sets width of a line
ps_setmiterlimit ; Sets the miter limit
ps_setoverprintmode ; Sets overprint mode
ps_setpolydash ; Sets appearance of a dashed line
ps_set_border_color ; Sets color of border for annotations
ps_set_border_dash ; Sets length of dashes for border of annotations
ps_set_border_style ; Sets border style of annotations
ps_set_info ; Sets information fields of document
ps_set_parameter ; Sets certain parameters
ps_set_text_pos ; Sets position for text output
ps_set_value ; Sets certain values
ps_shading ; Creates a shading for later use
ps_shading_pattern ; Creates a pattern based on a shading
ps_shfill ; Fills an area with a shading
ps_show ; Output text
ps_show2 ; Output a text at current position
ps_show_boxed ; Output text in a box
ps_show_xy ; Output text at given position
ps_show_xy2 ; Output text at position
ps_stringwidth ; Gets width of a string
ps_string_geometry ; Gets geometry of a string
ps_stroke ; Draws the current path
ps_symbol ; Output a glyph
ps_symbol_name ; Gets name of a glyph
ps_symbol_width ; Gets width of a glyph
ps_translate ; Sets translation
putenv ; 设置环境变量的值
px_close ; Closes a paradox database
px_create_fp ; Create a new paradox database
px_date2string ; Converts a date into a string.
px_delete ; Deletes resource of paradox database
px_delete_record ; Deletes record from paradox database
px_get_field ; Returns the specification of a single field
px_get_info ; Return lots of information about a paradox file
px_get_parameter ; Gets a parameter
px_get_record ; Returns record of paradox database
px_get_schema ; Returns the database schema
px_get_value ; Gets a value
px_insert_record ; Inserts record into paradox database
px_new ; Create a new paradox object
px_numfields ; Returns number of fields in a database
px_numrecords ; Returns number of records in a database
px_open_fp ; Open paradox database
px_put_record ; Stores record into paradox database
px_retrieve_record ; Returns record of paradox database
px_set_blob_file ; Sets the file where blobs are read from
px_set_parameter ; Sets a parameter
px_set_tablename ; Sets the name of a table (deprecated)
px_set_targetencoding ; Sets the encoding for character fields (deprecated)
px_set_value ; Sets a value
px_timestamp2string ; Converts the timestamp into a string.
px_update_record ; Updates record in paradox database
qdom_error ; Returns the error string from the last QDOM operation or FALSE if no errors occurred
qdom_tree ; Creates a tree of an XML string
QuickHashIntHash::add ; This method adds a new entry to the hash
QuickHashIntHash::delete ; This method deletes am entry from the hash
QuickHashIntHash::exists ; This method checks whether a key is part of the hash
QuickHashIntHash::get ; This method retrieves a value from the hash by its key
QuickHashIntHash::getSize ; Returns the number of elements in the hash
QuickHashIntHash::loadFromFile ; This factory method creates a hash from a file
QuickHashIntHash::loadFromString ; This factory method creates a hash from a string
QuickHashIntHash::saveToFile ; This method stores an in-memory hash to disk
QuickHashIntHash::saveToString ; This method returns a serialized version of the hash
QuickHashIntHash::update ; This method updates an entry in the hash with a new value
QuickHashIntHash::__construct ; Creates a new QuickHashIntHash object
QuickHashIntSet::add ; This method adds a new entry to the set
QuickHashIntSet::delete ; This method deletes an entry from the set
QuickHashIntSet::exists ; This method checks whether a key is part of the set
QuickHashIntSet::getSize ; Returns the number of elements in the set
QuickHashIntSet::loadFromFile ; This factory method creates a set from a file
QuickHashIntSet::loadFromString ; This factory method creates a set from a string
QuickHashIntSet::saveToFile ; This method stores an in-memory set to disk
QuickHashIntSet::saveToString ; This method returns a serialized version of the set
QuickHashIntSet::__construct ; Creates a new QuickHashIntSet object
QuickHashIntStringHash::add ; This method adds a new entry to the hash
QuickHashIntStringHash::delete ; This method deletes am entry from the hash
QuickHashIntStringHash::exists ; This method checks whether a key is part of the hash
QuickHashIntStringHash::get ; This method retrieves a value from the hash by its key
QuickHashIntStringHash::getSize ; Returns the number of elements in the hash
QuickHashIntStringHash::loadFromFile ; This factory method creates a hash from a file
QuickHashIntStringHash::loadFromString ; This factory method creates a hash from a string
QuickHashIntStringHash::saveToFile ; This method stores an in-memory hash to disk
QuickHashIntStringHash::saveToString ; This method returns a serialized version of the hash
QuickHashIntStringHash::update ; This method updates an entry in the hash with a new value
QuickHashIntStringHash::__construct ; Creates a new QuickHashIntStringHash object
QuickHashStringIntHash::add ; This method adds a new entry to the hash
QuickHashStringIntHash::delete ; This method deletes am entry from the hash
QuickHashStringIntHash::exists ; This method checks whether a key is part of the hash
QuickHashStringIntHash::get ; This method retrieves a value from the hash by its key
QuickHashStringIntHash::getSize ; Returns the number of elements in the hash
QuickHashStringIntHash::loadFromFile ; This factory method creates a hash from a file
QuickHashStringIntHash::loadFromString ; This factory method creates a hash from a string
QuickHashStringIntHash::saveToFile ; This method stores an in-memory hash to disk
QuickHashStringIntHash::saveToString ; This method returns a serialized version of the hash
QuickHashStringIntHash::update ; This method updates an entry in the hash with a new value
QuickHashStringIntHash::__construct ; Creates a new QuickHashStringIntHash object
quoted_printable_decode ; Convert a quoted-printable string to an 8 bit string
quoted_printable_encode ; Convert a 8 bit string to a quoted-printable string
quotemeta ; Quote meta characters
rad2deg ; 将弧度数转换为相应的角度数
radius_acct_open ; Creates a Radius handle for accounting
radius_add_server ; Adds a server
radius_auth_open ; Creates a Radius handle for authentication
radius_close ; Frees all ressources
radius_config ; Causes the library to read the given configuration file
radius_create_request ; Create accounting or authentication request
radius_cvt_addr ; Converts raw data to IP-Address
radius_cvt_int ; Converts raw data to integer
radius_cvt_string ; Converts raw data to string
radius_demangle ; Demangles data
radius_demangle_mppe_key ; Derives mppe-keys from mangled data
radius_get_attr ; Extracts an attribute
radius_get_vendor_attr ; Extracts a vendor specific attribute
radius_put_addr ; Attaches an IP-Address attribute
radius_put_attr ; Attaches a binary attribute
radius_put_int ; Attaches an integer attribute
radius_put_string ; Attaches a string attribute
radius_put_vendor_addr ; Attaches a vendor specific IP-Address attribute
radius_put_vendor_attr ; Attaches a vendor specific binary attribute
radius_put_vendor_int ; Attaches a vendor specific integer attribute
radius_put_vendor_string ; Attaches a vendor specific string attribute
radius_request_authenticator ; Returns the request authenticator
radius_send_request ; Sends the request and waites for a reply
radius_server_secret ; Returns the shared secret
radius_strerror ; Returns an error message
rand ; 产生一个随机整数
range ; 建立一个包含指定范围单元的数组
rar:// ; RAR
RarArchive::close ; Close RAR archive and free all resources
RarArchive::getComment ; Get comment text from the RAR archive
RarArchive::getEntries ; Get full list of entries from the RAR archive
RarArchive::getEntry ; Get entry object from the RAR archive
RarArchive::isBroken ; Test whether an archive is broken (incomplete)
RarArchive::isSolid ; Check whether the RAR archive is solid
RarArchive::open ; Open RAR archive
RarArchive::setAllowBroken ; Whether opening broken archives is allowed
RarArchive::__toString ; Get text representation
RarEntry::extract ; Extract entry from the archive
RarEntry::getAttr ; Get attributes of the entry
RarEntry::getCrc ; Get CRC of the entry
RarEntry::getFileTime ; Get entry last modification time
RarEntry::getHostOs ; Get entry host OS
RarEntry::getMethod ; Get pack method of the entry
RarEntry::getName ; Get name of the entry
RarEntry::getPackedSize ; Get packed size of the entry
RarEntry::getStream ; Get file handler for entry
RarEntry::getUnpackedSize ; Get unpacked size of the entry
RarEntry::getVersion ; Get minimum version of RAR program required to unpack the entry
RarEntry::isDirectory ; Test whether an entry represents a directory
RarEntry::isEncrypted ; Test whether an entry is encrypted
RarEntry::__toString ; Get text representation of entry
RarException::isUsingExceptions ; Check whether error handling with exceptions is in use
RarException::setUsingExceptions ; Activate and deactivate error handling with exceptions
rar_wrapper_cache_stats ; Cache hits and misses for the URL wrapper
rawurldecode ; 对已编码的 URL 字符串进行解码
rawurlencode ; 按照 RFC 1738 对 URL 进行编码
readdir ; 从目录句柄中读取条目
readfile ; 输出一个文件
readgzfile ; Output a gz-file
readline ; Reads a line
readline_add_history ; Adds a line to the history
readline_callback_handler_install ; Initializes the readline callback interface and terminal, prints the prompt and returns immediately
readline_callback_handler_remove ; Removes a previously installed callback handler and restores terminal settings
readline_callback_read_char ; Reads a character and informs the readline callback interface when a line is received
readline_clear_history ; Clears the history
readline_completion_function ; Registers a completion function
readline_info ; Gets/sets various internal readline variables
readline_list_history ; Lists the history
readline_on_new_line ; Inform readline that the cursor has moved to a new line
readline_read_history ; Reads the history
readline_redisplay ; Redraws the display
readline_write_history ; Writes the history
readlink ; 返回符号连接指向的目标
read_exif_data ; 别名 exif_read_data
realpath ; 返回规范化的绝对路径名
realpath_cache_get ; Get realpath cache entries
realpath_cache_size ; Get realpath cache size
recode ; 别名 recode_string
recode_file ; Recode from file to file according to recode request
recode_string ; Recode a string according to a recode request
RecursiveArrayIterator::getChildren ; Returns an iterator for the current entry if it is an array or an object.
RecursiveArrayIterator::hasChildren ; Returns whether current entry is an array or an object.
RecursiveCachingIterator::getChildren ; Return the inner iterator's children as a RecursiveCachingIterator
RecursiveCachingIterator::hasChildren ; Check whether the current element of the inner iterator has children
RecursiveCachingIterator::__construct ; Construct
RecursiveCallbackFilterIterator::getChildren ; Return the inner iterator's children contained in a RecursiveCallbackFilterIterator
RecursiveCallbackFilterIterator::hasChildren ; Check whether the inner iterator's current element has children
RecursiveCallbackFilterIterator::__construct ; Create a RecursiveCallbackFilterIterator from a RecursiveIterator
RecursiveDirectoryIterator::getChildren ; Returns an iterator for the current entry if it is a directory
RecursiveDirectoryIterator::getSubPath ; Get sub path
RecursiveDirectoryIterator::getSubPathname ; Get sub path and name
RecursiveDirectoryIterator::hasChildren ; Returns whether current entry is a directory and not '.' or '..'
RecursiveDirectoryIterator::key ; Return path and filename of current dir entry
RecursiveDirectoryIterator::next ; Move to next entry
RecursiveDirectoryIterator::rewind ; Rewind dir back to the start
RecursiveDirectoryIterator::__construct ; Constructs a RecursiveDirectoryIterator
RecursiveFilterIterator::getChildren ; Return the inner iterator's children contained in a RecursiveFilterIterator
RecursiveFilterIterator::hasChildren ; Check whether the inner iterator's current element has children
RecursiveFilterIterator::__construct ; Create a RecursiveFilterIterator from a RecursiveIterator
RecursiveIterator::getChildren ; Returns an iterator for the current entry.
RecursiveIterator::hasChildren ; Returns if an iterator can be created fot the current entry.
RecursiveIteratorIterator::beginChildren ; Begin children
RecursiveIteratorIterator::beginIteration ; Begin Iteration
RecursiveIteratorIterator::callGetChildren ; Get children
RecursiveIteratorIterator::callHasChildren ; Has children
RecursiveIteratorIterator::current ; Access the current element value
RecursiveIteratorIterator::endChildren ; End children
RecursiveIteratorIterator::endIteration ; End Iteration
RecursiveIteratorIterator::getDepth ; Get the current depth of the recursive iteration
RecursiveIteratorIterator::getInnerIterator ; Get inner iterator
RecursiveIteratorIterator::getMaxDepth ; Get max depth
RecursiveIteratorIterator::getSubIterator ; The current active sub iterator
RecursiveIteratorIterator::key ; Access the current key
RecursiveIteratorIterator::next ; Move forward to the next element
RecursiveIteratorIterator::nextElement ; Next element
RecursiveIteratorIterator::rewind ; Rewind the iterator to the first element of the top level inner iterator
RecursiveIteratorIterator::setMaxDepth ; Set max depth
RecursiveIteratorIterator::valid ; Check whether the current position is valid
RecursiveIteratorIterator::__construct ; Construct a RecursiveIteratorIterator
RecursiveRegexIterator::getChildren ; Returns an iterator for the current entry.
RecursiveRegexIterator::hasChildren ; Returns whether an iterator can be obtained for the current entry.
RecursiveRegexIterator::__construct ; Creates a new RecursiveRegexIterator.
RecursiveTreeIterator::beginChildren ; Begin children
RecursiveTreeIterator::beginIteration ; Begin iteration
RecursiveTreeIterator::callGetChildren ; Get children
RecursiveTreeIterator::callHasChildren ; Has children
RecursiveTreeIterator::current ; Get current element
RecursiveTreeIterator::endChildren ; End children
RecursiveTreeIterator::endIteration ; End iteration
RecursiveTreeIterator::getEntry ; Get current entry
RecursiveTreeIterator::getPostfix ; Get the postfix
RecursiveTreeIterator::getPrefix ; Get the prefix
RecursiveTreeIterator::key ; Get the key of the current element
RecursiveTreeIterator::next ; Move to next element
RecursiveTreeIterator::nextElement ; Next element
RecursiveTreeIterator::rewind ; Rewind iterator
RecursiveTreeIterator::setPrefixPart ; Set a part of the prefix
RecursiveTreeIterator::valid ; Check validity
RecursiveTreeIterator::__construct ; Construct a RecursiveTreeIterator
Reflection::export ; Exports
Reflection::getModifierNames ; 获取修饰符的名称
ReflectionClass::export ; 导出一个类
ReflectionClass::getConstant ; 获取定义过的一个常量
ReflectionClass::getConstants ; 获取一组常量
ReflectionClass::getConstructor ; 获取类的构造函数
ReflectionClass::getDefaultProperties ; 获取默认属性
ReflectionClass::getDocComment ; 获取文档注释
ReflectionClass::getEndLine ; 获取最后一行的行数
ReflectionClass::getExtension ; 根据已定义的类获取所在扩展的 ReflectionExtension 对象
ReflectionClass::getExtensionName ; 获取定义的类所在的扩展的名称
ReflectionClass::getFileName ; 获取定义类的文件名
ReflectionClass::getInterfaceNames ; 获取接口（interface）名称
ReflectionClass::getInterfaces ; 获取接口
ReflectionClass::getMethod ; 获取一个类方法的 ReflectionMethod。
ReflectionClass::getMethods ; 获取方法的数组
ReflectionClass::getModifiers ; 获取修饰符
ReflectionClass::getName ; 获取类名
ReflectionClass::getNamespaceName ; 获取命名空间的名称
ReflectionClass::getParentClass ; 获取父类
ReflectionClass::getProperties ; 获取一组属性
ReflectionClass::getProperty ; 获取类的一个属性的 ReflectionProperty
ReflectionClass::getShortName ; 获取短名
ReflectionClass::getStartLine ; 获取起始行号
ReflectionClass::getStaticProperties ; 获取静态（static）属性
ReflectionClass::getStaticPropertyValue ; 获取静态（static）属性的值
ReflectionClass::getTraitAliases ; 返回 trait 别名的一个数组
ReflectionClass::getTraitNames ; 返回这个类所使用 traits 的名称的数组
ReflectionClass::getTraits ; 返回这个类所使用的 traits 数组
ReflectionClass::hasConstant ; 检查常量是否已经定义
ReflectionClass::hasMethod ; 检查方法是否已定义
ReflectionClass::hasProperty ; 检查属性是否已定义
ReflectionClass::implementsInterface ; 接口的实现
ReflectionClass::inNamespace ; 检查是否位于命名空间中
ReflectionClass::isAbstract ; 检查类是否是抽象类（abstract）
ReflectionClass::isCloneable ; 返回了一个类是否可复制
ReflectionClass::isFinal ; 检查类是否声明为 final
ReflectionClass::isInstance ; 检查类的实例
ReflectionClass::isInstantiable ; 检查类是否可实例化
ReflectionClass::isInterface ; 检查类是否是一个接口（interface）
ReflectionClass::isInternal ; 检查类是否由扩展或核心在内部定义
ReflectionClass::isIterateable ; 检查是否可迭代（iterateable）
ReflectionClass::isSubclassOf ; 检查是否为一个子类
ReflectionClass::isTrait ; 返回了是否为一个 trait
ReflectionClass::isUserDefined ; 检查是否由用户定义的
ReflectionClass::newInstance ; 从指定的参数创建一个新的类实例
ReflectionClass::newInstanceArgs ; 从给出的参数创建一个新的类实例。
ReflectionClass::newInstanceWithoutConstructor ; 创建一个新的类实例而不调用它的构造函数
ReflectionClass::setStaticPropertyValue ; 设置静态属性的值
ReflectionClass::__construct ; 构造一个 ReflectionClass 类
ReflectionClass::__toString ; 返回 ReflectionClass 对象字符串的表示形式。
ReflectionExtension::export ; Export
ReflectionExtension::getClasses ; Gets classes
ReflectionExtension::getClassNames ; Gets class names
ReflectionExtension::getConstants ; Gets constants
ReflectionExtension::getDependencies ; Gets dependencies
ReflectionExtension::getFunctions ; Gets extension functions
ReflectionExtension::getINIEntries ; Gets extension ini entries
ReflectionExtension::getName ; Gets extension name
ReflectionExtension::getVersion ; Gets extension version
ReflectionExtension::info ; Print extension info
ReflectionExtension::isPersistent ; Returns whether this extension is persistent
ReflectionExtension::isTemporary ; Returns whether this extension is temporary
ReflectionExtension::__clone ; Clones
ReflectionExtension::__construct ; Constructs a ReflectionExtension
ReflectionExtension::__toString ; To string
ReflectionFunction::export ; Exports function
ReflectionFunction::getClosure ; Returns a dynamically created closure for the function
ReflectionFunction::invoke ; Invokes function
ReflectionFunction::invokeArgs ; Invokes function args
ReflectionFunction::isDisabled ; Checks if function is disabled
ReflectionFunction::__construct ; Constructs a ReflectionFunction object
ReflectionFunction::__toString ; To string
ReflectionFunctionAbstract::getClosureThis ; Returns this pointer bound to closure
ReflectionFunctionAbstract::getDocComment ; Gets doc comment
ReflectionFunctionAbstract::getEndLine ; Gets end line number
ReflectionFunctionAbstract::getExtension ; Gets extension info
ReflectionFunctionAbstract::getExtensionName ; Gets extension name
ReflectionFunctionAbstract::getFileName ; Gets file name
ReflectionFunctionAbstract::getName ; Gets function name
ReflectionFunctionAbstract::getNamespaceName ; Gets namespace name
ReflectionFunctionAbstract::getNumberOfParameters ; Gets number of parameters
ReflectionFunctionAbstract::getNumberOfRequiredParameters ; Gets number of required parameters
ReflectionFunctionAbstract::getParameters ; Gets parameters
ReflectionFunctionAbstract::getShortName ; Gets function short name
ReflectionFunctionAbstract::getStartLine ; Gets starting line number
ReflectionFunctionAbstract::getStaticVariables ; Gets static variables
ReflectionFunctionAbstract::inNamespace ; Checks if function in namespace
ReflectionFunctionAbstract::isClosure ; Checks if closure
ReflectionFunctionAbstract::isDeprecated ; Checks if deprecated
ReflectionFunctionAbstract::isInternal ; Checks if is internal
ReflectionFunctionAbstract::isUserDefined ; Checks if user defined
ReflectionFunctionAbstract::returnsReference ; Checks if returns reference
ReflectionFunctionAbstract::__clone ; Clones function
ReflectionFunctionAbstract::__toString ; To string
ReflectionMethod::export ; Export a reflection method.
ReflectionMethod::getClosure ; Returns a dynamically created closure for the method
ReflectionMethod::getDeclaringClass ; Gets declaring class for the reflected method.
ReflectionMethod::getModifiers ; Gets the method modifiers
ReflectionMethod::getPrototype ; Gets the method prototype (if there is one).
ReflectionMethod::invoke ; Invoke
ReflectionMethod::invokeArgs ; Invoke args
ReflectionMethod::isAbstract ; Checks if method is abstract
ReflectionMethod::isConstructor ; Checks if method is a constructor
ReflectionMethod::isDestructor ; Checks if method is a destructor
ReflectionMethod::isFinal ; Checks if method is final
ReflectionMethod::isPrivate ; Checks if method is private
ReflectionMethod::isProtected ; Checks if method is protected
ReflectionMethod::isPublic ; Checks if method is public
ReflectionMethod::isStatic ; Checks if method is static
ReflectionMethod::setAccessible ; Set method accessibility
ReflectionMethod::__construct ; Constructs a ReflectionMethod
ReflectionMethod::__toString ; Returns the string representation of the Reflection method object.
ReflectionObject::export ; Export
ReflectionObject::__construct ; Constructs a ReflectionObject
ReflectionParameter::allowsNull ; Checks if null is allowed
ReflectionParameter::canBePassedByValue ; Returns whether this parameter can be passed by value
ReflectionParameter::export ; Exports
ReflectionParameter::getClass ; Get class
ReflectionParameter::getDeclaringClass ; Gets declaring class
ReflectionParameter::getDeclaringFunction ; Gets declaring function
ReflectionParameter::getDefaultValue ; Gets default parameter value
ReflectionParameter::getName ; Gets parameter name
ReflectionParameter::getPosition ; Gets parameter position
ReflectionParameter::isArray ; Checks if parameter expects an array
ReflectionParameter::isDefaultValueAvailable ; Checks if a default value is available
ReflectionParameter::isOptional ; Checks if optional
ReflectionParameter::isPassedByReference ; Checks if passed by reference
ReflectionParameter::__clone ; Clone
ReflectionParameter::__construct ; Construct
ReflectionParameter::__toString ; To string
ReflectionProperty::export ; Export
ReflectionProperty::getDeclaringClass ; Gets declaring class
ReflectionProperty::getDocComment ; Gets doc comment
ReflectionProperty::getModifiers ; Gets modifiers
ReflectionProperty::getName ; Gets property name
ReflectionProperty::getValue ; Gets value
ReflectionProperty::isDefault ; Checks if default value
ReflectionProperty::isPrivate ; Checks if property is private
ReflectionProperty::isProtected ; Checks if property is protected
ReflectionProperty::isPublic ; Checks if property is public
ReflectionProperty::isStatic ; Checks if property is static
ReflectionProperty::setAccessible ; Set property accessibility
ReflectionProperty::setValue ; Set property value
ReflectionProperty::__clone ; Clone
ReflectionProperty::__construct ; Construct a ReflectionProperty object
ReflectionProperty::__toString ; To string
ReflectionZendExtension::export ; Export
ReflectionZendExtension::getAuthor ; Gets author
ReflectionZendExtension::getCopyright ; Gets copyright
ReflectionZendExtension::getName ; Gets name
ReflectionZendExtension::getURL ; Gets URL
ReflectionZendExtension::getVersion ; Gets version
ReflectionZendExtension::__clone ; Clone handler
ReflectionZendExtension::__construct ; Constructor
ReflectionZendExtension::__toString ; To string handler
Reflector::export ; Exports
Reflector::__toString ; 转化成字符串
RegexIterator::accept ; Get accept status
RegexIterator::getFlags ; Get flags
RegexIterator::getMode ; Returns operation mode.
RegexIterator::getPregFlags ; Returns the regular expression flags.
RegexIterator::getRegex ; Returns current regular expression
RegexIterator::setFlags ; Sets the flags.
RegexIterator::setMode ; Sets the operation mode.
RegexIterator::setPregFlags ; Sets the regular expression flags.
RegexIterator::__construct ; Create a new RegexIterator
register_shutdown_function ; Register a function for execution on shutdown
register_tick_function ; Register a function for execution on each tick
rename ; 重命名一个文件或目录
rename_function ; Renames orig_name to new_name in the global function table
reset ; 将数组的内部指针指向第一个单元
ResourceBundle::count ; Get number of elements in the bundle
ResourceBundle::create ; Create a resource bundle
ResourceBundle::get ; Get data from the bundle
ResourceBundle::getErrorCode ; Get bundle's last error code.
ResourceBundle::getErrorMessage ; Get bundle's last error message.
ResourceBundle::getLocales ; Get supported locales
restore_error_handler ; 还原之前的错误处理函数
restore_exception_handler ; 恢复之前定义过的异常处理函数。
restore_include_path ; 还原 include_path 配置选项的值
rewind ; 倒回文件指针的位置
rewinddir ; 倒回目录句柄
rmdir ; 删除目录
round ; 对浮点数进行四舍五入
rpm_close ; Closes an RPM file
rpm_get_tag ; Retrieves a header tag from an RPM file
rpm_is_valid ; Tests a filename for validity as an RPM file
rpm_open ; Opens an RPM file
RRDCreator::addArchive ; Adds RRA - archive of data values for each data source.
RRDCreator::addDataSource ; Adds data source definition for RRD database.
RRDCreator::save ; Saves the RRD database to a file
RRDCreator::__construct ; Creates new RRDCreator instance
RRDGraph::save ; Saves the result of query into image
RRDGraph::setOptions ; Sets the options for rrd graph export
RRDGraph::__construct ; Creates new RRDGraph instance
RRDUpdater::update ; Update the RRD database file
RRDUpdater::__construct ; Creates new RRDUpdater instance
rrd_create ; Creates rrd database file
rrd_error ; Gets latest error message.
rrd_fetch ; Fetch the data for graph as array.
rrd_first ; Gets the timestamp of the first sample from rrd file.
rrd_graph ; Creates image from a data.
rrd_info ; Gets information about rrd file
rrd_last ; Gets unix timestamp of the last sample.
rrd_lastupdate ; Gets information about last updated data.
rrd_restore ; Restores the RRD file from XML dump.
rrd_tune ; Tunes some RRD database file header options.
rrd_update ; Updates the RRD database.
rrd_version ; Gets information about underlying rrdtool library
rrd_xport ; Exports the information about RRD database.
rsort ; 对数组逆向排序
rtrim ; 删除字符串末端的空白字符（或者其他字符）
runkit_class_adopt ; Convert a base class to an inherited class, add ancestral methods when appropriate
runkit_class_emancipate ; Convert an inherited class to a base class, removes any method whose scope is ancestral
runkit_constant_add ; Similar to define(), but allows defining in class definitions as well
runkit_constant_redefine ; Redefine an already defined constant
runkit_constant_remove ; Remove/Delete an already defined constant
runkit_function_add ; Add a new function, similar to create_function
runkit_function_copy ; Copy a function to a new function name
runkit_function_redefine ; Replace a function definition with a new implementation
runkit_function_remove ; Remove a function definition
runkit_function_rename ; Change a function's name
runkit_import ; Process a PHP file importing function and class definitions, overwriting where appropriate
runkit_lint ; Check the PHP syntax of the specified php code
runkit_lint_file ; Check the PHP syntax of the specified file
runkit_method_add ; Dynamically adds a new method to a given class
runkit_method_copy ; Copies a method from class to another
runkit_method_redefine ; Dynamically changes the code of the given method
runkit_method_remove ; Dynamically removes the given method
runkit_method_rename ; Dynamically changes the name of the given method
runkit_return_value_used ; Determines if the current functions return value will be used
Runkit_Sandbox ; Runkit Sandbox Class -- PHP Virtual Machine
runkit_sandbox_output_handler ; Specify a function to capture and/or process output from a runkit sandbox
Runkit_Sandbox_Parent ; Runkit Anti-Sandbox Class
runkit_superglobals ; Return numerically indexed array of registered superglobals
SAMConnection::commit ; Commits (completes) the current unit of work.
SAMConnection::connect ; Establishes a connection to a Messaging Server
SAMConnection::disconnect ; Disconnects from a Messaging Server
SAMConnection::errno ; Contains the unique numeric error code of the last executed SAM operation.
SAMConnection::error ; Contains the text description of the last failed SAM operation.
SAMConnection::isConnected ; Queries whether a connection is established to a Messaging Server
SAMConnection::peek ; Read a message from a queue without removing it from the queue.
SAMConnection::peekAll ; Read one or more messages from a queue without removing it from the queue.
SAMConnection::receive ; Receive a message from a queue or subscription.
SAMConnection::remove ; Remove a message from a queue.
SAMConnection::rollback ; Cancels (rolls back) an in-flight unit of work.
SAMConnection::send ; Send a message to a queue or publish an item to a topic.
SAMConnection::setDebug ; Turn on or off additional debugging output.
SAMConnection::subscribe ; Create a subscription to a specified topic.
SAMConnection::unsubscribe ; Cancel a subscription to a specified topic.
SAMConnection::__construct ; Creates a new connection to a Messaging Server
SAMMessage::body ; The body of the message.
SAMMessage::header ; The header properties of the message.
SAMMessage::__construct ; Creates a new Message object
SCA::createDataObject ; create an SDO
SCA::getService ; Obtain a proxy for a service
scandir ; 列出指定路径中的文件和目录
SCA_LocalProxy::createDataObject ; create an SDO
SCA_SoapProxy::createDataObject ; create an SDO
SDO_DAS_ChangeSummary::beginLogging ; Begin change logging
SDO_DAS_ChangeSummary::endLogging ; End change logging
SDO_DAS_ChangeSummary::getChangedDataObjects ; Get the changed data objects from a change summary
SDO_DAS_ChangeSummary::getChangeType ; Get the type of change made to an SDO_DataObject
SDO_DAS_ChangeSummary::getOldContainer ; Get the old container for a deleted SDO_DataObject
SDO_DAS_ChangeSummary::getOldValues ; Get the old values for a given changed SDO_DataObject
SDO_DAS_ChangeSummary::isLogging ; Test to see whether change logging is switched on
SDO_DAS_DataFactory::addPropertyToType ; Adds a property to a type
SDO_DAS_DataFactory::addType ; Add a new type to a model
SDO_DAS_DataFactory::getDataFactory ; Get a data factory instance
SDO_DAS_DataObject::getChangeSummary ; Get a data object's change summary
SDO_DAS_Relational::applyChanges ; Applies the changes made to a data graph back to the database.
SDO_DAS_Relational::__construct ; Creates an instance of a Relational Data Access Service
SDO_DAS_Setting::getListIndex ; Get the list index for a changed many-valued property
SDO_DAS_Setting::getPropertyIndex ; Get the property index for a changed property
SDO_DAS_Setting::getPropertyName ; Get the property name for a changed property
SDO_DAS_Setting::getValue ; Get the old value for the changed property
SDO_DAS_Setting::isSet ; Test whether a property was set prior to being modified
SDO_DAS_XML::addTypes ; To load a second or subsequent schema file to a SDO_DAS_XML object
SDO_DAS_XML::create ; To create SDO_DAS_XML object for a given schema file
SDO_DAS_XML::createDataObject ; Creates SDO_DataObject for a given namespace URI and type name
SDO_DAS_XML::createDocument ; Creates an XML Document object from scratch, without the need to load a document from a file or string.
SDO_DAS_XML::loadFile ; Returns SDO_DAS_XML_Document object for a given path to xml instance document
SDO_DAS_XML::loadString ; Returns SDO_DAS_XML_Document for a given xml instance string
SDO_DAS_XML::saveFile ; Saves the SDO_DAS_XML_Document object to a file
SDO_DAS_XML::saveString ; Saves the SDO_DAS_XML_Document object to a string
SDO_DAS_XML_Document::getRootDataObject ; Returns the root SDO_DataObject
SDO_DAS_XML_Document::getRootElementName ; Returns root element's name
SDO_DAS_XML_Document::getRootElementURI ; Returns root element's URI string
SDO_DAS_XML_Document::setEncoding ; Sets the given string as encoding
SDO_DAS_XML_Document::setXMLDeclaration ; Sets the xml declaration
SDO_DAS_XML_Document::setXMLVersion ; Sets the given string as xml version
SDO_DataFactory::create ; Create an SDO_DataObject
SDO_DataObject::clear ; Clear an SDO_DataObject's properties
SDO_DataObject::createDataObject ; Create a child SDO_DataObject
SDO_DataObject::getContainer ; Get a data object's container
SDO_DataObject::getSequence ; Get the sequence for a data object
SDO_DataObject::getTypeName ; Return the name of the type for a data object.
SDO_DataObject::getTypeNamespaceURI ; Return the namespace URI of the type for a data object.
SDO_Exception::getCause ; Get the cause of the exception.
SDO_List::insert ; Insert into a list
SDO_Model_Property::getContainingType ; Get the SDO_Model_Type which contains this property
SDO_Model_Property::getDefault ; Get the default value for the property
SDO_Model_Property::getName ; Get the name of the SDO_Model_Property
SDO_Model_Property::getType ; Get the SDO_Model_Type of the property
SDO_Model_Property::isContainment ; Test to see if the property defines a containment relationship
SDO_Model_Property::isMany ; Test to see if the property is many-valued
SDO_Model_ReflectionDataObject::export ; Get a string describing the SDO_DataObject.
SDO_Model_ReflectionDataObject::getContainmentProperty ; Get the property which defines the containment relationship to the data object
SDO_Model_ReflectionDataObject::getInstanceProperties ; Get the instance properties of the SDO_DataObject
SDO_Model_ReflectionDataObject::getType ; Get the SDO_Model_Type for the SDO_DataObject
SDO_Model_ReflectionDataObject::__construct ; Construct an SDO_Model_ReflectionDataObject
SDO_Model_Type::getBaseType ; Get the base type for this type
SDO_Model_Type::getName ; Get the name of the type
SDO_Model_Type::getNamespaceURI ; Get the namespace URI of the type
SDO_Model_Type::getProperties ; Get the SDO_Model_Property objects defined for the type
SDO_Model_Type::getProperty ; Get an SDO_Model_Property of the type
SDO_Model_Type::isAbstractType ; Test to see if this SDO_Model_Type is an abstract data type
SDO_Model_Type::isDataType ; Test to see if this SDO_Model_Type is a primitive data type
SDO_Model_Type::isInstance ; Test for an SDO_DataObject being an instance of this SDO_Model_Type
SDO_Model_Type::isOpenType ; Test to see if this type is an open type
SDO_Model_Type::isSequencedType ; Test to see if this is a sequenced type
SDO_Sequence::getProperty ; Return the property for the specified sequence index.
SDO_Sequence::insert ; Insert into a sequence
SDO_Sequence::move ; Move an item to another sequence position
SeekableIterator::seek ; Seeks to a position
sem_acquire ; Acquire a semaphore
sem_get ; Get a semaphore id
sem_release ; Release a semaphore
sem_remove ; Remove a semaphore
Serializable::serialize ; 对象的字符串表示
Serializable::unserialize ; 构造对象
serialize ; 产生一个可存储的值的表示
SessionHandler::close ; Close the session
SessionHandler::destroy ; Destroy a session
SessionHandler::gc ; Cleanup old sessions
SessionHandler::open ; Initialize session
SessionHandler::read ; Read session data
SessionHandler::write ; Write session data
SessionHandlerInterface::close ; Close the session
SessionHandlerInterface::destroy ; Destroy a session
SessionHandlerInterface::gc ; Cleanup old sessions
SessionHandlerInterface::open ; Initialize session
SessionHandlerInterface::read ; Read session data
SessionHandlerInterface::write ; Write session data
session_cache_expire ; Return current cache expire
session_cache_limiter ; Get and/or set the current cache limiter
session_commit ; session_write_close 的别名
session_decode ; Decodes session data from a session encoded string
session_destroy ; Destroys all data registered to a session
session_encode ; 将当前会话数据编码为一个字符串
session_get_cookie_params ; Get the session cookie parameters
session_id ; Get and/or set the current session id
session_is_registered ; 检查变量是否在会话中已经注册
session_module_name ; Get and/or set the current session module
session_name ; Get and/or set the current session name
session_pgsql_add_error ; Increments error counts and sets last error message
session_pgsql_get_error ; Returns number of errors and last error message
session_pgsql_get_field ; Get custom field value
session_pgsql_reset ; Reset connection to session database servers
session_pgsql_set_field ; Set custom field value
session_pgsql_status ; Get current save handler status
session_regenerate_id ; Update the current session id with a newly generated one
session_register ; Register one or more global variables with the current session
session_register_shutdown ; Session shutdown function
session_save_path ; Get and/or set the current session save path
session_set_cookie_params ; Set the session cookie parameters
session_set_save_handler ; Sets user-level session storage functions
session_start ; Start new or resume existing session
session_status ; Returns the current session status
session_unregister ; Unregister a global variable from the current session
session_unset ; Free all session variables
session_write_close ; Write session data and end session
setcookie ; Send a cookie
setlocale ; Set locale information
setproctitle ; Set the process title
setrawcookie ; Send a cookie without urlencoding the cookie value
setthreadtitle ; Set the thread title
settype ; 设置变量的类型
set_error_handler ; 设置一个用户定义的错误处理函数
set_exception_handler ; 设置一个用户定义的异常处理函数。
set_file_buffer ; stream_set_write_buffer 的别名
set_include_path ; 设置 include_path 配置选项
set_magic_quotes_runtime ; 设置当前 magic_quotes_runtime 配置选项的激活状态
set_socket_blocking ; 别名 stream_set_blocking
set_time_limit ; 设置脚本最大执行时间
sha1 ; 计算字符串的 sha1 散列值
sha1_file ; 计算文件的 sha1 散列值
shell_exec ; Execute command via shell and return the complete output as a string
shmop_close ; Close shared memory block
shmop_delete ; Delete shared memory block
shmop_open ; Create or open shared memory block
shmop_read ; Read data from shared memory block
shmop_size ; Get size of shared memory block
shmop_write ; Write data into shared memory block
shm_attach ; Creates or open a shared memory segment
shm_detach ; Disconnects from shared memory segment
shm_get_var ; Returns a variable from shared memory
shm_has_var ; Check whether a specific entry exists
shm_put_var ; Inserts or updates a variable in shared memory
shm_remove ; Removes shared memory from Unix systems
shm_remove_var ; Removes a variable from shared memory
show_source ; 别名 highlight_file
shuffle ; 将数组打乱
signeurlpaiement ; Obtain the payment url (needs 2 arguments)
similar_text ; 计算两个字符串的相似度
SimpleXMLElement::addAttribute ; Adds an attribute to the SimpleXML element
SimpleXMLElement::addChild ; Adds a child element to the XML node
SimpleXMLElement::asXML ; Return a well-formed XML string based on SimpleXML element
SimpleXMLElement::attributes ; Identifies an element's attributes
SimpleXMLElement::children ; Finds children of given node
SimpleXMLElement::count ; Counts the children of an element
SimpleXMLElement::getDocNamespaces ; Returns namespaces declared in document
SimpleXMLElement::getName ; Gets the name of the XML element
SimpleXMLElement::getNamespaces ; Returns namespaces used in document
SimpleXMLElement::registerXPathNamespace ; Creates a prefix/ns context for the next XPath query
SimpleXMLElement::saveXML ; 别名 SimpleXMLElement::asXML
SimpleXMLElement::xpath ; Runs XPath query on XML data
SimpleXMLElement::__construct ; Creates a new SimpleXMLElement object
SimpleXMLIterator::current ; Returns the current element
SimpleXMLIterator::getChildren ; Returns the sub-elements of the current element
SimpleXMLIterator::hasChildren ; Checks whether the current element has sub elements.
SimpleXMLIterator::key ; Return current key
SimpleXMLIterator::next ; Move to next element
SimpleXMLIterator::rewind ; Rewind to the first element
SimpleXMLIterator::valid ; Check whether the current element is valid
simplexml_import_dom ; Get a SimpleXMLElement object from a DOM node.
simplexml_load_file ; Interprets an XML file into an object
simplexml_load_string ; Interprets a string of XML into an object
sin ; 正弦
sinh ; 双曲正弦
sizeof ; count 的别名
sleep ; 延缓执行
snmp2_get ; Fetch an SNMP object
snmp2_getnext ; Fetch the SNMP object which follows the given object id
snmp2_real_walk ; Return all objects including their respective object ID within the specified one
snmp2_set ; Set the value of an SNMP object
snmp2_walk ; Fetch all the SNMP objects from an agent
snmp3_get ; Fetch an SNMP object
snmp3_getnext ; Fetch the SNMP object which follows the given object id
snmp3_real_walk ; Return all objects including their respective object ID within the specified one
snmp3_set ; Set the value of an SNMP object
snmp3_walk ; Fetch all the SNMP objects from an agent
SNMP::close ; Close SNMP session
SNMP::get ; Fetch an SNMP object
SNMP::getErrno ; Get last error code
SNMP::getError ; Get last error message
SNMP::set ; Set the value of an SNMP object
SNMP::setSecurity ; Configures security-related SNMPv3 session parameters
SNMP::walk ; Fetch SNMP object subtree
SNMP::__construct ; Creates SNMP instance representing session to remote SNMP agent
snmpget ; 获取一个 SNMP 对象
snmpgetnext ; Fetch the SNMP object which follows the given object id
snmprealwalk ; 返回指定的所有对象，包括它们各自的对象 ID
snmpset ; 设置一个 SNMP 对象
snmpwalk ; 从代理返回所有的 SNMP 对象
snmpwalkoid ; 查询关于网络实体的信息树
snmp_get_quick_print ; 返回 UCD 库中 quick_print 设置的当前值
snmp_get_valueretrieval ; Return the method how the SNMP values will be returned
snmp_read_mib ; Reads and parses a MIB file into the active MIB tree
snmp_set_enum_print ; Return all values that are enums with their enum value instead of the raw integer
snmp_set_oid_numeric_print ; Return all objects including their respective object id within the specified one
snmp_set_oid_output_format ; Set the OID output format
snmp_set_quick_print ; 设置 UCD SNMP 库中 quick_print 的值
snmp_set_valueretrieval ; Specify the method how the SNMP values will be returned
SoapClient::SoapClient ; SoapClient constructor
SoapClient::__call ; Calls a SOAP function (deprecated)
SoapClient::__construct ; SoapClient constructor
SoapClient::__doRequest ; Performs a SOAP request
SoapClient::__getFunctions ; Returns list of available SOAP functions
SoapClient::__getLastRequest ; Returns last SOAP request
SoapClient::__getLastRequestHeaders ; Returns the SOAP headers from the last request
SoapClient::__getLastResponse ; Returns last SOAP response
SoapClient::__getLastResponseHeaders ; Returns the SOAP headers from the last response
SoapClient::__getTypes ; Returns a list of SOAP types
SoapClient::__setCookie ; The __setCookie purpose
SoapClient::__setLocation ; Sets the location of the Web service to use
SoapClient::__setSoapHeaders ; Sets SOAP headers for subsequent calls
SoapClient::__soapCall ; Calls a SOAP function
SoapFault::SoapFault ; SoapFault constructor
SoapFault::__construct ; SoapFault constructor
SoapFault::__toString ; Obtain a string representation of a SoapFault
SoapHeader::SoapHeader ; SoapHeader constructor
SoapHeader::__construct ; SoapHeader constructor
SoapParam::SoapParam ; SoapParam constructor
SoapParam::__construct ; SoapParam constructor
SoapServer::addFunction ; Adds one or more functions to handle SOAP requests
SoapServer::addSoapHeader ; Add a SOAP header to the response
SoapServer::fault ; Issue SoapServer fault indicating an error
SoapServer::getFunctions ; Returns list of defined functions
SoapServer::handle ; Handles a SOAP request
SoapServer::setClass ; Sets the class which handles SOAP requests
SoapServer::setObject ; Sets the object which will be used to handle SOAP requests
SoapServer::setPersistence ; Sets SoapServer persistence mode
SoapServer::SoapServer ; SoapServer constructor
SoapServer::__construct ; SoapServer constructor
SoapVar::SoapVar ; SoapVar constructor
SoapVar::__construct ; SoapVar constructor
Socket context options ; Socket context option listing
socket_accept ; Accepts a connection on a socket
socket_bind ; Binds a name to a socket
socket_clear_error ; Clears the error on the socket or the last error code
socket_close ; Closes a socket resource
socket_connect ; Initiates a connection on a socket
socket_create ; 创建一个套接字（通讯节点）
socket_create_listen ; Opens a socket on port to accept connections
socket_create_pair ; Creates a pair of indistinguishable sockets and stores them in an array
socket_getpeername ; Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type
socket_getsockname ; Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type
socket_get_option ; Gets socket options for the socket
socket_get_status ; 别名 stream_get_meta_data
socket_import_stream ; Import a stream
socket_last_error ; Returns the last error on the socket
socket_listen ; Listens for a connection on a socket
socket_read ; Reads a maximum of length bytes from a socket
socket_recv ; Receives data from a connected socket
socket_recvfrom ; Receives data from a socket whether or not it is connection-oriented
socket_select ; Runs the select() system call on the given arrays of sockets with a specified timeout
socket_send ; Sends data to a connected socket
socket_sendto ; Sends a message to a socket, whether it is connected or not
socket_set_block ; Sets blocking mode on a socket resource
socket_set_blocking ; 别名 stream_set_blocking
socket_set_nonblock ; Sets nonblocking mode for file descriptor fd
socket_set_option ; Sets socket options for the socket
socket_set_timeout ; 别名 stream_set_timeout
socket_shutdown ; Shuts down a socket for receiving, sending, or both
socket_strerror ; Return a string describing a socket error
socket_write ; Write to a socket
SolrClient::addDocument ; Adds a document to the index
SolrClient::addDocuments ; Adds a collection of SolrInputDocument instances to the index
SolrClient::commit ; Finalizes all add/deletes made to the index
SolrClient::deleteById ; Delete by Id
SolrClient::deleteByIds ; Deletes by Ids
SolrClient::deleteByQueries ; Removes all documents matching any of the queries
SolrClient::deleteByQuery ; Deletes all documents matching the given query
SolrClient::getDebug ; Returns the debug data for the last connection attempt
SolrClient::getOptions ; Returns the client options set internally
SolrClient::optimize ; Defragments the index
SolrClient::ping ; Checks if Solr server is still up
SolrClient::query ; Sends a query to the server
SolrClient::request ; Sends a raw update request
SolrClient::rollback ; Rollbacks all add/deletes made to the index since the last commit
SolrClient::setResponseWriter ; Sets the response writer used to prepare the response from Solr
SolrClient::setServlet ; Changes the specified servlet type to a new value
SolrClient::threads ; Checks the threads status
SolrClient::__construct ; Constructor for the SolrClient object
SolrClient::__destruct ; Destructor for SolrClient
SolrClientException::getInternalInfo ; Returns internal information where the Exception was thrown
SolrDocument::addField ; Adds a field to the document
SolrDocument::clear ; Drops all the fields in the document
SolrDocument::current ; Retrieves the current field
SolrDocument::deleteField ; Removes a field from the document
SolrDocument::fieldExists ; Checks if a field exists in the document
SolrDocument::getField ; Retrieves a field by name
SolrDocument::getFieldCount ; Returns the number of fields in this document
SolrDocument::getFieldNames ; Returns an array of fields names in the document
SolrDocument::getInputDocument ; Returns a SolrInputDocument equivalent of the object
SolrDocument::key ; Retrieves the current key
SolrDocument::merge ; Merges source to the current SolrDocument
SolrDocument::next ; Moves the internal pointer to the next field
SolrDocument::offsetExists ; Checks if a particular field exists
SolrDocument::offsetGet ; Retrieves a field
SolrDocument::offsetSet ; Adds a field to the document
SolrDocument::offsetUnset ; Removes a field
SolrDocument::reset ; This is an alias to SolrDocument::clear()
SolrDocument::rewind ; Resets the internal pointer to the beginning
SolrDocument::serialize ; Used for custom serialization
SolrDocument::sort ; Sorts the fields in the document
SolrDocument::toArray ; Returns an array representation of the document
SolrDocument::unserialize ; Custom serialization of SolrDocument objects
SolrDocument::valid ; Checks if the current position internally is still valid
SolrDocument::__clone ; Creates a copy of a SolrDocument object
SolrDocument::__construct ; Constructor
SolrDocument::__destruct ; Destructor
SolrDocument::__get ; Acess the field as a property
SolrDocument::__isset ; Checks if a field exists
SolrDocument::__set ; Adds another field to the document
SolrDocument::__unset ; Removes a field from the document
SolrDocumentField::__construct ; Constructor
SolrDocumentField::__destruct ; Destructor
SolrException::getInternalInfo ; Returns internal information where the Exception was thrown
SolrGenericResponse::__construct ; Constructor
SolrGenericResponse::__destruct ; Destructor
SolrIllegalArgumentException::getInternalInfo ; Returns internal information where the Exception was thrown
SolrIllegalOperationException::getInternalInfo ; Returns internal information where the Exception was thrown
SolrInputDocument::addField ; Adds a field to the document
SolrInputDocument::clear ; Resets the input document
SolrInputDocument::deleteField ; Removes a field from the document
SolrInputDocument::fieldExists ; Checks if a field exists
SolrInputDocument::getBoost ; Retrieves the current boost value for the document
SolrInputDocument::getField ; Retrieves a field by name
SolrInputDocument::getFieldBoost ; Retrieves the boost value for a particular field
SolrInputDocument::getFieldCount ; Returns the number of fields in the document
SolrInputDocument::getFieldNames ; Returns an array containing all the fields in the document
SolrInputDocument::merge ; Merges one input document into another
SolrInputDocument::reset ; This is an alias of SolrInputDocument::clear
SolrInputDocument::setBoost ; Sets the boost value for this document
SolrInputDocument::setFieldBoost ; Sets the index-time boost value for a field
SolrInputDocument::sort ; Sorts the fields within the document
SolrInputDocument::toArray ; Returns an array representation of the input document
SolrInputDocument::__clone ; Creates a copy of a SolrDocument
SolrInputDocument::__construct ; Constructor
SolrInputDocument::__destruct ; Destructor
SolrModifiableParams::__construct ; Constructor
SolrModifiableParams::__destruct ; Destructor
SolrObject::getPropertyNames ; Returns an array of all the names of the properties
SolrObject::offsetExists ; Checks if the property exists
SolrObject::offsetGet ; Used to retrieve a property
SolrObject::offsetSet ; Sets the value for a property
SolrObject::offsetUnset ; Sets the value for the property
SolrObject::__construct ; Creates Solr object
SolrObject::__destruct ; Destructor
SolrParams::add ; This is an alias for SolrParams::addParam
SolrParams::addParam ; Adds a parameter to the object
SolrParams::get ; This is an alias for SolrParams::getParam
SolrParams::getParam ; Returns a parameter value
SolrParams::getParams ; Returns an array of non URL-encoded parameters
SolrParams::getPreparedParams ; Returns an array of URL-encoded parameters
SolrParams::serialize ; Used for custom serialization
SolrParams::set ; An alias of SolrParams::setParam
SolrParams::setParam ; Sets the parameter to the specified value
SolrParams::toString ; Returns all the name-value pair parameters in the object
SolrParams::unserialize ; Used for custom serialization
SolrPingResponse::getResponse ; Returns the response from the server
SolrPingResponse::__construct ; Constructor
SolrPingResponse::__destruct ; Destructor
SolrQuery::addFacetDateField ; Maps to facet.date
SolrQuery::addFacetDateOther ; Adds another facet.date.other parameter
SolrQuery::addFacetField ; Adds another field to the facet
SolrQuery::addFacetQuery ; Adds a facet query
SolrQuery::addField ; Specifies which fields to return in the result
SolrQuery::addFilterQuery ; Specifies a filter query
SolrQuery::addHighlightField ; Maps to hl.fl
SolrQuery::addMltField ; Sets a field to use for similarity
SolrQuery::addMltQueryField ; Maps to mlt.qf
SolrQuery::addSortField ; Used to control how the results should be sorted
SolrQuery::addStatsFacet ; Requests a return of sub results for values within the given facet
SolrQuery::addStatsField ; Maps to stats.field parameter
SolrQuery::getFacet ; Returns the value of the facet parameter
SolrQuery::getFacetDateEnd ; Returns the value for the facet.date.end parameter
SolrQuery::getFacetDateFields ; Returns all the facet.date fields
SolrQuery::getFacetDateGap ; Returns the value of the facet.date.gap parameter
SolrQuery::getFacetDateHardEnd ; Returns the value of the facet.date.hardend parameter
SolrQuery::getFacetDateOther ; Returns the value for the facet.date.other parameter
SolrQuery::getFacetDateStart ; Returns the  lower bound for the first date range for all date faceting on this field
SolrQuery::getFacetFields ; Returns all the facet fields
SolrQuery::getFacetLimit ; Returns the maximum number of constraint counts that should be returned for the facet fields
SolrQuery::getFacetMethod ; Returns the value of the facet.method parameter
SolrQuery::getFacetMinCount ; Returns the minimum counts for facet fields should be included in the response
SolrQuery::getFacetMissing ; Returns the current state of the facet.missing parameter
SolrQuery::getFacetOffset ; Returns an offset into the list of constraints to be used for pagination
SolrQuery::getFacetPrefix ; Returns the facet prefix
SolrQuery::getFacetQueries ; Returns all the facet queries
SolrQuery::getFacetSort ; Returns the facet sort type
SolrQuery::getFields ; Returns the list of fields that will be returned in the response
SolrQuery::getFilterQueries ; Returns an array of filter queries
SolrQuery::getHighlight ; Returns the state of the hl parameter
SolrQuery::getHighlightAlternateField ; Returns the highlight field to use as backup or default
SolrQuery::getHighlightFields ; Returns all the fields that Solr should generate highlighted snippets for
SolrQuery::getHighlightFormatter ; Returns the formatter for the highlighted output
SolrQuery::getHighlightFragmenter ; Returns the text snippet generator for highlighted text
SolrQuery::getHighlightFragsize ; Returns the number of characters of fragments to consider for highlighting
SolrQuery::getHighlightHighlightMultiTerm ; Returns whether or not to enable highlighting for range/wildcard/fuzzy/prefix queries
SolrQuery::getHighlightMaxAlternateFieldLength ; Returns the maximum number of characters of the field to return
SolrQuery::getHighlightMaxAnalyzedChars ; Returns the maximum number of characters into a document to look for suitable snippets
SolrQuery::getHighlightMergeContiguous ; Returns whether or not the collapse contiguous fragments into a single fragment
SolrQuery::getHighlightRegexMaxAnalyzedChars ; Returns the maximum number of characters from a field when using the regex fragmenter
SolrQuery::getHighlightRegexPattern ; Returns the regular expression for fragmenting
SolrQuery::getHighlightRegexSlop ; Returns the deviation factor from the ideal fragment size
SolrQuery::getHighlightRequireFieldMatch ; Returns if a field will only be highlighted if the query matched in this particular field
SolrQuery::getHighlightSimplePost ; Returns the text which appears after a highlighted term
SolrQuery::getHighlightSimplePre ; Returns the text which appears before a highlighted term
SolrQuery::getHighlightSnippets ; Returns the maximum number of highlighted snippets to generate per field
SolrQuery::getHighlightUsePhraseHighlighter ; Returns the state of the hl.usePhraseHighlighter parameter
SolrQuery::getMlt ; Returns whether or not MoreLikeThis results should be enabled
SolrQuery::getMltBoost ; Returns whether or not the query will be boosted by the interesting term relevance
SolrQuery::getMltCount ; Returns the number of similar documents to return for each result
SolrQuery::getMltFields ; Returns all the fields to use for similarity
SolrQuery::getMltMaxNumQueryTerms ; Returns the maximum number of query terms that will be included in any generated query
SolrQuery::getMltMaxNumTokens ; Returns the maximum number of tokens to parse in each document field that is not stored with TermVector support
SolrQuery::getMltMaxWordLength ; Returns the maximum word length above which words will be ignored
SolrQuery::getMltMinDocFrequency ; Returns the treshold frequency at which words will be ignored which do not occur in at least this many docs
SolrQuery::getMltMinTermFrequency ; Returns the frequency below which terms will be ignored in the source document
SolrQuery::getMltMinWordLength ; Returns the minimum word length below which words will be ignored
SolrQuery::getMltQueryFields ; Returns the query fields and their boosts
SolrQuery::getQuery ; Returns the main query
SolrQuery::getRows ; Returns the maximum number of documents
SolrQuery::getSortFields ; Returns all the sort fields
SolrQuery::getStart ; Returns the offset in the complete result set
SolrQuery::getStats ; Returns whether or not stats is enabled
SolrQuery::getStatsFacets ; Returns all the stats facets that were set
SolrQuery::getStatsFields ; Returns all the statistics fields
SolrQuery::getTerms ; Returns whether or not the TermsComponent is enabled
SolrQuery::getTermsField ; Returns the field from which the terms are retrieved
SolrQuery::getTermsIncludeLowerBound ; Returns whether or not to include the lower bound in the result set
SolrQuery::getTermsIncludeUpperBound ; Returns whether or not to include the upper bound term in the result set
SolrQuery::getTermsLimit ; Returns the maximum number of terms Solr should return
SolrQuery::getTermsLowerBound ; Returns the term to start at
SolrQuery::getTermsMaxCount ; Returns the maximum document frequency
SolrQuery::getTermsMinCount ; Returns the minimum document frequency to return in order to be included
SolrQuery::getTermsPrefix ; Returns the term prefix
SolrQuery::getTermsReturnRaw ; Whether or not to return raw characters
SolrQuery::getTermsSort ; Returns an integer indicating how terms are sorted
SolrQuery::getTermsUpperBound ; Returns the term to stop at
SolrQuery::getTimeAllowed ; Returns the time in milliseconds allowed for the query to finish
SolrQuery::removeFacetDateField ; Removes one of the facet date fields
SolrQuery::removeFacetDateOther ; Removes one of the facet.date.other parameters
SolrQuery::removeFacetField ; Removes one of the facet.date parameters
SolrQuery::removeFacetQuery ; Removes one of the facet.query parameters
SolrQuery::removeField ; Removes a field from the list of fields
SolrQuery::removeFilterQuery ; Removes a filter query
SolrQuery::removeHighlightField ; Removes one of the fields used for highlighting
SolrQuery::removeMltField ; Removes one of the moreLikeThis fields
SolrQuery::removeMltQueryField ; Removes one of the moreLikeThis query fields
SolrQuery::removeSortField ; Removes one of the sort fields
SolrQuery::removeStatsFacet ; Removes one of the stats.facet parameters
SolrQuery::removeStatsField ; Removes one of the stats.field parameters
SolrQuery::setEchoHandler ; Toggles the echoHandler parameter
SolrQuery::setEchoParams ; Determines what kind of parameters to include in the response
SolrQuery::setExplainOther ; Sets the explainOther common query parameter
SolrQuery::setFacet ; Maps to the facet parameter. Enables or disables facetting
SolrQuery::setFacetDateEnd ; Maps to facet.date.end
SolrQuery::setFacetDateGap ; Maps to facet.date.gap
SolrQuery::setFacetDateHardEnd ; Maps to facet.date.hardend
SolrQuery::setFacetDateStart ; Maps to facet.date.start
SolrQuery::setFacetEnumCacheMinDefaultFrequency ; Sets the minimum document frequency used for determining term count
SolrQuery::setFacetLimit ; Maps to facet.limit
SolrQuery::setFacetMethod ; Specifies the type of algorithm to use when faceting a field
SolrQuery::setFacetMinCount ; Maps to facet.mincount
SolrQuery::setFacetMissing ; Maps to facet.missing
SolrQuery::setFacetOffset ; Sets the offset into the list of constraints to allow for pagination
SolrQuery::setFacetPrefix ; Specifies a string prefix with which to limits the terms on which to facet
SolrQuery::setFacetSort ; Determines the ordering of the facet field constraints
SolrQuery::setHighlight ; Enables or disables highlighting
SolrQuery::setHighlightAlternateField ; Specifies the backup field to use
SolrQuery::setHighlightFormatter ; Specify a formatter for the highlight output
SolrQuery::setHighlightFragmenter ; Sets a text snippet generator for highlighted text
SolrQuery::setHighlightFragsize ; The size of fragments to consider for highlighting
SolrQuery::setHighlightHighlightMultiTerm ; Use SpanScorer to highlight phrase terms
SolrQuery::setHighlightMaxAlternateFieldLength ; Sets the maximum number of characters of the field to return
SolrQuery::setHighlightMaxAnalyzedChars ; Specifies the number of characters into a document to look for suitable snippets
SolrQuery::setHighlightMergeContiguous ; Whether or not to collapse contiguous fragments into a single fragment
SolrQuery::setHighlightRegexMaxAnalyzedChars ; Specify the maximum number of characters to analyze
SolrQuery::setHighlightRegexPattern ; Specify the regular expression for fragmenting
SolrQuery::setHighlightRegexSlop ; Sets the factor by which the regex fragmenter can stray from the ideal fragment size
SolrQuery::setHighlightRequireFieldMatch ; Require field matching during highlighting
SolrQuery::setHighlightSimplePost ; Sets the text which appears after a highlighted term
SolrQuery::setHighlightSimplePre ; Sets the text which appears before a highlighted term
SolrQuery::setHighlightSnippets ; Sets the maximum number of highlighted snippets to generate per field
SolrQuery::setHighlightUsePhraseHighlighter ; Whether to highlight phrase terms only when they appear within the query phrase
SolrQuery::setMlt ; Enables or disables moreLikeThis
SolrQuery::setMltBoost ; Set if the query will be boosted by the interesting term relevance
SolrQuery::setMltCount ; Set the number of similar documents to return for each result
SolrQuery::setMltMaxNumQueryTerms ; Sets the maximum number of query terms included
SolrQuery::setMltMaxNumTokens ; Specifies the maximum number of tokens to parse
SolrQuery::setMltMaxWordLength ; Sets the maximum word length
SolrQuery::setMltMinDocFrequency ; Sets the mltMinDoc frequency
SolrQuery::setMltMinTermFrequency ; Sets the frequency below which terms will be ignored in the source docs
SolrQuery::setMltMinWordLength ; Sets the minimum word length
SolrQuery::setOmitHeader ; Exclude the header from the returned results
SolrQuery::setQuery ; Sets the search query
SolrQuery::setRows ; Specifies the maximum number of rows to return in the result
SolrQuery::setShowDebugInfo ; Flag to show debug information
SolrQuery::setStart ; Specifies the number of rows to skip
SolrQuery::setStats ; Enables or disables the Stats component
SolrQuery::setTerms ; Enables or disables the TermsComponent
SolrQuery::setTermsField ; Sets the name of the field to get the Terms from
SolrQuery::setTermsIncludeLowerBound ; Include the lower bound term in the result set
SolrQuery::setTermsIncludeUpperBound ; Include the upper bound term in the result set
SolrQuery::setTermsLimit ; Sets the maximum number of terms to return
SolrQuery::setTermsLowerBound ; Specifies the Term to start from
SolrQuery::setTermsMaxCount ; Sets the maximum document frequency
SolrQuery::setTermsMinCount ; Sets the minimum document frequency
SolrQuery::setTermsPrefix ; Restrict matches to terms that start with the prefix
SolrQuery::setTermsReturnRaw ; Return the raw characters of the indexed term
SolrQuery::setTermsSort ; Specifies how to sort the returned terms
SolrQuery::setTermsUpperBound ; Sets the term to stop at
SolrQuery::setTimeAllowed ; The time allowed for search to finish
SolrQuery::__construct ; Constructor
SolrQuery::__destruct ; Destructor
SolrQueryResponse::__construct ; Constructor
SolrQueryResponse::__destruct ; Destructor
SolrResponse::getDigestedResponse ; Returns the XML response as serialized PHP data
SolrResponse::getHttpStatus ; Returns the HTTP status of the response
SolrResponse::getHttpStatusMessage ; Returns more details on the HTTP status
SolrResponse::getRawRequest ; Returns the raw request sent to the Solr server
SolrResponse::getRawRequestHeaders ; Returns the raw request headers sent to the Solr server
SolrResponse::getRawResponse ; Returns the raw response from the server
SolrResponse::getRawResponseHeaders ; Returns the raw response headers from the server
SolrResponse::getRequestUrl ; Returns the full URL the request was sent to
SolrResponse::getResponse ; Returns a SolrObject representing the XML response from the server
SolrResponse::setParseMode ; Sets the parse mode
SolrResponse::success ; Was the request a success
SolrUpdateResponse::__construct ; Constructor
SolrUpdateResponse::__destruct ; Destructor
SolrUtils::digestXmlResponse ; Parses an response XML string into a SolrObject
SolrUtils::escapeQueryChars ; Escapes a lucene query string
SolrUtils::getSolrVersion ; Returns the current version of the Solr extension
SolrUtils::queryPhrase ; Prepares a phrase from an unescaped lucene string
solr_get_version ; Returns the current version of the Apache Solr extension
sort ; 对数组排序
soundex ; Calculate the soundex key of a string
SphinxClient::addQuery ; Add query to multi-query batch
SphinxClient::buildExcerpts ; Build text snippets
SphinxClient::buildKeywords ; Extract keywords from query
SphinxClient::close ; 关闭先前打开的持久连接
SphinxClient::escapeString ; Escape special characters
SphinxClient::getLastError ; Get the last error message
SphinxClient::getLastWarning ; Get the last warning
SphinxClient::open ; 建立到搜索服务端的持久连接
SphinxClient::query ; 执行搜索查询
SphinxClient::resetFilters ; Clear all filters
SphinxClient::resetGroupBy ; Clear all group-by settings
SphinxClient::runQueries ; Run a batch of search queries
SphinxClient::setArrayResult ; 控制搜索结果集的返回格式
SphinxClient::setConnectTimeout ; Set connection timeout
SphinxClient::setFieldWeights ; Set field weights
SphinxClient::setFilter ; 增加整数值过滤器
SphinxClient::setFilterFloatRange ; Add new float range filter
SphinxClient::setFilterRange ; Add new integer range filter
SphinxClient::setGeoAnchor ; Set anchor point for a geosphere distance calculations
SphinxClient::setGroupBy ; Set grouping attribute
SphinxClient::setGroupDistinct ; Set attribute name for per-group distinct values count calculations
SphinxClient::setIDRange ; Set a range of accepted document IDs
SphinxClient::setIndexWeights ; Set per-index weights
SphinxClient::setLimits ; 设置返回结果集偏移量和数目
SphinxClient::setMatchMode ; 设置全文查询的匹配模式
SphinxClient::setMaxQueryTime ; Set maximum query time
SphinxClient::setRankingMode ; Set ranking mode
SphinxClient::setRetries ; Set retry count and delay
SphinxClient::setSelect ; Set select clause
SphinxClient::setServer ; 设置searchd的主机名和TCP端口
SphinxClient::setSortMode ; Set matches sorting mode
SphinxClient::status ; Queries searchd status
SphinxClient::updateAttributes ; Update document attributes
SphinxClient::__construct ; Create a new SphinxClient object
SplDoublyLinkedList::bottom ; Peeks at the node from the beginning of the doubly linked list
SplDoublyLinkedList::count ; Counts the number of elements in the doubly linked list.
SplDoublyLinkedList::current ; Return current array entry
SplDoublyLinkedList::getIteratorMode ; Returns the mode of iteration
SplDoublyLinkedList::isEmpty ; Checks whether the doubly linked list is empty.
SplDoublyLinkedList::key ; Return current node index
SplDoublyLinkedList::next ; Move to next entry
SplDoublyLinkedList::offsetExists ; Returns whether the requested $index exists
SplDoublyLinkedList::offsetGet ; Returns the value at the specified $index
SplDoublyLinkedList::offsetSet ; Sets the value at the specified $index to $newval
SplDoublyLinkedList::offsetUnset ; Unsets the value at the specified $index
SplDoublyLinkedList::pop ; Pops a node from the end of the doubly linked list
SplDoublyLinkedList::prev ; Move to previous entry
SplDoublyLinkedList::push ; Pushes an element at the end of the doubly linked list
SplDoublyLinkedList::rewind ; Rewind iterator back to the start
SplDoublyLinkedList::serialize ; Serializes the storage
SplDoublyLinkedList::setIteratorMode ; Sets the mode of iteration
SplDoublyLinkedList::shift ; Shifts a node from the beginning of the doubly linked list
SplDoublyLinkedList::top ; Peeks at the node from the end of the doubly linked list
SplDoublyLinkedList::unserialize ; Unserializes the storage
SplDoublyLinkedList::unshift ; Prepends the doubly linked list with an element
SplDoublyLinkedList::valid ; Check whether the doubly linked list contains more nodes
SplDoublyLinkedList::__construct ; Constructs a new doubly linked list
SplEnum::getConstList ; Returns all consts (possible values) as an array.
SplFileInfo::getATime ; Gets last access time of the file
SplFileInfo::getBasename ; Gets the base name of the file
SplFileInfo::getCTime ; Gets the inode change time
SplFileInfo::getExtension ; Gets the file extension
SplFileInfo::getFileInfo ; Gets an SplFileInfo object for the file
SplFileInfo::getFilename ; Gets the filename
SplFileInfo::getGroup ; Gets the file group
SplFileInfo::getInode ; Gets the inode for the file
SplFileInfo::getLinkTarget ; Gets the target of a link
SplFileInfo::getMTime ; Gets the last modified time
SplFileInfo::getOwner ; Gets the owner of the file
SplFileInfo::getPath ; Gets the path without filename
SplFileInfo::getPathInfo ; Gets an SplFileInfo object for the path
SplFileInfo::getPathname ; Gets the path to the file
SplFileInfo::getPerms ; Gets file permissions
SplFileInfo::getRealPath ; Gets absolute path to file
SplFileInfo::getSize ; Gets file size
SplFileInfo::getType ; Gets file type
SplFileInfo::isDir ; Tells if the file is a directory
SplFileInfo::isExecutable ; Tells if the file is executable
SplFileInfo::isFile ; Tells if the object references a regular file
SplFileInfo::isLink ; Tells if the file is a link
SplFileInfo::isReadable ; Tells if file is readable
SplFileInfo::isWritable ; Tells if the entry is writable
SplFileInfo::openFile ; Gets an SplFileObject object for the file
SplFileInfo::setFileClass ; Sets the class name used with SplFileInfo::openFile
SplFileInfo::setInfoClass ; Sets the class used with getFileInfo and getPathInfo
SplFileInfo::__construct ; Construct a new SplFileInfo object
SplFileInfo::__toString ; Returns the path to the file as a string
SplFileObject::current ; Retrieve current line of file
SplFileObject::eof ; Reached end of file
SplFileObject::fflush ; Flushes the output to the file
SplFileObject::fgetc ; Gets character from file
SplFileObject::fgetcsv ; Gets line from file and parse as CSV fields
SplFileObject::fgets ; Gets line from file
SplFileObject::fgetss ; Gets line from file and strip HTML tags
SplFileObject::flock ; Portable file locking
SplFileObject::fpassthru ; Output all remaining data on a file pointer
SplFileObject::fputcsv ; Write a field array as a CSV line
SplFileObject::fscanf ; Parses input from file according to a format
SplFileObject::fseek ; Seek to a position
SplFileObject::fstat ; Gets information about the file
SplFileObject::ftell ; Return current file position
SplFileObject::ftruncate ; Truncates the file to a given length
SplFileObject::fwrite ; Write to file
SplFileObject::getChildren ; No purpose
SplFileObject::getCsvControl ; Get the delimiter and enclosure character for CSV
SplFileObject::getCurrentLine ; Alias of SplFileObject::fgets
SplFileObject::getFlags ; Gets flags for the SplFileObject
SplFileObject::getMaxLineLen ; Get maximum line length
SplFileObject::hasChildren ; SplFileObject does not have children
SplFileObject::key ; Get line number
SplFileObject::next ; Read next line
SplFileObject::rewind ; Rewind the file to the first line
SplFileObject::seek ; Seek to specified line
SplFileObject::setCsvControl ; Set the delimiter and enclosure character for CSV
SplFileObject::setFlags ; Sets flags for the SplFileObject
SplFileObject::setMaxLineLen ; Set maximum line length
SplFileObject::valid ; Not at EOF
SplFileObject::__construct ; Construct a new file object.
SplFileObject::__toString ; Alias of SplFileObject::current
SplFixedArray::count ; Returns the size of the array
SplFixedArray::current ; Return current array entry
SplFixedArray::fromArray ; Import a PHP array in a SplFixedArray instance
SplFixedArray::getSize ; Gets the size of the array
SplFixedArray::key ; Return current array index
SplFixedArray::next ; Move to next entry
SplFixedArray::offsetExists ; Returns whether the requested index exists
SplFixedArray::offsetGet ; Returns the value at the specified index
SplFixedArray::offsetSet ; Sets a new value at a specified index
SplFixedArray::offsetUnset ; Unsets the value at the specified $index
SplFixedArray::rewind ; Rewind iterator back to the start
SplFixedArray::setSize ; Change the size of an array
SplFixedArray::toArray ; Returns a PHP array from the fixed array
SplFixedArray::valid ; Check whether the array contains more elements
SplFixedArray::__construct ; Constructs a new fixed array
SplFixedArray::__wakeup ; Reinitialises the array after being unserialised
SplHeap::compare ; Compare elements in order to place them correctly in the heap while sifting up.
SplHeap::count ; Counts the number of elements in the heap.
SplHeap::current ; Return current node pointed by the iterator
SplHeap::extract ; Extracts a node from top of the heap and sift up.
SplHeap::insert ; Inserts an element in the heap by sifting it up.
SplHeap::isEmpty ; Checks whether the heap is empty.
SplHeap::key ; Return current node index
SplHeap::next ; Move to the next node
SplHeap::recoverFromCorruption ; Recover from the corrupted state and allow further actions on the heap.
SplHeap::rewind ; Rewind iterator back to the start (no-op)
SplHeap::top ; Peeks at the node from the top of the heap
SplHeap::valid ; Check whether the heap contains more nodes
SplHeap::__construct ; Constructs a new empty heap
split ; 用正则表达式将字符串分割到数组中
spliti ; 用正则表达式不区分大小写将字符串分割到数组中
SplMaxHeap::compare ; Compare elements in order to place them correctly in the heap while sifting up.
SplMinHeap::compare ; Compare elements in order to place them correctly in the heap while sifting up.
SplObjectStorage::addAll ; Adds all objects from another storage
SplObjectStorage::attach ; Adds an object in the storage
SplObjectStorage::contains ; Checks if the storage contains a specific object
SplObjectStorage::count ; Returns the number of objects in the storage
SplObjectStorage::current ; Returns the current storage entry
SplObjectStorage::detach ; Removes an object from the storage
SplObjectStorage::getHash ; Calculate a unique identifier for the contained objects
SplObjectStorage::getInfo ; Returns the data associated with the current iterator entry
SplObjectStorage::key ; Returns the index at which the iterator currently is
SplObjectStorage::next ; Move to the next entry
SplObjectStorage::offsetExists ; Checks whether an object exists in the storage
SplObjectStorage::offsetGet ; Returns the data associated with an object
SplObjectStorage::offsetSet ; Associates data to an object in the storage
SplObjectStorage::offsetUnset ; Removes an object from the storage
SplObjectStorage::removeAll ; Removes objects contained in another storage from the current storage
SplObjectStorage::removeAllExcept ; Removes all objects except for those contained in another storage from the current storage
SplObjectStorage::rewind ; Rewind the iterator to the first storage element
SplObjectStorage::serialize ; Serializes the storage
SplObjectStorage::setInfo ; Sets the data associated with the current iterator entry
SplObjectStorage::unserialize ; Unserializes a storage from its string representation
SplObjectStorage::valid ; Returns if the current iterator entry is valid
SplObserver::update ; Receive update from subject
SplPriorityQueue::compare ; Compare priorities in order to place elements correctly in the heap while sifting up.
SplPriorityQueue::count ; Counts the number of elements in the queue.
SplPriorityQueue::current ; Return current node pointed by the iterator
SplPriorityQueue::extract ; Extracts a node from top of the heap and sift up.
SplPriorityQueue::insert ; Inserts an element in the queue by sifting it up.
SplPriorityQueue::isEmpty ; Checks whether the queue is empty.
SplPriorityQueue::key ; Return current node index
SplPriorityQueue::next ; Move to the next node
SplPriorityQueue::recoverFromCorruption ; Recover from the corrupted state and allow further actions on the queue.
SplPriorityQueue::rewind ; Rewind iterator back to the start (no-op)
SplPriorityQueue::setExtractFlags ; Sets the mode of extraction
SplPriorityQueue::top ; Peeks at the node from the top of the queue
SplPriorityQueue::valid ; Check whether the queue contains more nodes
SplPriorityQueue::__construct ; Constructs a new empty queue
SplQueue::dequeue ; Dequeues a node from the queue
SplQueue::enqueue ; Adds an element to the queue.
SplQueue::setIteratorMode ; Sets the mode of iteration
SplQueue::__construct ; Constructs a new queue implemented using a doubly linked list
SplStack::setIteratorMode ; Sets the mode of iteration
SplStack::__construct ; Constructs a new stack implemented using a doubly linked list
SplSubject::attach ; Attach an SplObserver
SplSubject::detach ; Detach an observer
SplSubject::notify ; Notify an observer
SplTempFileObject::__construct ; Construct a new temporary file object
SplType::__construct ; Creates a new value of some type
spl_autoload ; __autoload()函数的默认实现
spl_autoload_call ; 尝试调用所有已注册的__autoload()函数来装载请求类
spl_autoload_extensions ; 注册并返回spl_autoload函数使用的默认文件扩展名。
spl_autoload_functions ; 返回所有已注册的__autoload()函数。
spl_autoload_register ; 注册__autoload()函数
spl_autoload_unregister ; 注销已注册的__autoload()函数
spl_classes ; 返回所有可用的SPL类
spl_object_hash ; 返回指定对象的hash id
Spoofchecker::areConfusable ; Checks if a given text contains any confusable characters
Spoofchecker::isSuspicious ; Checks if a given text contains any suspicious characters
Spoofchecker::setAllowedLocales ; Locales to use when running checks
Spoofchecker::setChecks ; Set the checks to run
Spoofchecker::__construct ; Constructor
sprintf ; Return a formatted string
SQL acceptable by 4D ; PDO and SQL 4D
SQLite3::busyTimeout ; Sets the busy connection handler
SQLite3::close ; Closes the database connection
SQLite3::createAggregate ; Registers a PHP function for use as an SQL aggregate function
SQLite3::createFunction ; Registers a PHP function for use as an SQL scalar function
SQLite3::escapeString ; Returns a string that has been properly escaped
SQLite3::exec ; Executes a result-less query against a given database
SQLite3::lastErrorCode ; Returns the numeric result code of the most recent failed SQLite request
SQLite3::lastErrorMsg ; Returns English text describing the most recent failed SQLite request
SQLite3::lastInsertRowID ; Returns the row ID of the most recent INSERT into the database
SQLite3::loadExtension ; Attempts to load an SQLite extension library
SQLite3::open ; Opens an SQLite database
SQLite3::prepare ; Prepares an SQL statement for execution
SQLite3::query ; Executes an SQL query
SQLite3::querySingle ; Executes a query and returns a single result
SQLite3::version ; Returns the SQLite3 library version as a string constant and as a number
SQLite3::__construct ; Instantiates an SQLite3 object and opens an SQLite 3 database
SQLite3Result::columnName ; Returns the name of the nth column
SQLite3Result::columnType ; Returns the type of the nth column
SQLite3Result::fetchArray ; Fetches a result row as an associative or numerically indexed array or both
SQLite3Result::finalize ; Closes the result set
SQLite3Result::numColumns ; Returns the number of columns in the result set
SQLite3Result::reset ; Resets the result set back to the first row
SQLite3Stmt::bindParam ; Binds a parameter to a statement variable
SQLite3Stmt::bindValue ; Binds the value of a parameter to a statement variable
SQLite3Stmt::clear ; Clears all current bound parameters
SQLite3Stmt::close ; Closes the prepared statement
SQLite3Stmt::execute ; Executes a prepared statement and returns a result set object
SQLite3Stmt::paramCount ; Returns the number of parameters within the prepared statement
SQLite3Stmt::reset ; Resets the prepared statement
sqlite_array_query ; Execute a query against a given database and returns an array
sqlite_busy_timeout ; Set busy timeout duration, or disable busy handlers
sqlite_close ; Closes an open SQLite database
sqlite_column ; Fetches a column from the current row of a result set
sqlite_create_aggregate ; Register an aggregating UDF for use in SQL statements
sqlite_create_function ; Registers a &quot;regular&quot; User Defined Function for use in SQL statements
sqlite_current ; Fetches the current row from a result set as an array
sqlite_error_string ; Returns the textual description of an error code
sqlite_escape_string ; Escapes a string for use as a query parameter
sqlite_exec ; Executes a result-less query against a given database
sqlite_factory ; Opens an SQLite database and returns an SQLiteDatabase object
sqlite_fetch_all ; Fetches all rows from a result set as an array of arrays
sqlite_fetch_array ; Fetches the next row from a result set as an array
sqlite_fetch_column_types ; Return an array of column types from a particular table
sqlite_fetch_object ; Fetches the next row from a result set as an object
sqlite_fetch_single ; Fetches the first column of a result set as a string
sqlite_fetch_string ; 别名 sqlite_fetch_single
sqlite_field_name ; Returns the name of a particular field
sqlite_has_more ; Finds whether or not more rows are available
sqlite_has_prev ; Returns whether or not a previous row is available
sqlite_key ; Returns the current row index
sqlite_last_error ; Returns the error code of the last error for a database
sqlite_last_insert_rowid ; Returns the rowid of the most recently inserted row
sqlite_libencoding ; Returns the encoding of the linked SQLite library
sqlite_libversion ; Returns the version of the linked SQLite library
sqlite_next ; Seek to the next row number
sqlite_num_fields ; Returns the number of fields in a result set
sqlite_num_rows ; Returns the number of rows in a buffered result set
sqlite_open ; Opens an SQLite database and create the database if it does not exist
sqlite_popen ; Opens a persistent handle to an SQLite database and create the database if it does not exist
sqlite_prev ; Seek to the previous row number of a result set
sqlite_query ; Executes a query against a given database and returns a result handle
sqlite_rewind ; Seek to the first row number
sqlite_seek ; Seek to a particular row number of a buffered result set
sqlite_single_query ; Executes a query and returns either an array for one single column or the value of the first row
sqlite_udf_decode_binary ; Decode binary data passed as parameters to an UDF
sqlite_udf_encode_binary ; Encode binary data before returning it from an UDF
sqlite_unbuffered_query ; Execute a query that does not prefetch and buffer all data
sqlite_valid ; Returns whether more rows are available
sqlsrv_begin_transaction ; Begins a database transaction
sqlsrv_cancel ; Cancels a statement
sqlsrv_client_info ; Returns information about the client and specified connection
sqlsrv_close ; Closes an open connection and releases resourses associated with the connection
sqlsrv_commit ; Commits a transaction that was begun with sqlsrv_begin_transaction
sqlsrv_configure ; Changes the driver error handling and logging configurations
sqlsrv_connect ; Opens a connection to a Microsoft SQL Server database
sqlsrv_errors ; Returns error and warning information about the last SQLSRV operation performed
sqlsrv_execute ; Executes a statement prepared with sqlsrv_prepare
sqlsrv_fetch ; Makes the next row in a result set available for reading
sqlsrv_fetch_array ; Returns a row as an array
sqlsrv_fetch_object ; Retrieves the next row of data in a result set as an object
sqlsrv_free_stmt ; Frees all resources for the specified statement
sqlsrv_get_config ; Returns the value of the specified configuration setting
sqlsrv_get_field ; Gets field data from the currently selected row
sqlsrv_has_rows ; Indicates whether the specified statement has rows
sqlsrv_next_result ; Makes the next result of the specified statement active
sqlsrv_num_fields ; Retrieves the number of fields (columns) on a statement
sqlsrv_num_rows ; Retrieves the number of rows in a result set
sqlsrv_prepare ; Prepares a query for execution
sqlsrv_query ; Prepares and executes a query.
sqlsrv_send_stream_data ; Sends data from parameter streams to the server
sqlsrv_server_info ; Returns information about the server
SQL types with PDO_4D and PHP ; SQL types with PDO_4D and PHP
sql_regcase ; 产生用于不区分大小的匹配的正则表达式
sqrt ; 平方根
srand ; 播下随机数发生器种子
sscanf ; Parses input from a string according to a format
ssdeep_fuzzy_compare ; Calculates the match score between two fuzzy hash signatures
ssdeep_fuzzy_hash ; Create a fuzzy hash from a string
ssdeep_fuzzy_hash_filename ; Create a fuzzy hash from a file
ssh2:// ; Secure Shell 2
ssh2_auth_agent ; Authenticate over SSH using the ssh agent
ssh2_auth_hostbased_file ; Authenticate using a public hostkey
ssh2_auth_none ; Authenticate as &quot;none&quot;
ssh2_auth_password ; Authenticate over SSH using a plain password
ssh2_auth_pubkey_file ; Authenticate using a public key
ssh2_connect ; Connect to an SSH server
ssh2_exec ; Execute a command on a remote server
ssh2_fetch_stream ; Fetch an extended data stream
ssh2_fingerprint ; Retrieve fingerprint of remote server
ssh2_methods_negotiated ; Return list of negotiated methods
ssh2_publickey_add ; Add an authorized publickey
ssh2_publickey_init ; Initialize Publickey subsystem
ssh2_publickey_list ; List currently authorized publickeys
ssh2_publickey_remove ; Remove an authorized publickey
ssh2_scp_recv ; Request a file via SCP
ssh2_scp_send ; Send a file via SCP
ssh2_sftp ; Initialize SFTP subsystem
ssh2_sftp_chmod ; Changes file mode
ssh2_sftp_lstat ; Stat a symbolic link
ssh2_sftp_mkdir ; Create a directory
ssh2_sftp_readlink ; Return the target of a symbolic link
ssh2_sftp_realpath ; Resolve the realpath of a provided path string
ssh2_sftp_rename ; Rename a remote file
ssh2_sftp_rmdir ; Remove a directory
ssh2_sftp_stat ; Stat a file on a remote filesystem
ssh2_sftp_symlink ; Create a symlink
ssh2_sftp_unlink ; Delete a file
ssh2_shell ; Request an interactive shell
ssh2_tunnel ; Open a tunnel through a remote server
SSL context options ; SSL context option listing
Stackable::isRunning ; State Detection
Stackable::isTerminated ; State Detection
Stackable::isWaiting ; State Detection
Stackable::lock ; Synchronization
Stackable::notify ; Synchronization
Stackable::run ; Execution
Stackable::synchronized ; Synchronization
Stackable::unlock ; Synchronization
Stackable::wait ; Synchronization
stat ; 给出文件的信息
stats_absolute_deviation ; Returns the absolute deviation of an array of values
stats_cdf_beta ; CDF function for BETA Distribution. Calculates any one parameter of the beta distribution given values for the others.
stats_cdf_binomial ; Calculates any one parameter of the binomial distribution given values for the others.
stats_cdf_cauchy ; Not documented
stats_cdf_chisquare ; Calculates any one parameter of the chi-square distribution given values for the others.
stats_cdf_exponential ; Not documented
stats_cdf_f ; Calculates any one parameter of the F distribution given values for the others.
stats_cdf_gamma ; Calculates any one parameter of the gamma distribution given values for the others.
stats_cdf_laplace ; Not documented
stats_cdf_logistic ; Not documented
stats_cdf_negative_binomial ; Calculates any one parameter of the negative binomial distribution given values for the others.
stats_cdf_noncentral_chisquare ; Calculates any one parameter of the non-central chi-square distribution given values for the others.
stats_cdf_noncentral_f ; Calculates any one parameter of the Non-central F distribution given values for the others.
stats_cdf_poisson ; Calculates any one parameter of the Poisson distribution given values for the others.
stats_cdf_t ; Calculates any one parameter of the T distribution given values for the others.
stats_cdf_uniform ; Not documented
stats_cdf_weibull ; Not documented
stats_covariance ; Computes the covariance of two data sets
stats_dens_beta ; Not documented
stats_dens_cauchy ; Not documented
stats_dens_chisquare ; Not documented
stats_dens_exponential ; Not documented
stats_dens_f ; 说明
stats_dens_gamma ; Not documented
stats_dens_laplace ; Not documented
stats_dens_logistic ; Not documented
stats_dens_negative_binomial ; Not documented
stats_dens_normal ; Not documented
stats_dens_pmf_binomial ; Not documented
stats_dens_pmf_hypergeometric ; 说明
stats_dens_pmf_poisson ; Not documented
stats_dens_t ; Not documented
stats_dens_weibull ; Not documented
stats_den_uniform ; Not documented
stats_harmonic_mean ; Returns the harmonic mean of an array of values
stats_kurtosis ; Computes the kurtosis of the data in the array
stats_rand_gen_beta ; Generates beta random deviate
stats_rand_gen_chisquare ; Generates random deviate from the distribution of a chisquare with &quot;df&quot; degrees of freedom random variable.
stats_rand_gen_exponential ; Generates a single random deviate from an exponential distribution with mean &quot;av&quot;
stats_rand_gen_f ; Generates a random deviate
stats_rand_gen_funiform ; Generates uniform float between low (exclusive) and high (exclusive)
stats_rand_gen_gamma ; Generates random deviates from a gamma distribution
stats_rand_gen_ibinomial ; Generates a single random deviate from a binomial distribution whose number of trials is &quot;n&quot; (n &gt;= 0) and whose probability of an event in each trial is &quot;pp&quot; ([0;1]). Method : algorithm BTPE
stats_rand_gen_ibinomial_negative ; Generates a single random deviate from a negative binomial distribution. Arguments : n - the number of trials in the negative binomial distribution from which a random deviate is to be generated (n &gt; 0), p - the probability of an event (0 &lt; p &lt; 1)).
stats_rand_gen_int ; Generates random integer between 1 and 2147483562
stats_rand_gen_ipoisson ; Generates a single random deviate from a Poisson distribution with mean &quot;mu&quot; (mu &gt;= 0.0).
stats_rand_gen_iuniform ; Generates integer uniformly distributed between LOW (inclusive) and HIGH (inclusive)
stats_rand_gen_noncenral_chisquare ; Generates random deviate from the distribution of a noncentral chisquare with &quot;df&quot; degrees of freedom and noncentrality parameter &quot;xnonc&quot;. d must be &gt;= 1.0, xnonc must &gt;= 0.0
stats_rand_gen_noncentral_f ; Generates a random deviate from the noncentral F (variance ratio) distribution with &quot;dfn&quot; degrees of freedom in the numerator, and &quot;dfd&quot; degrees of freedom in the denominator, and noncentrality parameter &quot;xnonc&quot;. Method : directly generates ratio of noncentral numerator chisquare variate to central denominator chisquare variate.
stats_rand_gen_noncentral_t ; Generates a single random deviate from a noncentral T distribution
stats_rand_gen_normal ; Generates a single random deviate from a normal distribution with mean, av, and standard deviation, sd (sd &gt;= 0). Method : Renames SNORM from TOMS as slightly modified by BWB to use RANF instead of SUNIF.
stats_rand_gen_t ; Generates a single random deviate from a T distribution
stats_rand_get_seeds ; Not documented
stats_rand_phrase_to_seeds ; generate two seeds for the RGN random number generator
stats_rand_ranf ; Returns a random floating point number from a uniform distribution over 0 - 1 (endpoints of this interval are not returned) using the current generator
stats_rand_setall ; Not documented
stats_skew ; Computes the skewness of the data in the array
stats_standard_deviation ; Returns the standard deviation
stats_stat_binomial_coef ; Not documented
stats_stat_correlation ; Not documented
stats_stat_gennch ; Not documented
stats_stat_independent_t ; Not documented
stats_stat_innerproduct ; 说明
stats_stat_noncentral_t ; Calculates any one parameter of the noncentral t distribution give values for the others.
stats_stat_paired_t ; Not documented
stats_stat_percentile ; Not documented
stats_stat_powersum ; Not documented
stats_variance ; Returns the population variance
Stomp::abort ; Rolls back a transaction in progress
Stomp::ack ; Acknowledges consumption of a message
Stomp::begin ; Starts a transaction
Stomp::commit ; Commits a transaction in progress
Stomp::error ; Gets the last stomp error
Stomp::getReadTimeout ; Gets read timeout
Stomp::getSessionId ; Gets the current stomp session ID
Stomp::hasFrame ; Indicates whether or not there is a frame ready to read
Stomp::readFrame ; Reads the next frame
Stomp::send ; Sends a message
Stomp::setReadTimeout ; Sets read timeout
Stomp::subscribe ; Registers to listen to a given destination
Stomp::unsubscribe ; Removes an existing subscription
Stomp::__construct ; Opens a connection
Stomp::__destruct ; Closes stomp connection
StompException::getDetails ; Get exception details
StompFrame::__construct ; Constructor
stomp_connect_error ; Returns a string description of the last connect error
stomp_version ; Gets the current stomp extension version
strcasecmp ; 二进制安全比较字符串（不区分大小写）
strchr ; 别名 strstr
strcmp ; 二进制安全字符串比较
strcoll ; 基于区域设置的字符串比较
strcspn ; 获取不匹配遮罩的起始子字符串的长度
streamWrapper::dir_closedir ; Close directory handle
streamWrapper::dir_opendir ; Open directory handle
streamWrapper::dir_readdir ; Read entry from directory handle
streamWrapper::dir_rewinddir ; Rewind directory handle
streamWrapper::mkdir ; Create a directory
streamWrapper::rename ; Renames a file or directory
streamWrapper::rmdir ; Removes a directory
streamWrapper::stream_cast ; Retrieve the underlaying resource
streamWrapper::stream_close ; Close an resource
streamWrapper::stream_eof ; Tests for end-of-file on a file pointer
streamWrapper::stream_flush ; Flushes the output
streamWrapper::stream_lock ; Advisory file locking
streamWrapper::stream_metadata ; Change stream options
streamWrapper::stream_open ; Opens file or URL
streamWrapper::stream_read ; Read from stream
streamWrapper::stream_seek ; Seeks to specific location in a stream
streamWrapper::stream_set_option ; Change stream options
streamWrapper::stream_stat ; Retrieve information about a file resource
streamWrapper::stream_tell ; Retrieve the current position of a stream
streamWrapper::stream_truncate ; Truncate stream
streamWrapper::stream_write ; Write to stream
streamWrapper::unlink ; Delete a file
streamWrapper::url_stat ; Retrieve information about a file
streamWrapper::__construct ; Constructs a new stream wrapper
streamWrapper::__destruct ; Destructs an existing stream wrapper
stream_bucket_append ; Append bucket to brigade
stream_bucket_make_writeable ; Return a bucket object from the brigade for operating on
stream_bucket_new ; Create a new bucket for use on the current stream
stream_bucket_prepend ; Prepend bucket to brigade
stream_context_create ; Creates a stream context
stream_context_get_default ; Retrieve the default stream context
stream_context_get_options ; Retrieve options for a stream/wrapper/context
stream_context_get_params ; Retrieves parameters from a context
stream_context_set_default ; Set the default stream context
stream_context_set_option ; Sets an option for a stream/wrapper/context
stream_context_set_params ; Set parameters for a stream/wrapper/context
stream_copy_to_stream ; Copies data from one stream to another
stream_encoding ; Set character set for stream encoding
stream_filter_append ; Attach a filter to a stream
stream_filter_prepend ; Attach a filter to a stream
stream_filter_register ; Register a user defined stream filter
stream_filter_remove ; Remove a filter from a stream
stream_get_contents ; Reads remainder of a stream into a string
stream_get_filters ; Retrieve list of registered filters
stream_get_line ; Gets line from stream resource up to a given delimiter
stream_get_meta_data ; 从封装协议文件指针中取得报头／元数据
stream_get_transports ; Retrieve list of registered socket transports
stream_get_wrappers ; Retrieve list of registered streams
stream_is_local ; Checks if a stream is a local stream
stream_notification_callback ; A callback function for the notification context paramater
stream_register_wrapper ; 注册一个用 PHP 类实现的 URL 封装协议
stream_resolve_include_path ; Resolve filename against the include path
stream_set_blocking ; Set blocking/non-blocking mode on a stream
stream_set_chunk_size ; Set the stream chunk size
stream_set_read_buffer ; Set read file buffering on the given stream
stream_set_timeout ; Set timeout period on a stream
stream_set_write_buffer ; Sets write file buffering on the given stream
stream_socket_accept ; Accept a connection on a socket created by stream_socket_server
stream_socket_client ; Open Internet or Unix domain socket connection
stream_socket_enable_crypto ; Turns encryption on/off on an already connected socket
stream_socket_get_name ; Retrieve the name of the local or remote sockets
stream_socket_pair ; Creates a pair of connected, indistinguishable socket streams
stream_socket_recvfrom ; Receives data from a socket, connected or not
stream_socket_sendto ; Sends a message to a socket, whether it is connected or not
stream_socket_server ; Create an Internet or Unix domain server socket
stream_socket_shutdown ; Shutdown a full-duplex connection
stream_supports_lock ; Tells whether the stream supports locking.
stream_wrapper_restore ; Restores a previously unregistered built-in wrapper
stream_wrapper_unregister ; Unregister a URL wrapper
strftime ; 根据区域设置格式化本地时间／日期
stripcslashes ; 反引用一个使用 addcslashes 转义的字符串
stripos ; 查找字符串首次出现的位置（不区分大小写）
stripslashes ; 反引用一个引用字符串
strip_tags ; 从字符串中去除 HTML 和 PHP 标记
stristr ; strstr 函数的忽略大小写版本
strlen ; 获取字符串长度
strnatcasecmp ; 使用&ldquo;自然顺序&rdquo;算法比较字符串（不区分大小写）
strnatcmp ; 使用自然排序算法比较字符串
strncasecmp ; 二进制安全比较字符串开头的若干个字符（不区分大小写）
strncmp ; 二进制安全比较字符串开头的若干个字符
strpbrk ; 在字符串中查找一组字符的任何一个字符
strpos ; 查找字符串首次出现的位置
strptime ; 解析由 strftime 生成的日期／时间
strrchr ; 查找指定字符在字符串中的最后一次出现
strrev ; 反转字符串
strripos ; 计算指定字符串在目标字符串中最后一次出现的位置（不区分大小写）
strrpos ; 计算指定字符串在目标字符串中最后一次出现的位置
strspn ; 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。
strstr ; 查找字符串的首次出现
strtok ; 标记分割字符串
strtolower ; 将字符串转化为小写
strtotime ; 将任何英文文本的日期时间描述解析为 Unix 时间戳
strtoupper ; 将字符串转化为大写
strtr ; 转换指定字符
strval ; 获取变量的字符串值
str_getcsv ; 解析 CSV 字符串为一个数组
str_ireplace ; str_replace 的忽略大小写版本
str_pad ; 使用另一个字符串填充字符串为指定长度
str_repeat ; 重复一个字符串
str_replace ; 子字符串替换
str_rot13 ; 对字符串执行 ROT13 转换
str_shuffle ; 随机打乱一个字符串
str_split ; 将字符串转换为数组
str_word_count ; 返回字符串中单词的使用情况
substr ; 返回字符串的子串
substr_compare ; 二进制安全比较字符串（从偏移位置比较指定长度）
substr_count ; 计算字串出现的次数
substr_replace ; 替换字符串的子串
SVM::crossvalidate ; Test training params on subsets of the training data.
SVM::getOptions ; Return the current training parameters
SVM::setOptions ; Set training parameters
SVM::train ; Create a SVMModel based on training data
SVM::__construct ; Construct a new SVM object
SVMModel::checkProbabilityModel ; Returns true if the model has probability information
SVMModel::getLabels ; Get the labels the model was trained on
SVMModel::getNrClass ; Returns the number of classes the model was trained with
SVMModel::getSvmType ; Get the SVM type the model was trained with
SVMModel::getSvrProbability ; Get the sigma value for regression types
SVMModel::load ; Load a saved SVM Model
SVMModel::predict ; Predict a value for previously unseen data
SVMModel::predict_probability ; Return class probabilities for previous unseen data
SVMModel::save ; Save a model to a file
SVMModel::__construct ; Construct a new SVMModel
svn_add ; Schedules the addition of an item in a working directory
svn_auth_get_parameter ; Retrieves authentication parameter
svn_auth_set_parameter ; Sets an authentication parameter
svn_blame ; Get the SVN blame for a file
svn_cat ; Returns the contents of a file in a repository
svn_checkout ; Checks out a working copy from the repository
svn_cleanup ; Recursively cleanup a working copy directory, finishing incomplete operations and removing locks
svn_client_version ; Returns the version of the SVN client libraries
svn_commit ; Sends changes from the local working copy to the repository
svn_delete ; Delete items from a working copy or repository.
svn_diff ; Recursively diffs two paths
svn_export ; Export the contents of a SVN directory
svn_fs_abort_txn ; Abort a transaction, returns true if everything is okay, false otherwise
svn_fs_apply_text ; Creates and returns a stream that will be used to replace
svn_fs_begin_txn2 ; Create a new transaction
svn_fs_change_node_prop ; Return true if everything is ok, false otherwise
svn_fs_check_path ; Determines what kind of item lives at path in a given repository fsroot
svn_fs_contents_changed ; Return true if content is different, false otherwise
svn_fs_copy ; Copies a file or a directory, returns true if all is ok, false otherwise
svn_fs_delete ; Deletes a file or a directory, return true if all is ok, false otherwise
svn_fs_dir_entries ; Enumerates the directory entries under path; returns a hash of dir names to file type
svn_fs_file_contents ; Returns a stream to access the contents of a file from a given version of the fs
svn_fs_file_length ; Returns the length of a file from a given version of the fs
svn_fs_is_dir ; Return true if the path points to a directory, false otherwise
svn_fs_is_file ; Return true if the path points to a file, false otherwise
svn_fs_make_dir ; Creates a new empty directory, returns true if all is ok, false otherwise
svn_fs_make_file ; Creates a new empty file, returns true if all is ok, false otherwise
svn_fs_node_created_rev ; Returns the revision in which path under fsroot was created
svn_fs_node_prop ; Returns the value of a property for a node
svn_fs_props_changed ; Return true if props are different, false otherwise
svn_fs_revision_prop ; Fetches the value of a named property
svn_fs_revision_root ; Get a handle on a specific version of the repository root
svn_fs_txn_root ; Creates and returns a transaction root
svn_fs_youngest_rev ; Returns the number of the youngest revision in the filesystem
svn_import ; Imports an unversioned path into a repository
svn_log ; Returns the commit log messages of a repository URL
svn_ls ; Returns list of directory contents in repository URL, optionally at revision number
svn_mkdir ; Creates a directory in a working copy or repository
svn_repos_create ; Create a new subversion repository at path
svn_repos_fs ; Gets a handle on the filesystem for a repository
svn_repos_fs_begin_txn_for_commit ; Create a new transaction
svn_repos_fs_commit_txn ; Commits a transaction and returns the new revision
svn_repos_hotcopy ; Make a hot-copy of the repos at repospath; copy it to destpath
svn_repos_open ; Open a shared lock on a repository.
svn_repos_recover ; Run recovery procedures on the repository located at path.
svn_revert ; Revert changes to the working copy
svn_status ; Returns the status of working copy files and directories
svn_update ; Update working copy
SWFAction::__construct ; Creates a new SWFAction
SWFBitmap::getHeight ; Returns the bitmap's height
SWFBitmap::getWidth ; Returns the bitmap's width
SWFBitmap::__construct ; Loads Bitmap object
SWFButton::addAction ; Adds an action
SWFButton::addASound ; Associates a sound with a button transition
SWFButton::addShape ; Adds a shape to a button
SWFButton::setAction ; Sets the action
SWFButton::setDown ; Alias for addShape(shape, SWFBUTTON_DOWN)
SWFButton::setHit ; Alias for addShape(shape, SWFBUTTON_HIT)
SWFButton::setMenu ; enable track as menu button behaviour
SWFButton::setOver ; Alias for addShape(shape, SWFBUTTON_OVER)
SWFButton::setUp ; Alias for addShape(shape, SWFBUTTON_UP)
SWFButton::__construct ; Creates a new Button
SWFDisplayItem::addAction ; Adds this SWFAction to the given SWFSprite instance
SWFDisplayItem::addColor ; Adds the given color to this item's color transform
SWFDisplayItem::endMask ; Another way of defining a MASK layer
SWFDisplayItem::getRot ; 说明
SWFDisplayItem::getX ; 说明
SWFDisplayItem::getXScale ; 说明
SWFDisplayItem::getXSkew ; 说明
SWFDisplayItem::getY ; 说明
SWFDisplayItem::getYScale ; 说明
SWFDisplayItem::getYSkew ; 说明
SWFDisplayItem::move ; Moves object in relative coordinates
SWFDisplayItem::moveTo ; Moves object in global coordinates
SWFDisplayItem::multColor ; Multiplies the item's color transform
SWFDisplayItem::remove ; Removes the object from the movie
SWFDisplayItem::rotate ; Rotates in relative coordinates
SWFDisplayItem::rotateTo ; Rotates the object in global coordinates
SWFDisplayItem::scale ; Scales the object in relative coordinates
SWFDisplayItem::scaleTo ; Scales the object in global coordinates
SWFDisplayItem::setDepth ; Sets z-order
SWFDisplayItem::setMaskLevel ; Defines a MASK layer at level
SWFDisplayItem::setMatrix ; Sets the item's transform matrix
SWFDisplayItem::setName ; Sets the object's name
SWFDisplayItem::setRatio ; Sets the object's ratio
SWFDisplayItem::skewX ; Sets the X-skew
SWFDisplayItem::skewXTo ; Sets the X-skew
SWFDisplayItem::skewY ; Sets the Y-skew
SWFDisplayItem::skewYTo ; Sets the Y-skew
SWFFill::moveTo ; Moves fill origin
SWFFill::rotateTo ; Sets fill's rotation
SWFFill::scaleTo ; Sets fill's scale
SWFFill::skewXTo ; Sets fill x-skew
SWFFill::skewYTo ; Sets fill y-skew
SWFFont::getAscent ; Returns the ascent of the font, or 0 if not available
SWFFont::getDescent ; Returns the descent of the font, or 0 if not available
SWFFont::getLeading ; Returns the leading of the font, or 0 if not available
SWFFont::getShape ; Returns the glyph shape of a char as a text string
SWFFont::getUTF8Width ; Calculates the width of the given string in this font at full height
SWFFont::getWidth ; Returns the string's width
SWFFont::__construct ; Loads a font definition
SWFFontChar::addChars ; Adds characters to a font for exporting font
SWFFontChar::addUTF8Chars ; Adds characters to a font for exporting font
SWFGradient::addEntry ; Adds an entry to the gradient list
SWFGradient::__construct ; Creates a gradient object
SWFMorph::getShape1 ; Gets a handle to the starting shape
SWFMorph::getShape2 ; Gets a handle to the ending shape
SWFMorph::__construct ; Creates a new SWFMorph object
SWFMovie::add ; Adds any type of data to a movie
SWFMovie::addExport ; 说明
SWFMovie::addFont ; 说明
SWFMovie::importChar ; 说明
SWFMovie::importFont ; 说明
SWFMovie::labelFrame ; Labels a frame
SWFMovie::nextFrame ; Moves to the next frame of the animation
SWFMovie::output ; Dumps your lovingly prepared movie out
SWFMovie::remove ; Removes the object instance from the display list
SWFMovie::save ; Saves the SWF movie in a file
SWFMovie::saveToFile ; 说明
SWFMovie::setbackground ; Sets the background color
SWFMovie::setDimension ; Sets the movie's width and height
SWFMovie::setFrames ; Sets the total number of frames in the animation
SWFMovie::setRate ; Sets the animation's frame rate
SWFMovie::startSound ; 说明
SWFMovie::stopSound ; 说明
SWFMovie::streamMP3 ; Streams a MP3 file
SWFMovie::writeExports ; 说明
SWFMovie::__construct ; Creates a new movie object, representing an SWF version 4 movie
SWFPrebuiltClip::__construct ; Returns a SWFPrebuiltClip object
SWFShape::addFill ; Adds a solid fill to the shape
SWFShape::drawArc ; Draws an arc of radius r centered at the current location, from angle startAngle to angle endAngle measured clockwise from 12 o'clock
SWFShape::drawCircle ; Draws a circle of radius r centered at the current location, in a counter-clockwise fashion
SWFShape::drawCubic ; Draws a cubic bezier curve using the current position and the three given points as control points
SWFShape::drawCubicTo ; Draws a cubic bezier curve using the current position and the three given points as control points
SWFShape::drawCurve ; Draws a curve (relative)
SWFShape::drawCurveTo ; Draws a curve
SWFShape::drawGlyph ; Draws the first character in the given string into the shape using the glyph definition from the given font
SWFShape::drawLine ; Draws a line (relative)
SWFShape::drawLineTo ; Draws a line
SWFShape::movePen ; Moves the shape's pen (relative)
SWFShape::movePenTo ; Moves the shape's pen
SWFShape::setLeftFill ; Sets left rasterizing color
SWFShape::setLine ; Sets the shape's line style
SWFShape::setRightFill ; Sets right rasterizing color
SWFShape::__construct ; Creates a new shape object
SWFSound::__construct ; Returns a new SWFSound object from given file
SWFSoundInstance::loopCount ; 说明
SWFSoundInstance::loopInPoint ; 说明
SWFSoundInstance::loopOutPoint ; 说明
SWFSoundInstance::noMultiple ; 说明
SWFSprite::add ; Adds an object to a sprite
SWFSprite::labelFrame ; Labels frame
SWFSprite::nextFrame ; Moves to the next frame of the animation
SWFSprite::remove ; Removes an object to a sprite
SWFSprite::setFrames ; Sets the total number of frames in the animation
SWFSprite::startSound ; 说明
SWFSprite::stopSound ; 说明
SWFSprite::__construct ; Creates a movie clip (a sprite)
SWFText::addString ; Draws a string
SWFText::getAscent ; Returns the ascent of the current font at its current size, or 0 if not available
SWFText::getDescent ; Returns the descent of the current font at its current size, or 0 if not available
SWFText::getLeading ; Returns the leading of the current font at its current size, or 0 if not available
SWFText::getUTF8Width ; calculates the width of the given string in this text objects current font and size
SWFText::getWidth ; Computes string's width
SWFText::moveTo ; Moves the pen
SWFText::setColor ; Sets the current text color
SWFText::setFont ; Sets the current font
SWFText::setHeight ; Sets the current font height
SWFText::setSpacing ; Sets the current font spacing
SWFText::__construct ; Creates a new SWFText object
SWFTextField::addChars ; adds characters to a font that will be available within a textfield
SWFTextField::addString ; Concatenates the given string to the text field
SWFTextField::align ; Sets the text field alignment
SWFTextField::setBounds ; Sets the text field width and height
SWFTextField::setColor ; Sets the color of the text field
SWFTextField::setFont ; Sets the text field font
SWFTextField::setHeight ; Sets the font height of this text field font
SWFTextField::setIndentation ; Sets the indentation of the first line
SWFTextField::setLeftMargin ; Sets the left margin width of the text field
SWFTextField::setLineSpacing ; Sets the line spacing of the text field
SWFTextField::setMargins ; Sets the margins width of the text field
SWFTextField::setName ; Sets the variable name
SWFTextField::setPadding ; Sets the padding of this textfield
SWFTextField::setRightMargin ; Sets the right margin width of the text field
SWFTextField::__construct ; Creates a text field object
SWFVideoStream::getNumFrames ; Returns the number of frames in the video
SWFVideoStream::setDimension ; Sets video dimension
SWFVideoStream::__construct ; Returns a SWFVideoStream object
swf_actiongeturl ; Get a URL from a Shockwave Flash movie
swf_actiongotoframe ; Play a frame and then stop
swf_actiongotolabel ; Display a frame with the specified label
swf_actionnextframe ; Go forward one frame
swf_actionplay ; Start playing the flash movie from the current frame
swf_actionprevframe ; Go backwards one frame
swf_actionsettarget ; Set the context for actions
swf_actionstop ; Stop playing the flash movie at the current frame
swf_actiontogglequality ; Toggle between low and high quality
swf_actionwaitforframe ; Skip actions if a frame has not been loaded
swf_addbuttonrecord ; Controls location, appearance and active area of the current button
swf_addcolor ; Set the global add color to the rgba value specified
swf_closefile ; Close the current Shockwave Flash file
swf_definebitmap ; Define a bitmap
swf_definefont ; Defines a font
swf_defineline ; Define a line
swf_definepoly ; Define a polygon
swf_definerect ; Define a rectangle
swf_definetext ; Define a text string
swf_endbutton ; End the definition of the current button
swf_enddoaction ; End the current action
swf_endshape ; Completes the definition of the current shape
swf_endsymbol ; End the definition of a symbol
swf_fontsize ; Change the font size
swf_fontslant ; Set the font slant
swf_fonttracking ; Set the current font tracking
swf_getbitmapinfo ; Get information about a bitmap
swf_getfontinfo ; Gets font information
swf_getframe ; Get the frame number of the current frame
swf_labelframe ; Label the current frame
swf_lookat ; Define a viewing transformation
swf_modifyobject ; Modify an object
swf_mulcolor ; Sets the global multiply color to the rgba value specified
swf_nextid ; Returns the next free object id
swf_oncondition ; Describe a transition used to trigger an action list
swf_openfile ; Open a new Shockwave Flash file
swf_ortho ; Defines an orthographic mapping of user coordinates onto the current viewport
swf_ortho2 ; Defines 2D orthographic mapping of user coordinates onto the current viewport
swf_perspective ; Define a perspective projection transformation
swf_placeobject ; Place an object onto the screen
swf_polarview ; Define the viewer's position with polar coordinates
swf_popmatrix ; Restore a previous transformation matrix
swf_posround ; Enables or Disables the rounding of the translation when objects are placed or moved
swf_pushmatrix ; Push the current transformation matrix back onto the stack
swf_removeobject ; Remove an object
swf_rotate ; Rotate the current transformation
swf_scale ; Scale the current transformation
swf_setfont ; Change the current font
swf_setframe ; Switch to a specified frame
swf_shapearc ; Draw a circular arc
swf_shapecurveto ; Draw a quadratic bezier curve between two points
swf_shapecurveto3 ; Draw a cubic bezier curve
swf_shapefillbitmapclip ; Set current fill mode to clipped bitmap
swf_shapefillbitmaptile ; Set current fill mode to tiled bitmap
swf_shapefilloff ; Turns off filling
swf_shapefillsolid ; Set the current fill style to the specified color
swf_shapelinesolid ; Set the current line style
swf_shapelineto ; Draw a line
swf_shapemoveto ; Move the current position
swf_showframe ; Display the current frame
swf_startbutton ; Start the definition of a button
swf_startdoaction ; Start a description of an action list for the current frame
swf_startshape ; Start a complex shape
swf_startsymbol ; Define a symbol
swf_textwidth ; Get the width of a string
swf_translate ; Translate the current transformations
swf_viewport ; Select an area for future drawing
Swish::getMetaList ; Get the list of meta entries for the index
Swish::getPropertyList ; Get the list of properties for the index
Swish::prepare ; Prepare a search query
Swish::query ; Execute a query and return results object
Swish::__construct ; Construct a Swish object
SwishResult::getMetaList ; Get a list of meta entries
SwishResult::stem ; Stems the given word
SwishResults::getParsedWords ; Get an array of parsed words
SwishResults::getRemovedStopwords ; Get an array of stopwords removed from the query
SwishResults::nextResult ; Get the next search result
SwishResults::seekResult ; Set current seek pointer to the given position
SwishSearch::execute ; Execute the search and get the results
SwishSearch::resetLimit ; Reset the search limits
SwishSearch::setLimit ; Set the search limits
SwishSearch::setPhraseDelimiter ; Set the phrase delimiter
SwishSearch::setSort ; Set the sort order
SwishSearch::setStructure ; Set the structure flag in the search object
sybase_affected_rows ; Gets number of affected rows in last query
sybase_close ; Closes a Sybase connection
sybase_connect ; Opens a Sybase server connection
sybase_data_seek ; Moves internal row pointer
sybase_deadlock_retry_count ; Sets the deadlock retry count
sybase_fetch_array ; Fetch row as array
sybase_fetch_assoc ; Fetch a result row as an associative array
sybase_fetch_field ; Get field information from a result
sybase_fetch_object ; Fetch a row as an object
sybase_fetch_row ; Get a result row as an enumerated array
sybase_field_seek ; Sets field offset
sybase_free_result ; Frees result memory
sybase_get_last_message ; Returns the last message from the server
sybase_min_client_severity ; Sets minimum client severity
sybase_min_error_severity ; Sets minimum error severity
sybase_min_message_severity ; Sets minimum message severity
sybase_min_server_severity ; Sets minimum server severity
sybase_num_fields ; Gets the number of fields in a result set
sybase_num_rows ; Get number of rows in a result set
sybase_pconnect ; Open persistent Sybase connection
sybase_query ; Sends a Sybase query
sybase_result ; Get result data
sybase_select_db ; Selects a Sybase database
sybase_set_message_handler ; Sets the handler called when a server message is raised
sybase_unbuffered_query ; Send a Sybase query and do not block
symlink ; 建立符号连接
syslog ; Generate a system log message
system ; Execute an external program and display the output
sys_getloadavg ; 获取系统的负载（load average）
sys_get_temp_dir ; 返回用于临时文件的目录
taint ; Taint a string
tan ; 正切
tanh ; 双曲正切
tcpwrap_check ; Performs a tcpwrap check
tempnam ; 建立一个具有唯一文件名的文件
textdomain ; Sets the default domain
Thread::getCreatorId ; Identification
Thread::getThreadId ; Identification
Thread::isJoined ; State Detection
Thread::isRunning ; State Detection
Thread::isStarted ; State Detection
Thread::isTerminated ; State Detection
Thread::isWaiting ; State Detection
Thread::join ; Synchronization
Thread::lock ; Synchronization
Thread::notify ; Synchronization
Thread::run ; Execution
Thread::start ; Execution
Thread::synchronized ; Synchronization
Thread::unlock ; Synchronization
Thread::wait ; Synchronization
tidy::$errorBuffer ; Return warnings and errors which occurred parsing the specified document
tidy::body ; Returns a tidyNode object starting from the &lt;body&gt; tag of the tidy parse tree
tidy::cleanRepair ; Execute configured cleanup and repair operations on parsed markup
tidy::diagnose ; Run configured diagnostics on parsed and repaired markup
tidy::getConfig ; Get current Tidy configuration
tidy::getHtmlVer ; Get the Detected HTML version for the specified document
tidy::getOpt ; Returns the value of the specified configuration option for the tidy document
tidy::getoptdoc ; Returns the documentation for the given option name
tidy::getRelease ; Get release date (version) for Tidy library
tidy::getStatus ; Get status of specified document
tidy::head ; Returns a tidyNode object starting from the &lt;head&gt; tag of the tidy parse tree
tidy::html ; Returns a tidyNode object starting from the &lt;html&gt; tag of the tidy parse tree
tidy::isXhtml ; Indicates if the document is a XHTML document
tidy::isXml ; Indicates if the document is a generic (non HTML/XHTML) XML document
tidy::parseFile ; Parse markup in file or URI
tidy::parseString ; Parse a document stored in a string
tidy::repairFile ; Repair a file and return it as a string
tidy::repairString ; Repair a string using an optionally provided configuration file
tidy::root ; Returns a tidyNode object representing the root of the tidy parse tree
tidy::__construct ; Constructs a new tidy object
tidyNode::getParent ; Returns the parent node of the current node
tidyNode::hasChildren ; Checks if a node has children
tidyNode::hasSiblings ; Checks if a node has siblings
tidyNode::isAsp ; Checks if this node is ASP
tidyNode::isComment ; Checks if a node represents a comment
tidyNode::isHtml ; Checks if a node is part of a HTML document
tidyNode::isJste ; Checks if this node is JSTE
tidyNode::isPhp ; Checks if a node is PHP
tidyNode::isText ; Checks if a node represents text (no markup)
tidy_access_count ; Returns the Number of Tidy accessibility warnings encountered for specified document
tidy_config_count ; Returns the Number of Tidy configuration errors encountered for specified document
tidy_error_count ; Returns the Number of Tidy errors encountered for specified document
tidy_get_output ; Return a string representing the parsed tidy markup
tidy_load_config ; Load an ASCII Tidy configuration file with the specified encoding
tidy_reset_config ; Restore Tidy configuration to default values
tidy_save_config ; Save current settings to named file
tidy_setopt ; Updates the configuration settings for the specified tidy document
tidy_set_encoding ; Set the input/output character encoding for parsing markup
tidy_warning_count ; Returns the Number of Tidy warnings encountered for specified document
time ; 返回当前的 Unix 时间戳
timezone_abbreviations_list ; 别名 DateTimeZone::listAbbreviations
timezone_identifiers_list ; 别名 DateTimeZone::listIdentifiers
timezone_location_get ; 别名 DateTimeZone::getLocation
timezone_name_from_abbr ; Returns the timezone name from abbreviation
timezone_name_get ; 别名 DateTimeZone::getName
timezone_offset_get ; 别名 DateTimeZone::getOffset
timezone_open ; 别名 DateTimeZone::__construct
timezone_transitions_get ; 别名 DateTimeZone::getTransitions
timezone_version_get ; Gets the version of the timezonedb
time_nanosleep ; 延缓执行若干秒和纳秒
time_sleep_until ; 使脚本睡眠到指定的时间为止。
tmpfile ; 建立一个临时文件
token_get_all ; Split given source into PHP tokens
token_name ; Get the symbolic name of a given PHP token
TokyoTyrant::add ; Adds to a numeric key
TokyoTyrant::connect ; Connect to a database
TokyoTyrant::connectUri ; Connects to a database
TokyoTyrant::copy ; Copies the database
TokyoTyrant::ext ; Execute a remote script
TokyoTyrant::fwmKeys ; Returns the forward matching keys
TokyoTyrant::get ; The get purpose
TokyoTyrant::getIterator ; Get an iterator
TokyoTyrant::num ; Number of records in the database
TokyoTyrant::out ; Removes records
TokyoTyrant::put ; Puts values
TokyoTyrant::putCat ; Concatenates to a record
TokyoTyrant::putKeep ; Puts a record
TokyoTyrant::putNr ; Puts value
TokyoTyrant::putShl ; Concatenates to a record
TokyoTyrant::restore ; Restore the database
TokyoTyrant::setMaster ; Set the replication master
TokyoTyrant::size ; Returns the size of the value
TokyoTyrant::stat ; Get statistics
TokyoTyrant::sync ; Synchronize the database
TokyoTyrant::tune ; Tunes connection values
TokyoTyrant::vanish ; Empties the database
TokyoTyrant::__construct ; Construct a new TokyoTyrant object
TokyoTyrantIterator::current ; Get the current value
TokyoTyrantIterator::key ; Returns the current key
TokyoTyrantIterator::next ; Move to next key
TokyoTyrantIterator::rewind ; Rewinds the iterator
TokyoTyrantIterator::valid ; Rewinds the iterator
TokyoTyrantIterator::__construct ; Construct an iterator
TokyoTyrantQuery::addCond ; Adds a condition to the query
TokyoTyrantQuery::count ; Counts records
TokyoTyrantQuery::current ; Returns the current element
TokyoTyrantQuery::hint ; Get the hint string of the query
TokyoTyrantQuery::key ; Returns the current key
TokyoTyrantQuery::metaSearch ; Retrieve records with multiple queries
TokyoTyrantQuery::next ; Moves the iterator to next entry
TokyoTyrantQuery::out ; Removes records based on query
TokyoTyrantQuery::rewind ; Rewinds the iterator
TokyoTyrantQuery::search ; Searches records
TokyoTyrantQuery::setLimit ; Limit results
TokyoTyrantQuery::setOrder ; Orders results
TokyoTyrantQuery::valid ; Checks the validity of current item
TokyoTyrantQuery::__construct ; Construct a new query
TokyoTyrantTable::add ; Adds a record
TokyoTyrantTable::genUid ; Generate unique id
TokyoTyrantTable::get ; Get a row
TokyoTyrantTable::getIterator ; Get an iterator
TokyoTyrantTable::getQuery ; Get a query object
TokyoTyrantTable::out ; Remove records
TokyoTyrantTable::put ; Store a row
TokyoTyrantTable::putCat ; Concatenates to a row
TokyoTyrantTable::putKeep ; Put a new record
TokyoTyrantTable::putNr ; Puts value
TokyoTyrantTable::putShl ; Concatenates to a record
TokyoTyrantTable::setIndex ; Sets index
touch ; 设定文件的访问和修改时间
trader_acos ; Vector Trigonometric ACos
trader_ad ; Chaikin A/D Line
trader_add ; Vector Arithmetic Add
trader_adosc ; Chaikin A/D Oscillator
trader_adx ; Average Directional Movement Index
trader_adxr ; Average Directional Movement Index Rating
trader_apo ; Absolute Price Oscillator
trader_aroon ; Aroon
trader_aroonosc ; Aroon Oscillator
trader_asin ; Vector Trigonometric ASin
trader_atan ; Vector Trigonometric ATan
trader_atr ; Average True Range
trader_avgprice ; Average Price
trader_bbands ; Bollinger Bands
trader_beta ; Beta
trader_bop ; Balance Of Power
trader_cci ; Commodity Channel Index
trader_cdl2crows ; Two Crows
trader_cdl3blackcrows ; Three Black Crows
trader_cdl3inside ; Three Inside Up/Down
trader_cdl3linestrike ; Three-Line Strike
trader_cdl3outside ; Three Outside Up/Down
trader_cdl3starsinsouth ; Three Stars In The South
trader_cdl3whitesoldiers ; Three Advancing White Soldiers
trader_cdlabandonedbaby ; Abandoned Baby
trader_cdladvanceblock ; Advance Block
trader_cdlbelthold ; Belt-hold
trader_cdlbreakaway ; Breakaway
trader_cdlclosingmarubozu ; Closing Marubozu
trader_cdlconcealbabyswall ; Concealing Baby Swallow
trader_cdlcounterattack ; Counterattack
trader_cdldarkcloudcover ; Dark Cloud Cover
trader_cdldoji ; Doji
trader_cdldojistar ; Doji Star
trader_cdldragonflydoji ; Dragonfly Doji
trader_cdlengulfing ; Engulfing Pattern
trader_cdleveningdojistar ; Evening Doji Star
trader_cdleveningstar ; Evening Star
trader_cdlgapsidesidewhite ; Up/Down-gap side-by-side white lines
trader_cdlgravestonedoji ; Gravestone Doji
trader_cdlhammer ; Hammer
trader_cdlhangingman ; Hanging Man
trader_cdlharami ; Harami Pattern
trader_cdlharamicross ; Harami Cross Pattern
trader_cdlhighwave ; High-Wave Candle
trader_cdlhikkake ; Hikkake Pattern
trader_cdlhikkakemod ; Modified Hikkake Pattern
trader_cdlhomingpigeon ; Homing Pigeon
trader_cdlidentical3crows ; Identical Three Crows
trader_cdlinneck ; In-Neck Pattern
trader_cdlinvertedhammer ; Inverted Hammer
trader_cdlkicking ; Kicking
trader_cdlkickingbylength ; Kicking - bull/bear determined by the longer marubozu
trader_cdlladderbottom ; Ladder Bottom
trader_cdllongleggeddoji ; Long Legged Doji
trader_cdllongline ; Long Line Candle
trader_cdlmarubozu ; Marubozu
trader_cdlmatchinglow ; Matching Low
trader_cdlmathold ; Mat Hold
trader_cdlmorningdojistar ; Morning Doji Star
trader_cdlmorningstar ; Morning Star
trader_cdlonneck ; On-Neck Pattern
trader_cdlpiercing ; Piercing Pattern
trader_cdlrickshawman ; Rickshaw Man
trader_cdlrisefall3methods ; Rising/Falling Three Methods
trader_cdlseparatinglines ; Separating Lines
trader_cdlshootingstar ; Shooting Star
trader_cdlshortline ; Short Line Candle
trader_cdlspinningtop ; Spinning Top
trader_cdlstalledpattern ; Stalled Pattern
trader_cdlsticksandwich ; Stick Sandwich
trader_cdltakuri ; Takuri (Dragonfly Doji with very long lower shadow)
trader_cdltasukigap ; Tasuki Gap
trader_cdlthrusting ; Thrusting Pattern
trader_cdltristar ; Tristar Pattern
trader_cdlunique3river ; Unique 3 River
trader_cdlupsidegap2crows ; Upside Gap Two Crows
trader_cdlxsidegap3methods ; Upside/Downside Gap Three Methods
trader_ceil ; Vector Ceil
trader_cmo ; Chande Momentum Oscillator
trader_correl ; Pearson's Correlation Coefficient (r)
trader_cos ; Vector Trigonometric Cos
trader_cosh ; Vector Trigonometric Cosh
trader_dema ; Double Exponential Moving Average
trader_div ; Vector Arithmetic Div
trader_dx ; Directional Movement Index
trader_ema ; Exponential Moving Average
trader_errno ; Get error code
trader_exp ; Vector Arithmetic Exp
trader_floor ; Vector Floor
trader_get_compat ; Get compatibility mode
trader_get_unstable_period ; Get unstable period
trader_ht_dcperiod ; Hilbert Transform - Dominant Cycle Period
trader_ht_dcphase ; Hilbert Transform - Dominant Cycle Phase
trader_ht_phasor ; Hilbert Transform - Phasor Components
trader_ht_sine ; Hilbert Transform - SineWave
trader_ht_trendline ; Hilbert Transform - Instantaneous Trendline
trader_ht_trendmode ; Hilbert Transform - Trend vs Cycle Mode
trader_kama ; Kaufman Adaptive Moving Average
trader_linearreg ; Linear Regression
trader_linearreg_angle ; Linear Regression Angle
trader_linearreg_intercept ; Linear Regression Intercept
trader_linearreg_slope ; Linear Regression Slope
trader_ln ; Vector Log Natural
trader_log10 ; Vector Log10
trader_ma ; Moving average
trader_macd ; Moving Average Convergence/Divergence
trader_macdext ; MACD with controllable MA type
trader_macdfix ; Moving Average Convergence/Divergence Fix 12/26
trader_mama ; MESA Adaptive Moving Average
trader_mavp ; Moving average with variable period
trader_max ; Highest value over a specified period
trader_maxindex ; Index of highest value over a specified period
trader_medprice ; Median Price
trader_mfi ; Money Flow Index
trader_midpoint ; MidPoint over period
trader_midprice ; Midpoint Price over period
trader_min ; Lowest value over a specified period
trader_minindex ; Index of lowest value over a specified period
trader_minmax ; Lowest and highest values over a specified period
trader_minmaxindex ; Indexes of lowest and highest values over a specified period
trader_minus_di ; Minus Directional Indicator
trader_minus_dm ; Minus Directional Movement
trader_mom ; Momentum
trader_mult ; Vector Arithmetic Mult
trader_natr ; Normalized Average True Range
trader_obv ; On Balance Volume
trader_plus_di ; Plus Directional Indicator
trader_plus_dm ; Plus Directional Movement
trader_ppo ; Percentage Price Oscillator
trader_roc ; Rate of change : ((price/prevPrice)-1)*100
trader_rocp ; Rate of change Percentage: (price-prevPrice)/prevPrice
trader_rocr ; Rate of change ratio: (price/prevPrice)
trader_rocr100 ; Rate of change ratio 100 scale: (price/prevPrice)*100
trader_rsi ; Relative Strength Index
trader_sar ; Parabolic SAR
trader_sarext ; Parabolic SAR - Extended
trader_set_compat ; Set compatibility mode
trader_set_unstable_period ; Set unstable period
trader_sin ; Vector Trigonometric Sin
trader_sinh ; Vector Trigonometric Sinh
trader_sma ; Simple Moving Average
trader_sqrt ; Vector Square Root
trader_stddev ; Standard Deviation
trader_stoch ; Stochastic
trader_stochf ; Stochastic Fast
trader_stochrsi ; Stochastic Relative Strength Index
trader_sub ; Vector Arithmetic Subtraction
trader_sum ; Summation
trader_t3 ; Triple Exponential Moving Average (T3)
trader_tan ; Vector Trigonometric Tan
trader_tanh ; Vector Trigonometric Tanh
trader_tema ; Triple Exponential Moving Average
trader_trange ; True Range
trader_trima ; Triangular Moving Average
trader_trix ; 1-day Rate-Of-Change (ROC) of a Triple Smooth EMA
trader_tsf ; Time Series Forecast
trader_typprice ; Typical Price
trader_ultosc ; Ultimate Oscillator
trader_var ; Variance
trader_wclprice ; Weighted Close Price
trader_willr ; Williams' %R
trader_wma ; Weighted Moving Average
trait_exists ; 检查指定的 trait 是否存在
Transliterator::create ; Create a transliterator
Transliterator::createFromRules ; Create transliterator from rules
Transliterator::createInverse ; Create an inverse transliterator
Transliterator::getErrorCode ; Get last error code
Transliterator::getErrorMessage ; Get last error message
Transliterator::listIDs ; Get transliterator IDs
Transliterator::transliterate ; Transliterate a string
Transliterator::__construct ; Private constructor to deny instantiation
trigger_error ; 产生一个用户级别的 error/warning/notice 信息
trim ; 去除字符串首尾处的空白字符（或者其他字符）
uasort ; 使用用户自定义的比较函数对数组中的值进行排序并保持索引关联
ucfirst ; 将字符串的首字母转换为大写
ucwords ; 将字符串中每个单词的首字母转换为大写
udm_add_search_limit ; Add various search limits
udm_alloc_agent ; Allocate mnoGoSearch session
udm_alloc_agent_array ; Allocate mnoGoSearch session
udm_api_version ; Get mnoGoSearch API version
udm_cat_list ; Get all the categories on the same level with the current one
udm_cat_path ; Get the path to the current category
udm_check_charset ; Check if the given charset is known to mnogosearch
udm_check_stored ; Check connection to stored
udm_clear_search_limits ; Clear all mnoGoSearch search restrictions
udm_close_stored ; Close connection to stored
udm_crc32 ; Return CRC32 checksum of given string
udm_errno ; Get mnoGoSearch error number
udm_error ; Get mnoGoSearch error message
udm_find ; Perform search
udm_free_agent ; Free mnoGoSearch session
udm_free_ispell_data ; Free memory allocated for ispell data
udm_free_res ; Free mnoGoSearch result
udm_get_doc_count ; Get total number of documents in database
udm_get_res_field ; Fetch a result field
udm_get_res_param ; Get mnoGoSearch result parameters
udm_hash32 ; Return Hash32 checksum of gived string
udm_load_ispell_data ; Load ispell data
udm_open_stored ; Open connection to stored
udm_set_agent_param ; Set mnoGoSearch agent session parameters
uksort ; 使用用户自定义的比较函数对数组中的键名进行排序
umask ; 改变当前的 umask
uniqid ; 生成一个唯一ID
unixtojd ; 转变Unix时间戳为Julian Day计数
unlink ; 删除文件
unpack ; Unpack data from binary string
unregister_tick_function ; De-register a function for execution on each tick
unserialize ; 从已存储的表示中创建 PHP 的值
unset ; 释放给定的变量
untaint ; Untaint strings
urldecode ; 解码已编码的 URL 字符串
urlencode ; 编码 URL 字符串
user_error ; trigger_error 的别名
use_soap_error_handler ; Set whether to use the SOAP error handler
usleep ; 以指定的微秒数延迟执行
usort ; 使用用户自定义的比较函数对数组中的值进行排序
utf8_decode ; 将用 UTF-8 方式编码的 ISO-8859-1 字符串转换成单字节的 ISO-8859-1 字符串。
utf8_encode ; 将 ISO-8859-1 编码的字符串转换为 UTF-8 编码
V8Js::executeString ; Execute a string as Javascript code
V8Js::getExtensions ; Return an array of registered extensions
V8Js::getPendingException ; Return pending uncaught Javascript exception
V8Js::registerExtension ; Register Javascript extensions for V8Js
V8Js::__construct ; Construct a new V8Js object
V8JsException::getJsFileName ; The getJsFileName purpose
V8JsException::getJsLineNumber ; The getJsLineNumber purpose
V8JsException::getJsSourceLine ; The getJsSourceLine purpose
V8JsException::getJsTrace ; The getJsTrace purpose
variant_abs ; Returns the absolute value of a variant
variant_add ; &quot;Adds&quot; two variant values together and returns the result
variant_and ; Performs a bitwise AND operation between two variants
variant_cast ; Convert a variant into a new variant object of another type
variant_cat ; concatenates two variant values together and returns the result
variant_cmp ; Compares two variants
variant_date_from_timestamp ; Returns a variant date representation of a Unix timestamp
variant_date_to_timestamp ; Converts a variant date/time value to Unix timestamp
variant_div ; Returns the result from dividing two variants
variant_eqv ; Performs a bitwise equivalence on two variants
variant_fix ; Returns the integer portion of a variant
variant_get_type ; Returns the type of a variant object
variant_idiv ; Converts variants to integers and then returns the result from dividing them
variant_imp ; Performs a bitwise implication on two variants
variant_int ; Returns the integer portion of a variant
variant_mod ; Divides two variants and returns only the remainder
variant_mul ; Multiplies the values of the two variants
variant_neg ; Performs logical negation on a variant
variant_not ; Performs bitwise not negation on a variant
variant_or ; Performs a logical disjunction on two variants
variant_pow ; Returns the result of performing the power function with two variants
variant_round ; Rounds a variant to the specified number of decimal places
variant_set ; Assigns a new value for a variant object
variant_set_type ; Convert a variant into another type &quot;in-place&quot;
variant_sub ; Subtracts the value of the right variant from the left variant value
variant_xor ; Performs a logical exclusion on two variants
VarnishAdmin::auth ; Authenticate on a varnish instance
VarnishAdmin::ban ; Ban URLs using a VCL expression
VarnishAdmin::banUrl ; Ban an URL using a VCL expression
VarnishAdmin::clearPanic ; Clear varnish instance panic messages
VarnishAdmin::connect ; Connect to a varnish instance administration interface
VarnishAdmin::disconnect ; Disconnect from a varnish instance administration interface
VarnishAdmin::getPanic ; Get the last panic message on a varnish instance
VarnishAdmin::getParams ; Fetch current varnish instance configuration parameters
VarnishAdmin::isRunning ; Check if the varnish slave process is currently running
VarnishAdmin::setCompat ; Set the class compat configuration param
VarnishAdmin::setHost ; Set the class host configuration param
VarnishAdmin::setIdent ; Set the class ident configuration param
VarnishAdmin::setParam ; Set configuration param on the current varnish instance
VarnishAdmin::setPort ; Set the class port configuration param
VarnishAdmin::setSecret ; Set the class secret configuration param
VarnishAdmin::setTimeout ; Set the class timeout configuration param
VarnishAdmin::start ; Start varnish worker process
VarnishAdmin::stop ; Stop varnish worker process
VarnishAdmin::__construct ; VarnishAdmin constructor
VarnishLog::getLine ; Get next log line
VarnishLog::getTagName ; Get the log tag string representation by its index
VarnishLog::__construct ; Varnishlog constructor
VarnishStat::getSnapshot ; Get the current varnish instance statistics snapshot
VarnishStat::__construct ; VarnishStat constructor
var_dump ; 打印变量的相关信息
var_export ; 输出或返回一个变量的字符串表示
version_compare ; 对比两个「PHP 规范化」的版本数字字符串
vfprintf ; 将格式化字符串写入流
virtual ; Perform an Apache sub-request
vpopmail_add_alias_domain ; Add an alias for a virtual domain
vpopmail_add_alias_domain_ex ; Add alias to an existing virtual domain
vpopmail_add_domain ; Add a new virtual domain
vpopmail_add_domain_ex ; Add a new virtual domain
vpopmail_add_user ; Add a new user to the specified virtual domain
vpopmail_alias_add ; Insert a virtual alias
vpopmail_alias_del ; Deletes all virtual aliases of a user
vpopmail_alias_del_domain ; Deletes all virtual aliases of a domain
vpopmail_alias_get ; Get all lines of an alias for a domain
vpopmail_alias_get_all ; Get all lines of an alias for a domain
vpopmail_auth_user ; Attempt to validate a username/domain/password
vpopmail_del_domain ; Delete a virtual domain
vpopmail_del_domain_ex ; Delete a virtual domain
vpopmail_del_user ; Delete a user from a virtual domain
vpopmail_error ; Get text message for last vpopmail error
vpopmail_passwd ; Change a virtual user's password
vpopmail_set_user_quota ; Sets a virtual user's quota
vprintf ; 输出格式化字符串
vsprintf ; 返回格式化字符串
w32api_deftype ; 为 w32api_functions 函数定一个类型
w32api_init_dtype ; 创建了一个数据类型的实例，并且将函数传入的值填入其中
w32api_invoke_function ; 带有一个参数的执行一个函数，参数传递在函数名的后面
w32api_register_function ; 从函数库中使用 PHP 注册一个函数 function_name
w32api_set_call_method ; 设置调用的方法
wddx_add_vars ; Add variables to a WDDX packet with the specified ID
wddx_deserialize ; Unserializes a WDDX packet
wddx_packet_end ; Ends a WDDX packet with the specified ID
wddx_packet_start ; Starts a new WDDX packet with structure inside it
wddx_serialize_value ; Serialize a single value into a WDDX packet
wddx_serialize_vars ; Serialize variables into a WDDX packet
WeakMap::count ; Counts the number of live entries in the map
WeakMap::current ; Returns the current value under iteration
WeakMap::key ; Returns the current key under iteration.
WeakMap::next ; Advances to the next map element
WeakMap::offsetExists ; Checks whether a certain object is in the map
WeakMap::offsetGet ; Returns the value pointed to by a certain object
WeakMap::offsetSet ; Updates the map with a new key-value pair
WeakMap::offsetUnset ; Removes an entry from the map
WeakMap::rewind ; Rewinds the iterator to the beginning of the map
WeakMap::valid ; Returns whether the iterator is still on a valid map element
WeakMap::__construct ; Constructs a new map
Weakref::acquire ; Acquires a strong reference on that object
Weakref::get ; Returns the object pointed to by the weak reference
Weakref::release ; Releases a previously acquired reference
Weakref::valid ; Checks whether the object referenced still exists
Weakref::__construct ; Constructs a new weak reference
win32_continue_service ; Resumes a paused service
win32_create_service ; Creates a new service entry in the SCM database
win32_delete_service ; Deletes a service entry from the SCM database
win32_get_last_control_message ; Returns the last control message that was sent to this service
win32_pause_service ; Pauses a service
win32_ps_list_procs ; List running processes
win32_ps_stat_mem ; Stat memory utilization
win32_ps_stat_proc ; Stat process
win32_query_service_status ; Queries the status of a service
win32_set_service_status ; Update the service status
win32_start_service ; Starts a service
win32_start_service_ctrl_dispatcher ; Registers the script with the SCM, so that it can act as the service with the given name
win32_stop_service ; Stops a service
wincache_fcache_fileinfo ; Retrieves information about files cached in the file cache
wincache_fcache_meminfo ; Retrieves information about file cache memory usage
wincache_lock ; Acquires an exclusive lock on a given key
wincache_ocache_fileinfo ; Retrieves information about files cached in the opcode cache
wincache_ocache_meminfo ; Retrieves information about opcode cache memory usage
wincache_refresh_if_changed ; Refreshes the cache entries for the cached files
wincache_rplist_fileinfo ; Retrieves information about resolve file path cache
wincache_rplist_meminfo ; Retrieves information about memory usage by the resolve file path cache
wincache_scache_info ; Retrieves information about files cached in the session cache
wincache_scache_meminfo ; Retrieves information about session cache memory usage
wincache_ucache_add ; Adds a variable in user cache only if variable does not already exist in the cache
wincache_ucache_cas ; Compares the variable with old value and assigns new value to it
wincache_ucache_clear ; Deletes entire content of the user cache
wincache_ucache_dec ; Decrements the value associated with the key
wincache_ucache_delete ; Deletes variables from the user cache
wincache_ucache_exists ; Checks if a variable exists in the user cache
wincache_ucache_get ; Gets a variable stored in the user cache
wincache_ucache_inc ; Increments the value associated with the key
wincache_ucache_info ; Retrieves information about data stored in the user cache
wincache_ucache_meminfo ; Retrieves information about user cache memory usage
wincache_ucache_set ; Adds a variable in user cache and overwrites a variable if it already exists in the cache
wincache_unlock ; Releases an exclusive lock on a given key
wordwrap ; 打断字符串为指定数量的字串
Worker::getCreatorId ; Identification
Worker::getStacked ; Stack Analysis
Worker::getThreadId ; Identification
Worker::isShutdown ; State Detection
Worker::isWorking ; State Detection
Worker::run ; Execution
Worker::shutdown ; Synchronization
Worker::stack ; Stacking
Worker::start ; Execution
Worker::unstack ; Stacking
xattr_get ; Get an extended attribute
xattr_list ; Get a list of extended attributes
xattr_remove ; Remove an extended attribute
xattr_set ; Set an extended attribute
xattr_supported ; Check if filesystem supports extended attributes
xdiff_file_bdiff ; Make binary diff of two files
xdiff_file_bdiff_size ; Read a size of file created by applying a binary diff
xdiff_file_bpatch ; Patch a file with a binary diff
xdiff_file_diff ; Make unified diff of two files
xdiff_file_diff_binary ; Alias of xdiff_file_bdiff
xdiff_file_merge3 ; Merge 3 files into one
xdiff_file_patch ; Patch a file with an unified diff
xdiff_file_patch_binary ; Alias of xdiff_file_bpatch
xdiff_file_rabdiff ; Make binary diff of two files using the Rabin's polynomial fingerprinting algorithm
xdiff_string_bdiff ; Make binary diff of two strings
xdiff_string_bdiff_size ; Read a size of file created by applying a binary diff
xdiff_string_bpatch ; Patch a string with a binary diff
xdiff_string_diff ; Make unified diff of two strings
xdiff_string_diff_binary ; Alias of xdiff_string_bdiff
xdiff_string_merge3 ; Merge 3 strings into one
xdiff_string_patch ; Patch a string with an unified diff
xdiff_string_patch_binary ; Alias of xdiff_string_bpatch
xdiff_string_rabdiff ; Make binary diff of two strings using the Rabin's polynomial fingerprinting algorithm
xhprof_disable ; 停止 xhprof 分析器
xhprof_enable ; 启动 xhprof 性能分析器
xhprof_sample_disable ; 停止 xhprof 性能采样分析器
xhprof_sample_enable ; Description
XMLReader::close ; Close the XMLReader input
XMLReader::expand ; Returns a copy of the current node as a DOM object
XMLReader::getAttribute ; Get the value of a named attribute
XMLReader::getAttributeNo ; Get the value of an attribute by index
XMLReader::getAttributeNs ; Get the value of an attribute by localname and URI
XMLReader::getParserProperty ; Indicates if specified property has been set
XMLReader::isValid ; Indicates if the parsed document is valid
XMLReader::lookupNamespace ; Lookup namespace for a prefix
XMLReader::moveToAttribute ; Move cursor to a named attribute
XMLReader::moveToAttributeNo ; Move cursor to an attribute by index
XMLReader::moveToAttributeNs ; Move cursor to a named attribute
XMLReader::moveToElement ; Position cursor on the parent Element of current Attribute
XMLReader::moveToFirstAttribute ; Position cursor on the first Attribute
XMLReader::moveToNextAttribute ; Position cursor on the next Attribute
XMLReader::next ; Move cursor to next node skipping all subtrees
XMLReader::open ; Set the URI containing the XML to parse
XMLReader::read ; Move to next node in document
XMLReader::readInnerXML ; Retrieve XML from current node
XMLReader::readOuterXML ; Retrieve XML from current node, including it self
XMLReader::readString ; Reads the contents of the current node as a string
XMLReader::setParserProperty ; Set parser options
XMLReader::setRelaxNGSchema ; Set the filename or URI for a RelaxNG Schema
XMLReader::setRelaxNGSchemaSource ; Set the data containing a RelaxNG Schema
XMLReader::setSchema ; Validate document against XSD
XMLReader::XML ; Set the data containing the XML to parse
xmlrpc_decode ; 将 XML 译码为 PHP 本身的类型
xmlrpc_decode_request ; 将 XML 译码为 PHP 本身的类型
xmlrpc_encode ; 为 PHP 的值生成 XML
xmlrpc_encode_request ; 为 PHP 的值生成 XML
xmlrpc_get_type ; 为 PHP 的值获取 xmlrpc 的类型
xmlrpc_is_fault ; Determines if an array value represents an XMLRPC fault
xmlrpc_parse_method_descriptions ; 将 XML 译码成方法描述的列表
xmlrpc_server_add_introspection_data ; 添加自我描述的文档
xmlrpc_server_call_method ; 解析 XML 请求同时调用方法
xmlrpc_server_create ; 创建一个 xmlrpc 服务端
xmlrpc_server_destroy ; 销毁服务端资源
xmlrpc_server_register_introspection_callback ; 注册一个 PHP 函数用于生成文档
xmlrpc_server_register_method ; 注册一个 PHP 函数用于匹配 xmlrpc 方法名
xmlrpc_set_type ; 为一个 PHP 字符串值设置 xmlrpc 的类型、base64 或日期时间
XMLWriter::endAttribute ; End attribute
XMLWriter::endCData ; End current CDATA
XMLWriter::endComment ; Create end comment
XMLWriter::endDocument ; End current document
XMLWriter::endDTD ; End current DTD
XMLWriter::endDTDAttlist ; End current DTD AttList
XMLWriter::endDTDElement ; End current DTD element
XMLWriter::endDTDEntity ; End current DTD Entity
XMLWriter::endElement ; End current element
XMLWriter::endPI ; End current PI
XMLWriter::flush ; Flush current buffer
XMLWriter::fullEndElement ; End current element
XMLWriter::openMemory ; Create new xmlwriter using memory for string output
XMLWriter::openURI ; Create new xmlwriter using source uri for output
XMLWriter::outputMemory ; Returns current buffer
XMLWriter::setIndent ; Toggle indentation on/off
XMLWriter::setIndentString ; Set string used for indenting
XMLWriter::startAttribute ; Create start attribute
XMLWriter::startAttributeNS ; Create start namespaced attribute
XMLWriter::startCData ; Create start CDATA tag
XMLWriter::startComment ; Create start comment
XMLWriter::startDocument ; Create document tag
XMLWriter::startDTD ; Create start DTD tag
XMLWriter::startDTDAttlist ; Create start DTD AttList
XMLWriter::startDTDElement ; Create start DTD element
XMLWriter::startDTDEntity ; Create start DTD Entity
XMLWriter::startElement ; Create start element tag
XMLWriter::startElementNS ; Create start namespaced element tag
XMLWriter::startPI ; Create start PI tag
XMLWriter::text ; Write text
XMLWriter::writeAttribute ; Write full attribute
XMLWriter::writeAttributeNS ; Write full namespaced attribute
XMLWriter::writeCData ; Write full CDATA tag
XMLWriter::writeComment ; Write full comment tag
XMLWriter::writeDTD ; Write full DTD tag
XMLWriter::writeDTDAttlist ; Write full DTD AttList tag
XMLWriter::writeDTDElement ; Write full DTD element tag
XMLWriter::writeDTDEntity ; Write full DTD Entity tag
XMLWriter::writeElement ; Write full element tag
XMLWriter::writeElementNS ; Write full namespaced element tag
XMLWriter::writePI ; Writes a PI
XMLWriter::writeRaw ; Write a raw XML text
xml_error_string ; 获取 XML 解析器的错误字符串
xml_get_current_byte_index ; 获取 XML 解析器的当前字节索引
xml_get_current_column_number ; 获取 XML 解析器的当前列号
xml_get_current_line_number ; 获取 XML 解析器的当前行号
xml_get_error_code ; 获取 XML 解析器错误代码
xml_parse ; 开始解析一个 XML 文档
xml_parser_create ; 建立一个 XML 解析器
xml_parser_create_ns ; 生成一个支持命名空间的 XML 解析器
xml_parser_free ; 释放指定的 XML 解析器
xml_parser_get_option ; 从 XML 解析器获取选项设置信息
xml_parser_set_option ; 为指定 XML 解析进行选项设置
xml_parse_into_struct ; 将 XML 数据解析到数组中
xml_set_character_data_handler ; 建立字符数据处理器
xml_set_default_handler ; 建立默认处理器
xml_set_element_handler ; 建立起始和终止元素处理器
xml_set_end_namespace_decl_handler ; 建立终止命名空间声明处理器
xml_set_external_entity_ref_handler ; 建立外部实体指向处理器
xml_set_notation_decl_handler ; 建立注释声明处理器
xml_set_object ; 在对象中使用 XML 解析器
xml_set_processing_instruction_handler ; 建立处理指令（PI）处理器
xml_set_start_namespace_decl_handler ; 建立起始命名空间声明处理器
xml_set_unparsed_entity_decl_handler ; 建立未解析实体定义声明处理器
XSLTProcessor::getParameter ; Get value of a parameter
XsltProcessor::getSecurityPrefs ; Get security preferences
XSLTProcessor::hasExsltSupport ; Determine if PHP has EXSLT support
XSLTProcessor::importStylesheet ; Import stylesheet
XSLTProcessor::registerPHPFunctions ; Enables the ability to use PHP functions as XSLT functions
XSLTProcessor::removeParameter ; Remove parameter
XSLTProcessor::setParameter ; Set value for a parameter
XSLTProcessor::setProfiling ; Sets profiling output file
XsltProcessor::setSecurityPrefs ; Set security preferences
XSLTProcessor::transformToDoc ; Transform to a DOMDocument
XSLTProcessor::transformToUri ; Transform to URI
XSLTProcessor::transformToXML ; Transform to XML
XSLTProcessor::__construct ; Creates a new XSLTProcessor object
xslt_backend_info ; Returns the information on the compilation settings of the backend
xslt_backend_name ; Returns the name of the backend
xslt_backend_version ; Returns the version number of Sablotron
xslt_create ; Create a new XSLT processor
xslt_errno ; Returns an error number
xslt_error ; Returns an error string
xslt_free ; Free XSLT processor
xslt_getopt ; Get options on a given xsl processor
xslt_process ; Perform an XSLT transformation
xslt_setopt ; Set options on a given XSLT processor
xslt_set_base ; Set the base URI for all XSLT transformations
xslt_set_encoding ; Set the encoding for the parsing of XML documents
xslt_set_error_handler ; Set an error handler for a XSLT processor
xslt_set_log ; Set the log file to write log messages to
xslt_set_object ; Sets the object in which to resolve callback functions
xslt_set_sax_handler ; Set SAX handlers for a XSLT processor
xslt_set_sax_handlers ; Set the SAX handlers to be called when the XML document gets processed
xslt_set_scheme_handler ; Set Scheme handlers for a XSLT processor
xslt_set_scheme_handlers ; Set the scheme handlers for the XSLT processor
Yaf_Action_Abstract::execute ; Action entry point
Yaf_Action_Abstract::getController ; Retrieve controller object
Yaf_Application::app ; Retrive an Application instance
Yaf_Application::bootstrap ; Call bootstrap
Yaf_Application::clearLastError ; Clear the last error info
Yaf_Application::environ ; Retrive environ
Yaf_Application::execute ; Execute a callback
Yaf_Application::getAppDirectory ; Get the application directory
Yaf_Application::getConfig ; Retrive the config instance
Yaf_Application::getDispatcher ; Get Yaf_Dispatcher instance
Yaf_Application::getLastErrorMsg ; Get message of the last occurred error
Yaf_Application::getLastErrorNo ; Get code of last occurred error
Yaf_Application::getModules ; Get defined module names
Yaf_Application::run ; Start Yaf_Application
Yaf_Application::setAppDirectory ; Change the application directory
Yaf_Application::__clone ; Yaf_Application can not be cloned
Yaf_Application::__construct ; Yaf_Application constructor
Yaf_Application::__destruct ; The __destruct purpose
Yaf_Application::__sleep ; Yaf_Application can not be serialized
Yaf_Application::__wakeup ; Yaf_Application can not be unserialized
Yaf_Config_Abstract::get ; Getter
Yaf_Config_Abstract::readonly ; Find a config whether readonly
Yaf_Config_Abstract::set ; Setter
Yaf_Config_Abstract::toArray ; Cast to array
Yaf_Config_Ini::count ; The count purpose
Yaf_Config_Ini::current ; The current purpose
Yaf_Config_Ini::key ; The key purpose
Yaf_Config_Ini::next ; The next purpose
Yaf_Config_Ini::offsetExists ; The offsetExists purpose
Yaf_Config_Ini::offsetGet ; The offsetGet purpose
Yaf_Config_Ini::offsetSet ; The offsetSet purpose
Yaf_Config_Ini::offsetUnset ; The offsetUnset purpose
Yaf_Config_Ini::readonly ; The readonly purpose
Yaf_Config_Ini::rewind ; The rewind purpose
Yaf_Config_Ini::toArray ; Returns a PHP array
Yaf_Config_Ini::valid ; The valid purpose
Yaf_Config_Ini::__construct ; Yaf_Config_Ini constructor
Yaf_Config_Ini::__get ; The __get purpose
Yaf_Config_Ini::__isset ; The __isset purpose
Yaf_Config_Ini::__set ; The __set purpose
Yaf_Config_Simple::count ; The count purpose
Yaf_Config_Simple::current ; The current purpose
Yaf_Config_Simple::key ; The key purpose
Yaf_Config_Simple::next ; The next purpose
Yaf_Config_Simple::offsetExists ; The offsetExists purpose
Yaf_Config_Simple::offsetGet ; The offsetGet purpose
Yaf_Config_Simple::offsetSet ; The offsetSet purpose
Yaf_Config_Simple::offsetUnset ; The offsetUnset purpose
Yaf_Config_Simple::readonly ; The readonly purpose
Yaf_Config_Simple::rewind ; The rewind purpose
Yaf_Config_Simple::toArray ; Returns a PHP array
Yaf_Config_Simple::valid ; The valid purpose
Yaf_Config_Simple::__construct ; The __construct purpose
Yaf_Config_Simple::__get ; The __get purpose
Yaf_Config_Simple::__isset ; The __isset purpose
Yaf_Config_Simple::__set ; The __set purpose
Yaf_Controller_Abstract::display ; The display purpose
Yaf_Controller_Abstract::forward ; foward to another action
Yaf_Controller_Abstract::getInvokeArg ; The getInvokeArg purpose
Yaf_Controller_Abstract::getInvokeArgs ; The getInvokeArgs purpose
Yaf_Controller_Abstract::getModuleName ; Get module name
Yaf_Controller_Abstract::getRequest ; Retrieve current request object
Yaf_Controller_Abstract::getResponse ; Retrieve current response object
Yaf_Controller_Abstract::getView ; Retrieve the view engine
Yaf_Controller_Abstract::getViewpath ; The getViewpath purpose
Yaf_Controller_Abstract::init ; Controller initializer
Yaf_Controller_Abstract::initView ; The initView purpose
Yaf_Controller_Abstract::redirect ; Redirect to a URL
Yaf_Controller_Abstract::render ; Render view template
Yaf_Controller_Abstract::setViewpath ; The setViewpath purpose
Yaf_Controller_Abstract::__clone ; Yaf_Controller_Abstract can not be cloned
Yaf_Controller_Abstract::__construct ; Yaf_Controller_Abstract constructor
Yaf_Dispatcher::autoRender ; Switch on/off autorendering
Yaf_Dispatcher::catchException ; Switch on/off exception catching
Yaf_Dispatcher::disableView ; Disable view rendering
Yaf_Dispatcher::dispatch ; Dispatch a request
Yaf_Dispatcher::enableView ; enable view rendering
Yaf_Dispatcher::flushInstantly ; Switch on/off the instant flushing
Yaf_Dispatcher::getApplication ; Retrive the application
Yaf_Dispatcher::getInstance ; Retrive the dispatcher instance
Yaf_Dispatcher::getRequest ; Retrive the request instance
Yaf_Dispatcher::getRouter ; Retrive router instance
Yaf_Dispatcher::initView ; Initialize view and return it
Yaf_Dispatcher::registerPlugin ; Register a plugin
Yaf_Dispatcher::returnResponse ; The returnResponse purpose
Yaf_Dispatcher::setDefaultAction ; Change default action name
Yaf_Dispatcher::setDefaultController ; Change default controller name
Yaf_Dispatcher::setDefaultModule ; Change default module name
Yaf_Dispatcher::setErrorHandler ; Set error handler
Yaf_Dispatcher::setRequest ; The setRequest purpose
Yaf_Dispatcher::setView ; Set a custom view engine
Yaf_Dispatcher::throwException ; Switch on/off exception throwing
Yaf_Dispatcher::__clone ; Yaf_Dispatcher can not be cloned
Yaf_Dispatcher::__construct ; Yaf_Dispatcher constructor
Yaf_Dispatcher::__sleep ; Yaf_Dispatcher can not be serialized
Yaf_Dispatcher::__wakeup ; Yaf_Dispatcher can not be unserialized
Yaf_Exception::getPrevious ; The getPrevious purpose
Yaf_Exception::__construct ; The __construct purpose
Yaf_Loader::autoload ; The autoload purpose
Yaf_Loader::clearLocalNamespace ; The clearLocalNamespace purpose
Yaf_Loader::getInstance ; The getInstance purpose
Yaf_Loader::getLibraryPath ; get the library path
Yaf_Loader::getLocalNamespace ; The getLocalNamespace purpose
Yaf_Loader::import ; The import purpose
Yaf_Loader::isLocalName ; The isLocalName purpose
Yaf_Loader::registerLocalNamespace ; register local class prefix
Yaf_Loader::setLibraryPath ; Change the library path
Yaf_Loader::__clone ; The __clone purpose
Yaf_Loader::__construct ; The __construct purpose
Yaf_Loader::__sleep ; The __sleep purpose
Yaf_Loader::__wakeup ; The __wakeup purpose
Yaf_Plugin_Abstract::dispatchLoopShutdown ; The dispatchLoopShutdown purpose
Yaf_Plugin_Abstract::dispatchLoopStartup ; The dispatchLoopStartup purpose
Yaf_Plugin_Abstract::postDispatch ; The postDispatch purpose
Yaf_Plugin_Abstract::preDispatch ; The preDispatch purpose
Yaf_Plugin_Abstract::preResponse ; The preResponse purpose
Yaf_Plugin_Abstract::routerShutdown ; The routerShutdown purpose
Yaf_Plugin_Abstract::routerStartup ; RouterStartup hook
Yaf_Registry::del ; Remove an item from registry
Yaf_Registry::get ; Retrieve an item from registry
Yaf_Registry::has ; Check whether an item exists
Yaf_Registry::set ; Add an item into registry
Yaf_Registry::__clone ; The __clone purpose
Yaf_Registry::__construct ; Yaf_Registry implements singleton
Yaf_Request_Abstract::getActionName ; The getActionName purpose
Yaf_Request_Abstract::getBaseUri ; The getBaseUri purpose
Yaf_Request_Abstract::getControllerName ; The getControllerName purpose
Yaf_Request_Abstract::getEnv ; Retrieve ENV varialbe
Yaf_Request_Abstract::getException ; The getException purpose
Yaf_Request_Abstract::getLanguage ; The getLanguage purpose
Yaf_Request_Abstract::getMethod ; The getMethod purpose
Yaf_Request_Abstract::getModuleName ; The getModuleName purpose
Yaf_Request_Abstract::getParam ; The getParam purpose
Yaf_Request_Abstract::getParams ; The getParams purpose
Yaf_Request_Abstract::getRequestUri ; The getRequestUri purpose
Yaf_Request_Abstract::getServer ; Retrieve SERVER variable
Yaf_Request_Abstract::isCli ; The isCli purpose
Yaf_Request_Abstract::isDispatched ; The isDispatched purpose
Yaf_Request_Abstract::isGet ; The isGet purpose
Yaf_Request_Abstract::isHead ; The isHead purpose
Yaf_Request_Abstract::isOptions ; The isOptions purpose
Yaf_Request_Abstract::isPost ; The isPost purpose
Yaf_Request_Abstract::isPut ; The isPut purpose
Yaf_Request_Abstract::isRouted ; The isRouted purpose
Yaf_Request_Abstract::isXmlHttpRequest ; The isXmlHttpRequest purpose
Yaf_Request_Abstract::setActionName ; The setActionName purpose
Yaf_Request_Abstract::setBaseUri ; set base URI
Yaf_Request_Abstract::setControllerName ; The setControllerName purpose
Yaf_Request_Abstract::setDispatched ; The setDispatched purpose
Yaf_Request_Abstract::setModuleName ; The setModuleName purpose
Yaf_Request_Abstract::setParam ; The setParam purpose
Yaf_Request_Abstract::setRequestUri ; The setRequestUri purpose
Yaf_Request_Abstract::setRouted ; The setRouted purpose
Yaf_Request_Http::get ; Retrieve variable from client
Yaf_Request_Http::getCookie ; Retrieve Cookie varialbe
Yaf_Request_Http::getFiles ; The getFiles purpose
Yaf_Request_Http::getPost ; Retrieve POST variable
Yaf_Request_Http::getQuery ; Fetch a query parameter
Yaf_Request_Http::getRequest ; The getRequest purpose
Yaf_Request_Http::isXmlHttpRequest ; Whether a Ajax Request
Yaf_Request_Http::__clone ; The __clone purpose
Yaf_Request_Http::__construct ; The __construct purpose
Yaf_Request_Simple::get ; The get purpose
Yaf_Request_Simple::getCookie ; The getCookie purpose
Yaf_Request_Simple::getFiles ; The getFiles purpose
Yaf_Request_Simple::getPost ; The getPost purpose
Yaf_Request_Simple::getQuery ; The getQuery purpose
Yaf_Request_Simple::getRequest ; The getRequest purpose
Yaf_Request_Simple::isXmlHttpRequest ; The isXmlHttpRequest purpose
Yaf_Request_Simple::__clone ; The __clone purpose
Yaf_Request_Simple::__construct ; The __construct purpose
Yaf_Response_Abstract::appendBody ; append to body
Yaf_Response_Abstract::clearBody ; The clearBody purpose
Yaf_Response_Abstract::clearHeaders ; The clearHeaders purpose
Yaf_Response_Abstract::getBody ; Retrieve a exists content
Yaf_Response_Abstract::getHeader ; The getHeader purpose
Yaf_Response_Abstract::prependBody ; The prependBody purpose
Yaf_Response_Abstract::response ; send response
Yaf_Response_Abstract::setAllHeaders ; The setAllHeaders purpose
Yaf_Response_Abstract::setBody ; Set content to response
Yaf_Response_Abstract::setHeader ; The setHeader purpose
Yaf_Response_Abstract::setRedirect ; The setRedirect purpose
Yaf_Response_Abstract::__clone ; The __clone purpose
Yaf_Response_Abstract::__construct ; The __construct purpose
Yaf_Response_Abstract::__destruct ; The __destruct purpose
Yaf_Response_Abstract::__toString ; The __toString purpose
Yaf_Router::addConfig ; Add config-defined routes into Router
Yaf_Router::addRoute ; Add new Route into Router
Yaf_Router::getCurrentRoute ; Get the effective route name
Yaf_Router::getRoute ; Retrieve a route by name
Yaf_Router::getRoutes ; Retrieve registered routes
Yaf_Router::route ; The route purpose
Yaf_Router::__construct ; Yaf_Router constructor
Yaf_Route_Interface::route ; route a request
Yaf_Route_Map::route ; The route purpose
Yaf_Route_Map::__construct ; The __construct purpose
Yaf_Route_Regex::route ; The route purpose
Yaf_Route_Regex::__construct ; The __construct purpose
Yaf_Route_Rewrite::route ; The route purpose
Yaf_Route_Rewrite::__construct ; Yaf_Route_Rewrite constructor
Yaf_Route_Simple::route ; Route a request
Yaf_Route_Simple::__construct ; Yaf_Route_Simple constructor
Yaf_Route_Static::match ; The match purpose
Yaf_Route_Static::route ; Route a request
Yaf_Route_Supervar::route ; The route purpose
Yaf_Route_Supervar::__construct ; The __construct purpose
Yaf_Session::count ; The count purpose
Yaf_Session::current ; The current purpose
Yaf_Session::del ; The del purpose
Yaf_Session::getInstance ; The getInstance purpose
Yaf_Session::has ; The has purpose
Yaf_Session::key ; The key purpose
Yaf_Session::next ; The next purpose
Yaf_Session::offsetExists ; The offsetExists purpose
Yaf_Session::offsetGet ; The offsetGet purpose
Yaf_Session::offsetSet ; The offsetSet purpose
Yaf_Session::offsetUnset ; The offsetUnset purpose
Yaf_Session::rewind ; The rewind purpose
Yaf_Session::start ; The start purpose
Yaf_Session::valid ; The valid purpose
Yaf_Session::__clone ; The __clone purpose
Yaf_Session::__construct ; The __construct purpose
Yaf_Session::__get ; The __get purpose
Yaf_Session::__isset ; The __isset purpose
Yaf_Session::__set ; The __set purpose
Yaf_Session::__sleep ; The __sleep purpose
Yaf_Session::__unset ; The __unset purpose
Yaf_Session::__wakeup ; The __wakeup purpose
Yaf_View_Interface::assign ; Assign value to View engine
Yaf_View_Interface::display ; Render and output a template
Yaf_View_Interface::getScriptPath ; The getScriptPath purpose
Yaf_View_Interface::render ; Render a template
Yaf_View_Interface::setScriptPath ; The setScriptPath purpose
Yaf_View_Simple::assign ; Assign values
Yaf_View_Simple::assignRef ; The assignRef purpose
Yaf_View_Simple::clear ; Clear Assigned values
Yaf_View_Simple::display ; Render and display
Yaf_View_Simple::eval ; Render template
Yaf_View_Simple::getScriptPath ; Get templates directory
Yaf_View_Simple::render ; Render template
Yaf_View_Simple::setScriptPath ; Set tempaltes directory
Yaf_View_Simple::__construct ; Constructor of Yaf_View_Simple
Yaf_View_Simple::__get ; Retrieve assigned variable
Yaf_View_Simple::__isset ; The __isset purpose
Yaf_View_Simple::__set ; Set value to engine
yaml_emit ; Returns the YAML representation of a value
yaml_emit_file ; Send the YAML representation of a value to a file
yaml_parse ; Parse a YAML stream
yaml_parse_file ; Parse a YAML stream from a file
yaml_parse_url ; Parse a Yaml stream from a URL
yaz_addinfo ; Returns additional error information
yaz_ccl_conf ; Configure CCL parser
yaz_ccl_parse ; Invoke CCL Parser
yaz_close ; Close YAZ connection
yaz_connect ; Prepares for a connection to a Z39.50 server
yaz_database ; Specifies the databases within a session
yaz_element ; Specifies Element-Set Name for retrieval
yaz_errno ; Returns error number
yaz_error ; Returns error description
yaz_es ; Prepares for an Extended Service Request
yaz_es_result ; Inspects Extended Services Result
yaz_get_option ; Returns value of option for connection
yaz_hits ; Returns number of hits for last search
yaz_itemorder ; Prepares for Z39.50 Item Order with an ILL-Request package
yaz_present ; Prepares for retrieval (Z39.50 present)
yaz_range ; Specifies a range of records to retrieve
yaz_record ; Returns a record
yaz_scan ; Prepares for a scan
yaz_scan_result ; Returns Scan Response result
yaz_schema ; Specifies schema for retrieval
yaz_search ; Prepares for a search
yaz_set_option ; Sets one or more options for connection
yaz_sort ; Sets sorting criteria
yaz_syntax ; Specifies the preferred record syntax for retrieval
yaz_wait ; Wait for Z39.50 requests to complete
yp_all ; Traverse the map and call a function on each entry
yp_cat ; Return an array containing the entire map
yp_errno ; Returns the error code of the previous operation
yp_err_string ; Returns the error string associated with the given error code
yp_first ; Returns the first key-value pair from the named map
yp_get_default_domain ; Fetches the machine's default NIS domain
yp_master ; Returns the machine name of the master NIS server for a map
yp_match ; Returns the matched line
yp_next ; Returns the next key-value pair in the named map
yp_order ; Returns the order number for a map
zend_logo_guid ; 获取 Zend guid
zend_thread_id ; 返回当前线程的唯一识别符
zend_version ; 获取当前 Zend 引擎的版本
ZipArchive::addEmptyDir ; Add a new directory
ZipArchive::addFile ; Adds a file to a ZIP archive from the given path
ZipArchive::addFromString ; Add a file to a ZIP archive using its contents
ZipArchive::close ; Close the active archive (opened or newly created)
ZipArchive::deleteIndex ; delete an entry in the archive using its index
ZipArchive::deleteName ; delete an entry in the archive using its name
ZipArchive::extractTo ; Extract the archive contents
ZipArchive::getArchiveComment ; Returns the Zip archive comment
ZipArchive::getCommentIndex ; Returns the comment of an entry using the entry index
ZipArchive::getCommentName ; Returns the comment of an entry using the entry name
ZipArchive::getFromIndex ; Returns the entry contents using its index
ZipArchive::getFromName ; Returns the entry contents using its name
ZipArchive::getNameIndex ; Returns the name of an entry using its index
ZipArchive::getStatusString ; Returns the status error message, system and/or zip messages
ZipArchive::getStream ; Get a file handler to the entry defined by its name (read only).
ZipArchive::locateName ; Returns the index of the entry in the archive
ZipArchive::open ; Open a ZIP file archive
ZipArchive::renameIndex ; Renames an entry defined by its index
ZipArchive::renameName ; Renames an entry defined by its name
ZipArchive::setArchiveComment ; Set the comment of a ZIP archive
ZipArchive::setCommentIndex ; Set the comment of an entry defined by its index
ZipArchive::setCommentName ; Set the comment of an entry defined by its name
ZipArchive::statIndex ; Get the details of an entry defined by its index.
ZipArchive::statName ; Get the details of an entry defined by its name.
ZipArchive::unchangeAll ; Undo all changes done in the archive
ZipArchive::unchangeArchive ; Revert all global changes done in the archive.
ZipArchive::unchangeIndex ; Revert all changes done to an entry at the given index
ZipArchive::unchangeName ; Revert all changes done to an entry with the given name.
zip_close ; Close a ZIP file archive
zip_entry_close ; Close a directory entry
zip_entry_compressedsize ; Retrieve the compressed size of a directory entry
zip_entry_compressionmethod ; Retrieve the compression method of a directory entry
zip_entry_filesize ; Retrieve the actual file size of a directory entry
zip_entry_name ; Retrieve the name of a directory entry
zip_entry_open ; Open a directory entry for reading
zip_entry_read ; Read from an open directory entry
zip_open ; Open a ZIP file archive
zip_read ; Read next entry in a ZIP file archive
zlib:// ; 压缩流
zlib_decode ; Uncompress any raw/gzip/zlib encoded data
zlib_encode ; Compress data with the specified encoding
zlib_get_coding_type ; Returns the coding type used for output compression
__autoload ; 尝试加载未定义的类
__halt_compiler ; 中断编译器的执行
